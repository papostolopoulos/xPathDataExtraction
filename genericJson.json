MOTHER
{
  "extract": {
    "extractEmbedded": false,
    "source": null,
    "schema": [
      {
        "url": "http://ws.rmf.yahoo.com:4080/rmf/v1/schema?type=schema.org&name=y.2.0&format=json",
        "ns": "http://schema.org",
        "context": {
          "@type": [
            "Coupon"
          ]
        }
      }
    ],
    "entityRules": [
      {
        "id": "0386bd07-e736-4a45-9305-400e673ab76d",
        "repeating": true,
        "locations": [
          "/"
        ],
        "type": "http://schema.org/Coupon",
        "javascript": null,
        "entityIdRef": null,
        "attributes": []
      }
    ],
    "edgeRules": [],
    "entityNS": null
  },
  "metaData": {
    "useVTDXML": "true",
    "ignoredValidations": null,
    "footerRatio": "0.3",
    "footerRatioFallBack": "0.4"
  },
  "extractV2": {
    "entityRules": [
      {
        "id": "f0cb28cf-6320-4046-82e9-0bf962223333",
        "type": "http://schema.org/Coupon",
        "attributes": [
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(@alt, 'REWAD', 'rewad'), \"reward\") or contains(translate(@alt, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@alt, 'CASH', 'cash'), \"cash\") or contains(translate(@alt, 'CODE', 'code'), \"code\") or contains(translate(@alt, 'REDM', 'redm'), \"redeem\") or contains(translate(@alt, 'REWARDS', 'rewards'), \"rewards\") or contains(translate(@alt, 'PROMTIN', 'promtin'), \"promotion\") or contains(translate(@alt, 'SHIPNG', 'shipng'), \"shipping\") ]/@alt",
                  "js": "function transform(data, prevData) {\n    var invalid = /\\@import\\s+url/i;\n  \n    var percentOff = /\\d+%?\\s*off/i;\n    var percentDiscount = /\\d+%\\s*discount/i;\n    var dollarOff = /\\d+(?:\\.\\d+)?\\s*off/i;\n    var percentBack = /\\d+%\\s*back/i;\n\n    var percentReward = /\\d+%\\s*reward/i;\n    var percentCoupon = /(\\d+%|\\$\\d+)\\s*(?:promotional\\s+)?coupon/i;\n    var percentSaving = /\\d+%\\s*saving/i;\n\n    var earnUpto = /earn\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n\n    var save = /save\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n  \n    var offers = /\\s+offer[s]?\\s+/i;\n    var promoCode = /promo(?:tion)\\s+code\\s+/i;\n    var negPromoCode = /^into\\sthe/i;\n    \n    var redeem = /\\sredeem\\s/i;\n    var redeem2 = /\\.[^.]*?\\sredeem\\s/i;\n  \n    var earnedReward = /\\sbody\\sworks\\sreward/i;\n    var freeShip = /free\\sship/i;\n\n    if (!data || data == \"\") {\n        return null;\n    }\n\tvar match = invalid.exec(data);\n    if (match){\n      return null;\n    }\n  \n    match = percentOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n      match = percentDiscount.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = dollarOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentBack.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentCoupon.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentSaving.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = earnUpto.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = save.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = offers.exec(data);\n    if (match){\n      if(data.length > 100){\n        return null;\n      }\n      else if(data.length < 50){\n        var digitMatch = /(\\d+%|\\$\\d+)\\s+/;\n        var match1 = digitMatch.exec(data);\n        if(match1) {\n          return formatDescription(data);\n        }\n      }\n      else {\n        return formatDescription(data);\n      }\n    }\n  \n    match = promoCode.exec(data);\n    if (match){\n      var match2 = negPromoCode.exec(data);\n      if( !match2)\n      return formatDescription(data);\n    }\n  \n    match = redeem.exec(data);\n    var match2 = redeem2.exec(data);\n    if (match){\n      if(match2 && match2.index){\n        data = data.substr(match2.index+1);\n      }\n      return formatDescription(data);\n    }\n    match = earnedReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n    match = freeShip.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    return null;\n}\n\nfunction formatDescription(desc){\n    if(desc && desc.length > 100){\n        var tPos = [desc.indexOf(\". \", 80) , desc.indexOf(\"! \", 80) , desc.indexOf(\"? \", 80), desc.indexOf(\"; \", 80)];\n        \n        var splitPos = min(tPos, desc.length - 1)\n        return desc.substr(0, splitPos + 1);\n    }\n    return desc;\n}\n\nfunction min(posList, max){\n    var selPos = max;\n    for(var i = 0; i < posList.length; i++) {\n        if(posList[i] == -1){\n            continue;\n        }\n        if(selPos > posList[i]){\n          selPos = posList[i];\n        }\n    }\n    return selPos;\n}\n",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@title, 'OF', 'of'), \" off \") or contains(@title, \"0%\") or contains(@title, \"1%\") or contains(@title, \"2%\") or contains(@title, \"3%\") or contains(@title, \"4%\") or contains(@title, \"5%\") or contains(@title, \"6%\") or contains(@title, \"7%\") or contains(@title, \"8%\") or contains(@title, \"9%\") or contains(translate(@title, 'REWAD', 'rewad'), \"reward\") or contains(translate(@title, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@title, 'CASH', 'cash'), \"cash\") or contains(translate(@title, 'CODE', 'code'), \"code\") or contains(translate(@title, 'REDM', 'redm'), \"redeem\") or contains(translate(@title, 'REWARDS', 'rewards'), \"rewards\") or contains(translate(@title, 'PROMTIN', 'promtin'), \"promotion\") or contains(translate(@title, 'SHIPNG', 'shipng'), \"shipping\") ]/@title",
                  "js": "function transform(data, prevData) {\n    var invalid = /\\@import\\s+url/i;\n  \n    var percentOff = /\\d+%?\\s*off/i;\n    var percentDiscount = /\\d+%\\s*discount/i;\n    var dollarOff = /\\d+(?:\\.\\d+)?\\s*off/i;\n    var percentBack = /\\d+%\\s*back/i;\n\n    var percentReward = /\\d+%\\s*reward/i;\n    var percentCoupon = /(\\d+%|\\$\\d+)\\s*(?:promotional\\s+)?coupon/i;\n    var percentSaving = /\\d+%\\s*saving/i;\n\n    var earnUpto = /earn\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n\n    var save = /save\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n  \n    var offers = /\\s+offer[s]?\\s+/i;\n    var promoCode = /promo(?:tion)\\s+code\\s+/i;\n    var negPromoCode = /^into\\sthe/i;\n    \n    var redeem = /\\sredeem\\s/i;\n    var redeem2 = /\\.[^.]*?\\sredeem\\s/i;\n  \n    var earnedReward = /\\sbody\\sworks\\sreward/i;\n    var freeShip = /free\\sship/i;\n\n    if (!data || data == \"\") {\n        return null;\n    }\n\tvar match = invalid.exec(data);\n    if (match){\n      return null;\n    }\n  \n    match = percentOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n      match = percentDiscount.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = dollarOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentBack.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentCoupon.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentSaving.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = earnUpto.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = save.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = offers.exec(data);\n    if (match){\n      if(data.length > 100){\n        return null;\n      }\n      else if(data.length < 50){\n        var digitMatch = /(\\d+%|\\$\\d+)\\s+/;\n        var match1 = digitMatch.exec(data);\n        if(match1) {\n          return formatDescription(data);\n        }\n      }\n      else {\n        return formatDescription(data);\n      }\n    }\n  \n    match = promoCode.exec(data);\n    if (match){\n      var match2 = negPromoCode.exec(data);\n      if( !match2)\n      return formatDescription(data);\n    }\n  \n    match = redeem.exec(data);\n    var match2 = redeem2.exec(data);\n    if (match){\n      if(match2 && match2.index){\n        data = data.substr(match2.index+1);\n      }\n      return formatDescription(data);\n    }\n    match = earnedReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n    match = freeShip.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    return null;\n}\n\nfunction formatDescription(desc){\n    if(desc && desc.length > 100){\n        var tPos = [desc.indexOf(\". \", 80) , desc.indexOf(\"! \", 80) , desc.indexOf(\"? \", 80), desc.indexOf(\"; \", 80)];\n        \n        var splitPos = min(tPos, desc.length - 1)\n        return desc.substr(0, splitPos + 1);\n    }\n    return desc;\n}\n\nfunction min(posList, max){\n    var selPos = max;\n    for(var i = 0; i < posList.length; i++) {\n        if(posList[i] == -1){\n            continue;\n        }\n        if(selPos > posList[i]){\n          selPos = posList[i];\n        }\n    }\n    return selPos;\n}\n",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "3": [
                {
                  "xpath": "//b[contains(translate(., 'OF', 'of'), \" off \") or contains(translate(., 'OFER', 'ofer'), \"offer\") or contains(translate(., 'REWAD', 'rewad'), \"reward\") or contains(translate(., 'COUPN', 'coupn'), \"coupon\") or contains(translate(., 'CASH', 'cash'), \"cash\") or contains(translate(., 'CODE', 'code'), \"code\") or contains(., \"0%\") or contains(., \"1%\") or contains(., \"2%\") or contains(., \"3%\") or contains(., \"4%\") or contains(., \"5%\") or contains(., \"6%\") or contains(., \"7%\") or contains(., \"8%\") or contains(., \"9%\") ]",
                  "js": "function transform(data, prevData) {\n    var invalid = /\\@import\\s+url/i;\n  \n    var percentOff = /\\d+%?\\s*off/i;\n    var percentDiscount = /\\d+%\\s*discount/i;\n    var dollarOff = /\\d+(?:\\.\\d+)?\\s*off/i;\n    var percentBack = /\\d+%\\s*back/i;\n\n    var percentReward = /\\d+%\\s*reward/i;\n    var percentCoupon = /(\\d+%|\\$\\d+)\\s*(?:promotional\\s+)?coupon/i;\n    var percentSaving = /\\d+%\\s*saving/i;\n\n    var earnUpto = /earn\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n\n    var save = /save\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n  \n    var offers = /\\s+offer[s]?\\s+/i;\n    var promoCode = /promo(?:tion)\\s+code\\s+/i;\n    var negPromoCode = /^into\\sthe/i;\n    \n    var redeem = /\\sredeem\\s/i;\n    var redeem2 = /\\.[^.]*?\\sredeem\\s/i;\n  \n    var earnedReward = /\\sbody\\sworks\\sreward/i;\n    var freeShip = /free\\sship/i;\n\n    if (!data || data == \"\") {\n        return null;\n    }\n\tvar match = invalid.exec(data);\n    if (match){\n      return null;\n    }\n  \n    match = percentOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n      match = percentDiscount.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = dollarOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentBack.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentCoupon.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentSaving.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = earnUpto.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = save.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = offers.exec(data);\n    if (match){\n      if(data.length > 100){\n        return null;\n      }\n      else if(data.length < 50){\n        var digitMatch = /(\\d+%|\\$\\d+)\\s+/;\n        var match1 = digitMatch.exec(data);\n        if(match1) {\n          return formatDescription(data);\n        }\n      }\n      else {\n        return formatDescription(data);\n      }\n    }\n  \n    match = promoCode.exec(data);\n    if (match){\n      var match2 = negPromoCode.exec(data);\n      if( !match2)\n      return formatDescription(data);\n    }\n  \n    match = redeem.exec(data);\n    var match2 = redeem2.exec(data);\n    if (match){\n      if(match2 && match2.index){\n        data = data.substr(match2.index+1);\n      }\n      return formatDescription(data);\n    }\n    match = earnedReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n    match = freeShip.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    return null;\n}\n\nfunction formatDescription(desc){\n    if(desc && desc.length > 100){\n        var tPos = [desc.indexOf(\". \", 80) , desc.indexOf(\"! \", 80) , desc.indexOf(\"? \", 80), desc.indexOf(\"; \", 80)];\n        \n        var splitPos = min(tPos, desc.length - 1)\n        return desc.substr(0, splitPos + 1);\n    }\n    return desc;\n}\n\nfunction min(posList, max){\n    var selPos = max;\n    for(var i = 0; i < posList.length; i++) {\n        if(posList[i] == -1){\n            continue;\n        }\n        if(selPos > posList[i]){\n          selPos = posList[i];\n        }\n    }\n    return selPos;\n}\n",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "4": [
                {
                  "xpath": "//strong[contains(translate(., 'OF', 'of'), \" off \") or contains(translate(., 'OFER', 'ofer'), \"offer\") or contains(translate(., 'REWAD', 'rewad'), \"reward\") or contains(translate(., 'COUPN', 'coupn'), \"coupon\") or contains(translate(., 'CASH', 'cash'), \"cash\")  or contains(translate(., 'CODE', 'code'), \"code\") or contains(., \"0%\") or contains(., \"1%\") or contains(., \"2%\") or contains(., \"3%\") or contains(., \"4%\") or contains(., \"5%\") or contains(., \"6%\") or contains(., \"7%\") or contains(., \"8%\") or contains(., \"9%\")]",
                  "js": "function transform(data, prevData) {\n    var invalid = /\\@import\\s+url/i;\n  \n    var percentOff = /\\d+%?\\s*off/i;\n    var percentDiscount = /\\d+%\\s*discount/i;\n    var dollarOff = /\\d+(?:\\.\\d+)?\\s*off/i;\n    var percentBack = /\\d+%\\s*back/i;\n\n    var percentReward = /\\d+%\\s*reward/i;\n    var percentCoupon = /(\\d+%|\\$\\d+)\\s*(?:promotional\\s+)?coupon/i;\n    var percentSaving = /\\d+%\\s*saving/i;\n\n    var earnUpto = /earn\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n\n    var save = /save\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n  \n    var offers = /\\s+offer[s]?\\s+/i;\n    var promoCode = /promo(?:tion)\\s+code\\s+/i;\n    var negPromoCode = /^into\\sthe/i;\n    \n    var redeem = /\\sredeem\\s/i;\n    var redeem2 = /\\.[^.]*?\\sredeem\\s/i;\n  \n    var earnedReward = /\\sbody\\sworks\\sreward/i;\n    var freeShip = /free\\sship/i;\n\n    if (!data || data == \"\") {\n        return null;\n    }\n\tvar match = invalid.exec(data);\n    if (match){\n      return null;\n    }\n  \n    match = percentOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n      match = percentDiscount.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = dollarOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentBack.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentCoupon.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentSaving.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = earnUpto.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = save.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = offers.exec(data);\n    if (match){\n      if(data.length > 100){\n        return null;\n      }\n      else if(data.length < 50){\n        var digitMatch = /(\\d+%|\\$\\d+)\\s+/;\n        var match1 = digitMatch.exec(data);\n        if(match1) {\n          return formatDescription(data);\n        }\n      }\n      else {\n        return formatDescription(data);\n      }\n    }\n  \n    match = promoCode.exec(data);\n    if (match){\n      var match2 = negPromoCode.exec(data);\n      if( !match2)\n      return formatDescription(data);\n    }\n  \n    match = redeem.exec(data);\n    var match2 = redeem2.exec(data);\n    if (match){\n      if(match2 && match2.index){\n        data = data.substr(match2.index+1);\n      }\n      return formatDescription(data);\n    }\n    match = earnedReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n    match = freeShip.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    return null;\n}\n\nfunction formatDescription(desc){\n    if(desc && desc.length > 100){\n        var tPos = [desc.indexOf(\". \", 80) , desc.indexOf(\"! \", 80) , desc.indexOf(\"? \", 80), desc.indexOf(\"; \", 80)];\n        \n        var splitPos = min(tPos, desc.length - 1)\n        return desc.substr(0, splitPos + 1);\n    }\n    return desc;\n}\n\nfunction min(posList, max){\n    var selPos = max;\n    for(var i = 0; i < posList.length; i++) {\n        if(posList[i] == -1){\n            continue;\n        }\n        if(selPos > posList[i]){\n          selPos = posList[i];\n        }\n    }\n    return selPos;\n}\n",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "5": [
                {
                  "xpath": "//text()[not(ancestor::b or ancestor::strong)][contains(translate(., 'OF', 'of'), \" off \") or contains(translate(., 'OFER', 'ofer'), \"offer\") or contains(translate(., 'REWAD', 'rewad'), \"reward\") or contains(translate(., 'COUPN', 'coupn'), \"coupon\") or contains(translate(., 'CASH', 'cash'), \"cash\") or contains(translate(., 'CODE', 'code'), \"code\") or contains(., \"0%\") or contains(., \"1%\") or contains(., \"2%\") or contains(., \"3%\") or contains(., \"4%\") or contains(., \"5%\") or contains(., \"6%\") or contains(., \"7%\") or contains(., \"8%\") or contains(., \"9%\") or contains(translate(., 'REDM', 'redm'), \"redeem\") or contains(translate(., 'REWARDS', 'rewards'), \"rewards\") or contains(translate(., 'PROMTIN', 'promtin'), \"promotion\") or contains(translate(., 'SHIPNG', 'shipng'), \"shipping\") ]",
                  "js": "function transform(data, prevData) {\n    var invalid = /\\@import\\s+url/i;\n  \n    var percentOff = /\\d+%?\\s*off/i;\n    var percentDiscount = /\\d+%\\s*discount/i;\n    var dollarOff = /\\d+(?:\\.\\d+)?\\s*off/i;\n    var percentBack = /\\d+%\\s*back/i;\n\n    var percentReward = /\\d+%\\s*reward/i;\n    var percentCoupon = /(\\d+%|\\$\\d+)\\s*(?:promotional\\s+)?coupon/i;\n    var percentSaving = /\\d+%\\s*saving/i;\n\n    var earnUpto = /earn\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n\n    var save = /save\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n  \n    var offers = /\\s+offer[s]?\\s+/i;\n    var promoCode = /promo(?:tion)\\s+code\\s+/i;\n    var negPromoCode = /^into\\sthe/i;\n    \n    var redeem = /\\sredeem\\s/i;\n    var redeem2 = /\\.[^.]*?\\sredeem\\s/i;\n  \n    var earnedReward = /\\sbody\\sworks\\sreward/i;\n    var freeShip = /free\\sship/i;\n\n    if (!data || data == \"\") {\n        return null;\n    }\n\tvar match = invalid.exec(data);\n    if (match){\n      return null;\n    }\n  \n    match = percentOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n      match = percentDiscount.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = dollarOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentBack.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentCoupon.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentSaving.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = earnUpto.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = save.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = offers.exec(data);\n    if (match){\n      if(data.length > 100){\n        return null;\n      }\n      else if(data.length < 50){\n        var digitMatch = /(\\d+%|\\$\\d+)\\s+/;\n        var match1 = digitMatch.exec(data);\n        if(match1) {\n          return formatDescription(data);\n        }\n      }\n      else {\n        return formatDescription(data);\n      }\n    }\n  \n    match = promoCode.exec(data);\n    if (match){\n      var match2 = negPromoCode.exec(data);\n      if( !match2)\n      return formatDescription(data);\n    }\n  \n    match = redeem.exec(data);\n    var match2 = redeem2.exec(data);\n    if (match){\n      if(match2 && match2.index){\n        data = data.substr(match2.index+1);\n      }\n      return formatDescription(data);\n    }\n    match = earnedReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n    match = freeShip.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    return null;\n}\n\nfunction formatDescription(desc){\n    if(desc && desc.length > 100){\n        var tPos = [desc.indexOf(\". \", 80) , desc.indexOf(\"! \", 80) , desc.indexOf(\"? \", 80), desc.indexOf(\"; \", 80)];\n        \n        var splitPos = min(tPos, desc.length - 1)\n        return desc.substr(0, splitPos + 1);\n    }\n    return desc;\n}\n\nfunction min(posList, max){\n    var selPos = max;\n    for(var i = 0; i < posList.length; i++) {\n        if(posList[i] == -1){\n            continue;\n        }\n        if(selPos > posList[i]){\n          selPos = posList[i];\n        }\n    }\n    return selPos;\n}\n",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/description",
            "dataTypes": [
              "Text"
            ]
          },
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//text()[contains(translate(., 'VALID', 'valid'), ' valid ') or contains(translate(., 'T', 't'), ' through ') or contains(translate(., 'ENDS', 'ends'), ' ends ') or contains(translate(., 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(., 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(., 'OFERGD', 'ofergd'), ' offer good')]",
                  "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ');\n\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@alt, 'VALID', 'valid'), ' valid ') or contains(translate(@alt, 'T', 't'), ' through ') or contains(translate(@alt, 'ENDS', 'ends'), ' ends ') or contains(translate(@alt, 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(@alt, 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(@alt, 'OFERGD', 'ofergd'), ' offer good')]/@alt",
                  "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ');\n\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "3": [
                {
                  "xpath": "//img[contains(translate(@title, 'VALID', 'valid'), ' valid ') or contains(translate(@title, 'T', 't'), ' through ') or contains(translate(@title, 'ENDS', 'ends'), ' ends ') or contains(translate(@title, 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(@title, 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(@title, 'OFERGD', 'ofergd'), ' offer good')]/@title",
                  "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ');\n\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/validThrough",
            "dataTypes": [
              "DateTime"
            ]
          },
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(., 'REWAD', 'rewad'), \"reward\") or contains(translate(., 'COUPN', 'coupn'), \"coupon\") or contains(translate(., 'CASH', 'cash'), \"cash\") or contains(translate(., 'CODE', 'code'), \"code\") ]/parent::a[1]/@href",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@title, 'OF', 'of'), \" off \") or contains(@title, \"0%\") or contains(@title, \"1%\") or contains(@title, \"2%\") or contains(@title, \"3%\") or contains(@title, \"4%\") or contains(@title, \"5%\") or contains(@title, \"6%\") or contains(@title, \"7%\") or contains(@title, \"8%\") or contains(@title, \"9%\") or contains(translate(., 'REWAD', 'rewad'), \"reward\") or contains(translate(., 'COUPN', 'coupn'), \"coupon\") or contains(translate(., 'CASH', 'cash'), \"cash\") or contains(translate(., 'CODE', 'code'), \"code\") ]/parent::a[1]/@href",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/url",
            "dataTypes": [
              "URL"
            ]
          }
        ]
      },
      {
        "id": "5aabd401-e355-41b2-9c9d-9e9ee3a1e70c",
        "type": "http://schema.org/Organization",
        "attributes": [
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "concat(\"HereTheNameOfTheBroker\", \"\")",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "STRING"
                }
              ]
            },
            "name": "http://schema.org/name",
            "dataTypes": [
              "Text"
            ]
          }
        ]
      },
      {
        "id": "a3f2df32-7b35-4c77-8513-72ac9e26648e",
        "type": "http://schema.org/ImageObject",
        "attributes": [
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(@alt, 'REWAD', 'rewad'), \"reward\") or contains(translate(@alt, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@alt, 'CASH', 'cash'), \"cash\") or contains(translate(@alt, 'CODE', 'code'), \"code\") or contains(translate(@alt, 'SHIPNG', 'shipng'), \"shipping\")]/@src",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@title, 'OF', 'of'), \" off \") or contains(@title, \"0%\") or contains(@title, \"1%\") or contains(@title, \"2%\") or contains(@title, \"3%\") or contains(@title, \"4%\") or contains(@title, \"5%\") or contains(@title, \"6%\") or contains(@title, \"7%\") or contains(@title, \"8%\") or contains(@title, \"9%\") or contains(translate(@title, 'REWAD', 'rewad'), \"reward\") or contains(translate(@title, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@title, 'CASH', 'cash'), \"cash\") or contains(translate(@title, 'CODE', 'code'), \"code\") or contains(translate(@title, 'SHIPNG', 'shipng'), \"shipping\")]/@src",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/url",
            "dataTypes": [
              "URL"
            ]
          },
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(@alt, 'REWAD', 'rewad'), \"reward\") or contains(translate(@alt, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@alt, 'CASH', 'cash'), \"cash\") or contains(translate(@alt, 'CODE', 'code'), \"code\") or contains(translate(@alt, 'SHIPNG', 'shipng'), \"shipping\")]/@alt",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@title, 'OF', 'of'), \" off \") or contains(@title, \"0%\") or contains(@title, \"1%\") or contains(@title, \"2%\") or contains(@title, \"3%\") or contains(@title, \"4%\") or contains(@title, \"5%\") or contains(@title, \"6%\") or contains(@title, \"7%\") or contains(@title, \"8%\") or contains(@title, \"9%\") or contains(translate(@title, 'REWAD', 'rewad'), \"reward\") or contains(translate(@title, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@title, 'CASH', 'cash'), \"cash\") or contains(translate(@title, 'CODE', 'code'), \"code\") or contains(translate(@title, 'SHIPNG', 'shipng'), \"shipping\")]/@title",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/__test",
            "transient": true,
            "dataTypes": [
              "Text"
            ]
          }
        ]
      }
    ],
    "edgeRules": [
      {
        "from": {
          "entityRule": "f0cb28cf-6320-4046-82e9-0bf962223333",
          "matchAttr": ""
        },
        "to": {
          "entityRule": "5aabd401-e355-41b2-9c9d-9e9ee3a1e70c",
          "matchAttr": ""
        },
        "predicate": "http://schema.org/broker",
        "cardinality": "MANY_TO_ONE"
      },
      {
        "from": {
          "entityRule": "f0cb28cf-6320-4046-82e9-0bf962223333",
          "matchAttr": "http://schema.org/description"
        },
        "to": {
          "entityRule": "a3f2df32-7b35-4c77-8513-72ac9e26648e",
          "matchAttr": "http://schema.org/__test"
        },
        "predicate": "http://schema.org/image",
        "cardinality": "ONE_TO_ONE",
        "matchThreshold": "0.8"
      }
    ]
  },
  "preCleanInfo": []
}

/* EDDIE BAUER default_rule_e.eddiebauer.com */
{
  "extract": {
    "extractEmbedded": false,
    "source": null,
    "schema": [
      {
        "url": "http://ws.rmf.yahoo.com:4080/rmf/v1/schema?type=schema.org&name=y.2.0&format=json",
        "ns": "http://schema.org",
        "context": {
          "@type": [
            "Coupon"
          ]
        }
      }
    ],
    "entityRules": [
      {
        "id": "0386bd07-e736-4a45-9305-400e673ab76d",
        "repeating": true,
        "locations": [
          "/"
        ],
        "type": "http://schema.org/Coupon",
        "javascript": null,
        "entityIdRef": null,
        "attributes": []
      }
    ],
    "edgeRules": [],
    "entityNS": null
  },
  "metaData": {
    "useVTDXML": "true",
    "ignoredValidations": null,
    "footerRatio": "0.3",
    "footerRatioFallBack": "0.4"
  },
  "extractV2": {
    "entityRules": [
      {
        "id": "f0cb28cf-6320-4046-82e9-0bf962223333",
        "type": "http://schema.org/Coupon",
        "attributes": [
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(@alt, 'PROMTIN', 'promtin'), \"promotion\") or contains(translate(@alt, 'SHIPNG', 'shipng'), \"shipping\") \n or contains(translate(@alt, 'HERS', 'hers'), \"here's $\") or contains(translate(@alt, 'CERTIFCA', 'certifca'), \"certificate\") or contains(@alt,\"%\")]/@alt",
                  "js": "function transform (data){\n\n  var replaceStrings = [\n    {oldStr:/[\\*©®ǂ‡†±→§™¹›]/gi, newStr: \"\"},\n    {oldStr: /Exclusions Apply\\.?/i, newStr: \"\"},\n    {oldStr: /Discount Auto-Applied In Cart.*/i, newStr: \"\"},\n    {oldStr: /Shop Now.*/i, newStr: \"\"},\n    {oldStr: /View in a browser\\.?/i, newStr: \"\"},\n    {oldStr: /^(\\s+)?Plus(,|:)?/i, newStr: \"\"},\n    {oldStr: /[A-z]+,\\s?(Redeem your \\$\\d+)/i, newStr: \"$1\"},\n    {oldStr: /[A-z]+,\\s?((Here's|Take) \\$\\d+)/i, newStr: \"$1\"},\n    {oldStr: /[A-z]+,\\s?(You've earned an Adventure Rewards)/i, newStr: \"$1\"},\n    {oldStr: /(orders)(of)/i, newStr: \"$1 $2\"},\n    {oldStr: /(MEMBER\\s+NUMBER:\\s+)?\\w+((Reward\\s+)?Certificate\\s+\\$\\d+)/i, newStr: \"$2\"},\n    {oldStr: /(Redeem\\s+your\\s+\\$\\d+\\s+Certificate!)\\s+\\w+(EXPIRES:\\s+(\\d{1,2}\\/){2}\\d{4})/i, newStr: \"$1\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n  ];\n\n  for (var i = 0; i < replaceStrings.length; i++) {\n    var el = replaceStrings[i];\n    if (el.oldStr.test(data)) data = data.replace(el.oldStr, el.newStr);\n  }\n\n\n\n  return data.trim() || null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "3": [
                {
                  "xpath": "/descendant::font[contains(translate(., 'CERTIFCA', 'certifca'), \"certificate\") and not (contains(translate(.,\"VALID\", \"valid\"),\"valid\"))]/ancestor::table[2][not (contains(translate(.,\"VALID\", \"valid\"),\"valid\"))]",
                  "js": "function transform (data){\n\n  var replaceStrings = [\n    {oldStr:/[\\*©®ǂ‡†±→§™¹›]/gi, newStr: \"\"},\n    {oldStr: /Exclusions Apply\\.?/i, newStr: \"\"},\n    {oldStr: /Discount Auto-Applied In Cart.*/i, newStr: \"\"},\n    {oldStr: /Shop Now.*/i, newStr: \"\"},\n    {oldStr: /View in a browser\\.?/i, newStr: \"\"},\n    {oldStr: /^(\\s+)?Plus(,|:)?/i, newStr: \"\"},\n    {oldStr: /[A-z]+,\\s?(Redeem your \\$\\d+)/i, newStr: \"$1\"},\n    {oldStr: /[A-z]+,\\s?((Here's|Take) \\$\\d+)/i, newStr: \"$1\"},\n    {oldStr: /[A-z]+,\\s?(You've earned an Adventure Rewards)/i, newStr: \"$1\"},\n    {oldStr: /(orders)(of)/i, newStr: \"$1 $2\"},\n    {oldStr: /(MEMBER\\s+NUMBER:\\s+)?\\w+((Reward\\s+)?Certificate\\s+\\$\\d+)/i, newStr: \"$2\"},\n    {oldStr: /(Redeem\\s+your\\s+\\$\\d+\\s+Certificate!)\\s+\\w+(EXPIRES:\\s+(\\d{1,2}\\/){2}\\d{4})/i, newStr: \"$1\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n  ];\n\n  for (var i = 0; i < replaceStrings.length; i++) {\n    var el = replaceStrings[i];\n    if (el.oldStr.test(data)) data = data.replace(el.oldStr, el.newStr);\n  }\n\n\n\n  return data.trim() || null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "5": [
                {
                  "xpath": "//text()[contains(.,'Plus') and contains(.,'%')]",
                  "js": "function transform (data){\n\n  var replaceStrings = [\n    {oldStr:/[\\*©®ǂ‡†±→§™¹›]/gi, newStr: \"\"},\n    {oldStr: /Exclusions Apply\\.?/i, newStr: \"\"},\n    {oldStr: /Discount Auto-Applied In Cart.*/i, newStr: \"\"},\n    {oldStr: /Shop Now.*/i, newStr: \"\"},\n    {oldStr: /View in a browser\\.?/i, newStr: \"\"},\n    {oldStr: /^(\\s+)?Plus(,|:)?/i, newStr: \"\"},\n    {oldStr: /[A-z]+,\\s?(Redeem your \\$\\d+)/i, newStr: \"$1\"},\n    {oldStr: /[A-z]+,\\s?((Here's|Take) \\$\\d+)/i, newStr: \"$1\"},\n    {oldStr: /[A-z]+,\\s?(You've earned an Adventure Rewards)/i, newStr: \"$1\"},\n    {oldStr: /(orders)(of)/i, newStr: \"$1 $2\"},\n    {oldStr: /(MEMBER\\s+NUMBER:\\s+)?\\w+((Reward\\s+)?Certificate\\s+\\$\\d+)/i, newStr: \"$2\"},\n    {oldStr: /(Redeem\\s+your\\s+\\$\\d+\\s+Certificate!)\\s+\\w+(EXPIRES:\\s+(\\d{1,2}\\/){2}\\d{4})/i, newStr: \"$1\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n  ];\n\n  for (var i = 0; i < replaceStrings.length; i++) {\n    var el = replaceStrings[i];\n    if (el.oldStr.test(data)) data = data.replace(el.oldStr, el.newStr);\n  }\n\n\n\n  return data.trim() || null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "6": [
                {
                  "xpath": "//font[contains(translate(., 'OF', 'of'), \"% off\") or contains(translate(.,'HERS','hers'),\"here's $\") or contains(translate(.,'SAVE','save'),\"save\") and contains(.,'%') or contains(translate(.,'YOUVEARND','youvearn'),\"you've earned\") or contains(translate(.,'SALE','sale'),\" sale\") or contains(translate(.,'SAVE','save'),\" save\") and contains(.,'on') or contains(translate(.,'DEALS','deals'), \"deals\") or contains(translate(.,'OF','of'), \"off\") and contains(.,\"$\")]",
                  "js": "function transform (data){\n\n  var replaceStrings = [\n    {oldStr:/[\\*©®ǂ‡†±→§™¹›]/gi, newStr: \"\"},\n    {oldStr: /Exclusions Apply\\.?/i, newStr: \"\"},\n    {oldStr: /Discount Auto-Applied In Cart.*/i, newStr: \"\"},\n    {oldStr: /Shop Now.*/i, newStr: \"\"},\n    {oldStr: /View in a browser\\.?/i, newStr: \"\"},\n    {oldStr: /^(\\s+)?Plus(,|:)?/i, newStr: \"\"},\n    {oldStr: /[A-z]+,\\s?(Redeem your \\$\\d+)/i, newStr: \"$1\"},\n    {oldStr: /[A-z]+,\\s?((Here's|Take) \\$\\d+)/i, newStr: \"$1\"},\n    {oldStr: /[A-z]+,\\s?(You've earned an Adventure Rewards)/i, newStr: \"$1\"},\n    {oldStr: /(orders)(of)/i, newStr: \"$1 $2\"},\n    {oldStr: /(MEMBER\\s+NUMBER:\\s+)?\\w+((Reward\\s+)?Certificate\\s+\\$\\d+)/i, newStr: \"$2\"},\n    {oldStr: /(Redeem\\s+your\\s+\\$\\d+\\s+Certificate!)\\s+\\w+(EXPIRES:\\s+(\\d{1,2}\\/){2}\\d{4})/i, newStr: \"$1\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n  ];\n\n  for (var i = 0; i < replaceStrings.length; i++) {\n    var el = replaceStrings[i];\n    if (el.oldStr.test(data)) data = data.replace(el.oldStr, el.newStr);\n  }\n\n\n\n  return data.trim() || null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "7": [
                {
                  "xpath": "//a[contains(translate(., 'FRESHIPNG', 'freshipng'), \"free shipping\")]",
                  "js": "function transform (data){\n\n  var replaceStrings = [\n    {oldStr:/[\\*©®ǂ‡†±→§™¹›]/gi, newStr: \"\"},\n    {oldStr: /Exclusions Apply\\.?/i, newStr: \"\"},\n    {oldStr: /Discount Auto-Applied In Cart.*/i, newStr: \"\"},\n    {oldStr: /Shop Now.*/i, newStr: \"\"},\n    {oldStr: /View in a browser\\.?/i, newStr: \"\"},\n    {oldStr: /^(\\s+)?Plus(,|:)?/i, newStr: \"\"},\n    {oldStr: /[A-z]+,\\s?(Redeem your \\$\\d+)/i, newStr: \"$1\"},\n    {oldStr: /[A-z]+,\\s?((Here's|Take) \\$\\d+)/i, newStr: \"$1\"},\n    {oldStr: /[A-z]+,\\s?(You've earned an Adventure Rewards)/i, newStr: \"$1\"},\n    {oldStr: /(orders)(of)/i, newStr: \"$1 $2\"},\n    {oldStr: /(MEMBER\\s+NUMBER:\\s+)?\\w+((Reward\\s+)?Certificate\\s+\\$\\d+)/i, newStr: \"$2\"},\n    {oldStr: /(Redeem\\s+your\\s+\\$\\d+\\s+Certificate!)\\s+\\w+(EXPIRES:\\s+(\\d{1,2}\\/){2}\\d{4})/i, newStr: \"$1\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n  ];\n\n  for (var i = 0; i < replaceStrings.length; i++) {\n    var el = replaceStrings[i];\n    if (el.oldStr.test(data)) data = data.replace(el.oldStr, el.newStr);\n  }\n\n\n\n  return data.trim() || null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/description",
            "dataTypes": [
              "Text"
            ],
            "dedupCondition": {
              "matchThreshold": ".8",
              "stopWords": []
            }
          },
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//text()[contains(translate(., 'VALID', 'valid'), ' valid ') or contains(translate(., 'T', 't'), ' through ') or contains(translate(., 'ENDS', 'ends'), ' ends ') or contains(translate(., 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(., 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(., 'OFERGD', 'ofergd'), ' offer good') or contains(translate(., 'EXPIRS', 'expirs'), ' expires')][not (contains(translate(.,\"CASHVLUE\",\"cashvlue\"),\"cash value:\"))]",
                  "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ');\n\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@alt, 'VALID', 'valid'), ' valid ') or contains(translate(@alt, 'T', 't'), ' through ') or contains(translate(@alt, 'ENDS', 'ends'), ' ends ') or contains(translate(@alt, 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(@alt, 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(@alt, 'OFERGD', 'ofergd'), ' offer good')]/@alt",
                  "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ');\n\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "3": [
                {
                  "xpath": "//img[contains(translate(@title, 'VALID', 'valid'), ' valid ') or contains(translate(@title, 'T', 't'), ' through ') or contains(translate(@title, 'ENDS', 'ends'), ' ends ') or contains(translate(@title, 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(@title, 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(@title, 'OFERGD', 'ofergd'), ' offer good')]/@title",
                  "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ');\n\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/validThrough",
            "dataTypes": [
              "DateTime"
            ],
            "dedupCondition": {
              "matchThreshold": ".8",
              "stopWords": []
            }
          },
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(., 'REWAD', 'rewad'), \"reward\") or contains(translate(., 'COUPN', 'coupn'), \"coupon\") or contains(translate(., 'CASH', 'cash'), \"cash\") or contains(translate(., 'CODE', 'code'), \"code\") ]/parent::a[1]/@href",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@title, 'OF', 'of'), \" off \") or contains(@title, \"0%\") or contains(@title, \"1%\") or contains(@title, \"2%\") or contains(@title, \"3%\") or contains(@title, \"4%\") or contains(@title, \"5%\") or contains(@title, \"6%\") or contains(@title, \"7%\") or contains(@title, \"8%\") or contains(@title, \"9%\") or contains(translate(., 'REWAD', 'rewad'), \"reward\") or contains(translate(., 'COUPN', 'coupn'), \"coupon\") or contains(translate(., 'CASH', 'cash'), \"cash\") or contains(translate(., 'CODE', 'code'), \"code\") ]/parent::a[1]/@href",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/url",
            "dataTypes": [
              "URL"
            ]
          }
        ]
      },
      {
        "id": "5aabd401-e355-41b2-9c9d-9e9ee3a1e70c",
        "type": "http://schema.org/Organization",
        "attributes": [
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "concat(\"Eddie Bauer\", \"\")",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "STRING"
                }
              ]
            },
            "name": "http://schema.org/name",
            "dataTypes": [
              "Text"
            ],
            "dedupCondition": null
          }
        ]
      },
      {
        "id": "a3f2df32-7b35-4c77-8513-72ac9e26648e",
        "type": "http://schema.org/ImageObject",
        "attributes": [
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(@alt, 'REWAD', 'rewad'), \"reward\") or contains(translate(@alt, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@alt, 'CASH', 'cash'), \"cash\") or contains(translate(@alt, 'CODE', 'code'), \"code\") or contains(translate(@alt, 'SHIPNG', 'shipng'), \"shipping\")]/@src",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@title, 'OF', 'of'), \" off \") or contains(@title, \"0%\") or contains(@title, \"1%\") or contains(@title, \"2%\") or contains(@title, \"3%\") or contains(@title, \"4%\") or contains(@title, \"5%\") or contains(@title, \"6%\") or contains(@title, \"7%\") or contains(@title, \"8%\") or contains(@title, \"9%\") or contains(translate(@title, 'REWAD', 'rewad'), \"reward\") or contains(translate(@title, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@title, 'CASH', 'cash'), \"cash\") or contains(translate(@title, 'CODE', 'code'), \"code\") or contains(translate(@title, 'SHIPNG', 'shipng'), \"shipping\")]/@src",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/url",
            "dataTypes": [
              "URL"
            ]
          },
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(@alt, 'REWAD', 'rewad'), \"reward\") or contains(translate(@alt, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@alt, 'CASH', 'cash'), \"cash\") or contains(translate(@alt, 'CODE', 'code'), \"code\") or contains(translate(@alt, 'SHIPNG', 'shipng'), \"shipping\")]/@alt",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@title, 'OF', 'of'), \" off \") or contains(@title, \"0%\") or contains(@title, \"1%\") or contains(@title, \"2%\") or contains(@title, \"3%\") or contains(@title, \"4%\") or contains(@title, \"5%\") or contains(@title, \"6%\") or contains(@title, \"7%\") or contains(@title, \"8%\") or contains(@title, \"9%\") or contains(translate(@title, 'REWAD', 'rewad'), \"reward\") or contains(translate(@title, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@title, 'CASH', 'cash'), \"cash\") or contains(translate(@title, 'CODE', 'code'), \"code\") or contains(translate(@title, 'SHIPNG', 'shipng'), \"shipping\")]/@title",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/__test",
            "transient": true,
            "dataTypes": [
              "Text"
            ]
          }
        ]
      }
    ],
    "edgeRules": [
      {
        "from": {
          "entityRule": "f0cb28cf-6320-4046-82e9-0bf962223333",
          "matchAttr": ""
        },
        "to": {
          "entityRule": "5aabd401-e355-41b2-9c9d-9e9ee3a1e70c",
          "matchAttr": ""
        },
        "predicate": "http://schema.org/broker",
        "cardinality": "MANY_TO_ONE"
      },
      {
        "from": {
          "entityRule": "f0cb28cf-6320-4046-82e9-0bf962223333",
          "matchAttr": "http://schema.org/description"
        },
        "to": {
          "entityRule": "a3f2df32-7b35-4c77-8513-72ac9e26648e",
          "matchAttr": "http://schema.org/__test"
        },
        "predicate": "http://schema.org/image",
        "cardinality": "ONE_TO_ONE",
        "matchThreshold": "0.8"
      }
    ]
  },
  "preCleanInfo": [
    {
      "regexStr": "\\/\\*<\\!\\[cdata\\[>\\*\\/",
      "replacement": "",
      "replaceAll": false
    },
    {
      "regexStr": "\\<html.*?\\>",
      "replacement": "<html>",
      "replaceAll": true
    }
  ]
}

KEURIG default_rule_em.keurig.com
{
  "extract": {
    "extractEmbedded": false,
    "source": null,
    "schema": [
      {
        "url": "http://ws.rmf.yahoo.com:4080/rmf/v1/schema?type=schema.org&name=y.2.0&format=json",
        "ns": "http://schema.org",
        "context": {
          "@type": [
            "Coupon"
          ]
        }
      }
    ],
    "entityRules": [
      {
        "id": "0386bd07-e736-4a45-9305-400e673ab76d",
        "repeating": true,
        "locations": [
          "/"
        ],
        "type": "http://schema.org/Coupon",
        "javascript": null,
        "entityIdRef": null,
        "attributes": []
      }
    ],
    "edgeRules": [],
    "entityNS": null
  },
  "metaData": {
    "useVTDXML": "true",
    "ignoredValidations": null,
    "footerRatio": "0.3",
    "footerRatioFallBack": "0.4"
  },
  "extractV2": {
    "entityRules": [
      {
        "id": "f0cb28cf-6320-4046-82e9-0bf962223333",
        "type": "http://schema.org/Coupon",
        "attributes": [
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \"% off\") or contains(translate(@alt,'FRE', \"fre\"),\"free\") and not (contains(translate(@alt,\"COMITENFR\",\"comitenfr\"), \"commitment-free\")) or contains(translate(@alt,\"SALE\",\"sale\"),\"sale\") or contains(translate(@alt,\"SAVE\",\"save\"),\"save\") and (contains(@alt, \"%\") or contains(@alt, \"$\")) or contains(translate(@alt,\"SAVING\",\"saving\"),\"savings\") or contains(translate(@alt,\"REDM\",\"redm\"),\"redeem\") and contains(translate(@alt,\"POINTS\",\"points\"),\"points\")]/@alt",
                  "js": "function transform (data){\n\n  var replaceStrings = [\n    {oldStr:/(\\w[\\*!])(\\w)/gi, newStr: \"$1 $2\"},\n    {oldStr:/[\\*©®ǂ‡†±→§™¹›]/gi, newStr: \"\"},\n    {oldStr: /(Save|Learn) More(\\s+)?$/i, newStr: \"\"},\n    {oldStr: /Shop Now to save/i, newStr: \"Save\"},\n    {oldStr: /Shop Now/i, newStr: \"\"},\n    {oldStr: /^\\$\\d+\\.\\d{2}Sale \\$\\d+\\.\\d{2}/i, newStr: \"\"},\n    {oldStr: /Ends \\d{1,2}\\/\\d{1,2}\\.?/i, newStr: \"\"},\n    {oldStr: /Restrictions apply.*/i, newStr: \"\"},\n    {oldStr: /Terms apply\\.?/i, newStr: \"\"},\n    {oldStr: /GET DEAL\\.?/i, newStr: \"\"},\n    {oldStr: /^BUY MORE, SAVE MORE$/i, newStr: \"\"},\n    {oldStr: /Excludes (coffee maker|gift subscriptions and) bundles\\.?/i, newStr: \"\"},\n    {oldStr: /FREE MEMBERSHIP (\\|\\s)?No initial or recurring member fees/i, newStr: \"\"},\n    {oldStr: /Free shipping on this delicious offer!/i, newStr: \"\"},\n    {oldStr: /LOG IN TO SHOP/i, newStr: \"\"},\n    {oldStr: /^LAST CHANCE TO SAVE! | Ends Today$/i, newStr: \"\"},\n    {oldStr: /^Models and save\\?.*/i, newStr: \"\"},\n    {oldStr: /Not ready to commit\\? No problem.Here's another way to save!/i, newStr: \"\"},\n    {oldStr: /This email was sent to.*/i, newStr: \"\"},\n    {oldStr: /^(OR|Plus),?/i, newStr: \"\"},\n    {oldStr: /(Simplify Your Life & Save Big)(\\w)/i, newStr: \"$1 $2\"},\n    {oldStr: /Spring into Savings!?/i, newStr: \"\"},\n    {oldStr: /(\\w)(\\$\\d+\\.\\d{2})Sale (\\$\\d+\\.\\d{2})/i, newStr: \"$1 - Was $2. Now $3.\"},\n    {oldStr: /To get your FREE sample box:.*/i, newStr: \"Get your FREE sample box\"},\n    {oldStr: /MANAGE YOUR AUTO-DELIVERY ORDERS\\.?/i, newStr: \"\"},\n    {oldStr: /To\\s+(save\\s+\\d{2}%\\s+on\\s+your\\s+new\\s+coffee\\s+maker),\\s+enter\\s+your\\s+unique,\\s+one-time\\s+use\\s+code\\s+at\\s+checkout.*/i, newStr: \"$1\"},\n    {oldStr: /.*And as always, you receive/i, newStr: \"Receive\"},\n    {oldStr: /(TODAY ONLY)([A-z]+)/i, newStr: \"$1! $2\"},\n    {oldStr: /Ends (today|tomorrow), \\d{1,2}\\/\\d{1,2}\\.?/i, newStr: \"\"},\n    {oldStr: /SHOP BEVERAGESSHOP COFFEE MAKERSSHOP ACCESSORIES/i, newStr: \"\"},\n    {oldStr: /^When you redeem \\d+ points/i, newStr: \"\"},\n    {oldStr: /You'll (get 20% off select coffee pods with your unique promo code):/i, newStr: \"$1\"},\n    {oldStr: /(\\w+)(\\$\\d+\\.\\d{2})(\\w+)/i, newStr: \"$1: $2 $3\"},\n    {oldStr: /Plus,/i, newStr: \"\"},\n    {oldStr: /Buy More,(\\s+)?$/i, newStr: \"\"},\n    {oldStr: /^\\+ FREE SHIPPING/, newStr: \"DISCOUNTS + FREE SHIPPING\"},\n    {oldStr: /^\\w(\\s+)?$/i, newStr: \"\"},\n    {oldStr: /^Offer(\\s+)?$/i, newStr: \"\"},\n    {oldStr: /You'll\\S+enjoy:.*/i, newStr: \"\"},\n    {oldStr: /.*Keurig Customer Service.*/i, newStr: \"\"},\n    {oldStr: /.*Keurig Green Mountain*./i, newStr: \"\"},\n    {oldStr: /purchased on www\\.Keurig\\.com.*/i, newStr: \"\"},\n    {oldStr: /^Offer valid for/i, newStr: \"\"},\n    {oldStr: /(, )?while supplies last.*/i, newStr: \"\"},\n    {oldStr: /But\\S+this\\S+doesn't\\S+have\\S+to\\S+be\\S+goodbye\\.\\S+Far\\S+from\\S+it!/i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n  ];\n\n  for (var i = 0; i < replaceStrings.length; i++) {\n    var el = replaceStrings[i];\n    if (el.oldStr.test(data)) data = data.replace(el.oldStr, el.newStr);\n  }\n\n  if (data.length > 150) return minimizeMe(data);\n  \n  if(data.length < 7) return null;\n\n  return data.trim() || null;\n}\n\n\n\nfunction minimizeMe(str){\n    return str.replace(/(\\.)(\\d)/g,\"~~~$2\")\n    .match(/[^\\.\\?\\!]*((\\$\\d)|(free)|(redeem)|(\\%))[^\\.\\?\\!]*/ig)\n    .join(\". \")\n    .replace(/(\\~\\~\\~)(\\d)/g,\".$2\") + \".\";\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//td[contains(translate(text(), 'OF', 'of'), \"% off\") or contains(translate(text(),'FRE', \"fre\"),\"free\") and not (contains(translate(text(),\"COMITENFR\",\"comitenfr\"), \"commitment-free\")) or contains(translate(text(),\"SALE\",\"sale\"),\"sale\") or contains(translate(text(),\"SAVE\",\"save\"),\"save\") and (contains(text(), \"%\") or contains(text(), \"$\")) or contains(translate(text(),\"REDM\",\"redm\"),\"redeem\") and contains(translate(text(),\"POINTS\",\"points\"),\"points\")][not(contains(.,\"Keurig Green Mountain\") or contains(.,\"Keurig Customer Service\"))]\n|\n//td/descendant::p[contains(translate(text(), 'OF', 'of'), \"% off\") or contains(translate(text(),'FRE', \"fre\"),\"free\") and not (contains(translate(text(),\"COMITENFR\",\"comitenfr\"), \"commitment-free\")) or contains(translate(text(),\"SALE\",\"sale\"),\"sale\") or contains(translate(text(),\"SAVE\",\"save\"),\"save\") and (contains(text(), \"%\") or contains(text(), \"$\")) or contains(translate(text(),\"REDM\",\"redm\"),\"redeem\") and contains(translate(text(),\"POINTS\",\"points\"),\"points\")]\n|\n//td/descendant::h2[contains(translate(text(), 'OF', 'of'), \"% off\") or contains(translate(text(),'FRE', \"fre\"),\"free\") and not (contains(translate(text(),\"COMITENFR\",\"comitenfr\"), \"commitment-free\")) or contains(translate(text(),\"SALE\",\"sale\"),\"sale\") or contains(translate(text(),\"SAVE\",\"save\"),\"save\") and (contains(text(), \"%\") or contains(text(), \"$\")) or contains(translate(text(),\"REDM\",\"redm\"),\"redeem\") and contains(translate(text(),\"POINTS\",\"points\"),\"points\")]\n|\n//td/descendant::h1[contains(translate(text(), 'OF', 'of'), \"% off\") or contains(translate(text(),'FRE', \"fre\"),\"free\") and not (contains(translate(text(),\"COMITENFR\",\"comitenfr\"), \"commitment-free\")) or contains(translate(text(),\"SALE\",\"sale\"),\"sale\") or contains(translate(text(),\"SAVE\",\"save\"),\"save\") and (contains(text(), \"%\") or contains(text(), \"$\")) or contains(translate(text(),\"REDM\",\"redm\"),\"redeem\") and contains(translate(text(),\"POINTS\",\"points\"),\"points\")]",
                  "js": "function transform (data){\n\n  var replaceStrings = [\n    {oldStr:/(\\w[\\*!])(\\w)/gi, newStr: \"$1 $2\"},\n    {oldStr:/[\\*©®ǂ‡†±→§™¹›]/gi, newStr: \"\"},\n    {oldStr: /(Save|Learn) More(\\s+)?$/i, newStr: \"\"},\n    {oldStr: /Shop Now to save/i, newStr: \"Save\"},\n    {oldStr: /Shop Now/i, newStr: \"\"},\n    {oldStr: /^\\$\\d+\\.\\d{2}Sale \\$\\d+\\.\\d{2}/i, newStr: \"\"},\n    {oldStr: /Ends \\d{1,2}\\/\\d{1,2}\\.?/i, newStr: \"\"},\n    {oldStr: /Restrictions apply.*/i, newStr: \"\"},\n    {oldStr: /Terms apply\\.?/i, newStr: \"\"},\n    {oldStr: /GET DEAL\\.?/i, newStr: \"\"},\n    {oldStr: /^BUY MORE, SAVE MORE$/i, newStr: \"\"},\n    {oldStr: /Excludes (coffee maker|gift subscriptions and) bundles\\.?/i, newStr: \"\"},\n    {oldStr: /FREE MEMBERSHIP (\\|\\s)?No initial or recurring member fees/i, newStr: \"\"},\n    {oldStr: /Free shipping on this delicious offer!/i, newStr: \"\"},\n    {oldStr: /LOG IN TO SHOP/i, newStr: \"\"},\n    {oldStr: /^LAST CHANCE TO SAVE! | Ends Today$/i, newStr: \"\"},\n    {oldStr: /^Models and save\\?.*/i, newStr: \"\"},\n    {oldStr: /Not ready to commit\\? No problem.Here's another way to save!/i, newStr: \"\"},\n    {oldStr: /This email was sent to.*/i, newStr: \"\"},\n    {oldStr: /^(OR|Plus),?/i, newStr: \"\"},\n    {oldStr: /(Simplify Your Life & Save Big)(\\w)/i, newStr: \"$1 $2\"},\n    {oldStr: /Spring into Savings!?/i, newStr: \"\"},\n    {oldStr: /(\\w)(\\$\\d+\\.\\d{2})Sale (\\$\\d+\\.\\d{2})/i, newStr: \"$1 - Was $2. Now $3.\"},\n    {oldStr: /To get your FREE sample box:.*/i, newStr: \"Get your FREE sample box\"},\n    {oldStr: /MANAGE YOUR AUTO-DELIVERY ORDERS\\.?/i, newStr: \"\"},\n    {oldStr: /To\\s+(save\\s+\\d{2}%\\s+on\\s+your\\s+new\\s+coffee\\s+maker),\\s+enter\\s+your\\s+unique,\\s+one-time\\s+use\\s+code\\s+at\\s+checkout.*/i, newStr: \"$1\"},\n    {oldStr: /.*And as always, you receive/i, newStr: \"Receive\"},\n    {oldStr: /(TODAY ONLY)([A-z]+)/i, newStr: \"$1! $2\"},\n    {oldStr: /Ends (today|tomorrow), \\d{1,2}\\/\\d{1,2}\\.?/i, newStr: \"\"},\n    {oldStr: /SHOP BEVERAGESSHOP COFFEE MAKERSSHOP ACCESSORIES/i, newStr: \"\"},\n    {oldStr: /^When you redeem \\d+ points/i, newStr: \"\"},\n    {oldStr: /You'll (get 20% off select coffee pods with your unique promo code):/i, newStr: \"$1\"},\n    {oldStr: /(\\w+)(\\$\\d+\\.\\d{2})(\\w+)/i, newStr: \"$1: $2 $3\"},\n    {oldStr: /Plus,/i, newStr: \"\"},\n    {oldStr: /Buy More,(\\s+)?$/i, newStr: \"\"},\n    {oldStr: /^\\+ FREE SHIPPING/, newStr: \"DISCOUNTS + FREE SHIPPING\"},\n    {oldStr: /^\\w(\\s+)?$/i, newStr: \"\"},\n    {oldStr: /^Offer(\\s+)?$/i, newStr: \"\"},\n    {oldStr: /You'll\\S+enjoy:.*/i, newStr: \"\"},\n    {oldStr: /.*Keurig Customer Service.*/i, newStr: \"\"},\n    {oldStr: /.*Keurig Green Mountain*./i, newStr: \"\"},\n    {oldStr: /purchased on www\\.Keurig\\.com.*/i, newStr: \"\"},\n    {oldStr: /^Offer valid for/i, newStr: \"\"},\n    {oldStr: /(, )?while supplies last.*/i, newStr: \"\"},\n    {oldStr: /But\\S+this\\S+doesn't\\S+have\\S+to\\S+be\\S+goodbye\\.\\S+Far\\S+from\\S+it!/i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n  ];\n\n  for (var i = 0; i < replaceStrings.length; i++) {\n    var el = replaceStrings[i];\n    if (el.oldStr.test(data)) data = data.replace(el.oldStr, el.newStr);\n  }\n\n  if (data.length > 150) return minimizeMe(data);\n  \n  if(data.length < 7) return null;\n\n  return data.trim() || null;\n}\n\n\n\nfunction minimizeMe(str){\n    return str.replace(/(\\.)(\\d)/g,\"~~~$2\")\n    .match(/[^\\.\\?\\!]*((\\$\\d)|(free)|(redeem)|(\\%))[^\\.\\?\\!]*/ig)\n    .join(\". \")\n    .replace(/(\\~\\~\\~)(\\d)/g,\".$2\") + \".\";\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "3": [
                {
                  "xpath": "//multiline[contains(translate(., 'OF', 'of'), \"% off\") or contains(translate(.,'FRE', \"fre\"),\"free\") and not (contains(translate(.,\"COMITENFR\",\"comitenfr\"), \"commitment-free\")) or contains(translate(.,\"SALE\",\"sale\"),\"sale\") or contains(translate(.,\"SAVE\",\"save\"),\"save\") and (contains(., \"%\") or contains(., \"$\")) or contains(translate(.,\"REDM\",\"redm\"),\"redeem\") and contains(translate(.,\"POINTS\",\"points\"),\"points\")]/ancestor::table[1][not (contains(.,\"Keurig Green Mountain\") or contains(translate(.,\"USECOD\", \"usecod\"), \"use code\") or contains(translate(.,\"STREFR\", \"strefr\"),\"stress-free\") or contains(translate(.,\"STREFR\", \"strefr\"),\"dust-free\"))]\n",
                  "js": "function transform (data){\n\n  var replaceStrings = [\n    {oldStr:/(\\w[\\*!])(\\w)/gi, newStr: \"$1 $2\"},\n    {oldStr:/[\\*©®ǂ‡†±→§™¹›]/gi, newStr: \"\"},\n    {oldStr: /(Save|Learn) More(\\s+)?$/i, newStr: \"\"},\n    {oldStr: /Shop Now to save/i, newStr: \"Save\"},\n    {oldStr: /Shop Now/i, newStr: \"\"},\n    {oldStr: /^\\$\\d+\\.\\d{2}Sale \\$\\d+\\.\\d{2}/i, newStr: \"\"},\n    {oldStr: /Ends \\d{1,2}\\/\\d{1,2}\\.?/i, newStr: \"\"},\n    {oldStr: /Restrictions apply.*/i, newStr: \"\"},\n    {oldStr: /Terms apply\\.?/i, newStr: \"\"},\n    {oldStr: /GET DEAL\\.?/i, newStr: \"\"},\n    {oldStr: /^BUY MORE, SAVE MORE$/i, newStr: \"\"},\n    {oldStr: /Excludes (coffee maker|gift subscriptions and) bundles\\.?/i, newStr: \"\"},\n    {oldStr: /FREE MEMBERSHIP (\\|\\s)?No initial or recurring member fees/i, newStr: \"\"},\n    {oldStr: /Free shipping on this delicious offer!/i, newStr: \"\"},\n    {oldStr: /LOG IN TO SHOP/i, newStr: \"\"},\n    {oldStr: /^LAST CHANCE TO SAVE! | Ends Today$/i, newStr: \"\"},\n    {oldStr: /^Models and save\\?.*/i, newStr: \"\"},\n    {oldStr: /Not ready to commit\\? No problem.Here's another way to save!/i, newStr: \"\"},\n    {oldStr: /This email was sent to.*/i, newStr: \"\"},\n    {oldStr: /^(OR|Plus),?/i, newStr: \"\"},\n    {oldStr: /(Simplify Your Life & Save Big)(\\w)/i, newStr: \"$1 $2\"},\n    {oldStr: /Spring into Savings!?/i, newStr: \"\"},\n    {oldStr: /(\\w)(\\$\\d+\\.\\d{2})Sale (\\$\\d+\\.\\d{2})/i, newStr: \"$1 - Was $2. Now $3.\"},\n    {oldStr: /To get your FREE sample box:.*/i, newStr: \"Get your FREE sample box\"},\n    {oldStr: /MANAGE YOUR AUTO-DELIVERY ORDERS\\.?/i, newStr: \"\"},\n    {oldStr: /To\\s+(save\\s+\\d{2}%\\s+on\\s+your\\s+new\\s+coffee\\s+maker),\\s+enter\\s+your\\s+unique,\\s+one-time\\s+use\\s+code\\s+at\\s+checkout.*/i, newStr: \"$1\"},\n    {oldStr: /.*And as always, you receive/i, newStr: \"Receive\"},\n    {oldStr: /(TODAY ONLY)([A-z]+)/i, newStr: \"$1! $2\"},\n    {oldStr: /Ends (today|tomorrow), \\d{1,2}\\/\\d{1,2}\\.?/i, newStr: \"\"},\n    {oldStr: /SHOP BEVERAGESSHOP COFFEE MAKERSSHOP ACCESSORIES/i, newStr: \"\"},\n    {oldStr: /^When you redeem \\d+ points/i, newStr: \"\"},\n    {oldStr: /You'll (get 20% off select coffee pods with your unique promo code):/i, newStr: \"$1\"},\n    {oldStr: /(\\w+)(\\$\\d+\\.\\d{2})(\\w+)/i, newStr: \"$1: $2 $3\"},\n    {oldStr: /Plus,/i, newStr: \"\"},\n    {oldStr: /Buy More,(\\s+)?$/i, newStr: \"\"},\n    {oldStr: /^\\+ FREE SHIPPING/, newStr: \"DISCOUNTS + FREE SHIPPING\"},\n    {oldStr: /^\\w(\\s+)?$/i, newStr: \"\"},\n    {oldStr: /^Offer(\\s+)?$/i, newStr: \"\"},\n    {oldStr: /You'll\\S+enjoy:.*/i, newStr: \"\"},\n    {oldStr: /.*Keurig Customer Service.*/i, newStr: \"\"},\n    {oldStr: /.*Keurig Green Mountain*./i, newStr: \"\"},\n    {oldStr: /purchased on www\\.Keurig\\.com.*/i, newStr: \"\"},\n    {oldStr: /^Offer valid for/i, newStr: \"\"},\n    {oldStr: /(, )?while supplies last.*/i, newStr: \"\"},\n    {oldStr: /But\\S+this\\S+doesn't\\S+have\\S+to\\S+be\\S+goodbye\\.\\S+Far\\S+from\\S+it!/i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n  ];\n\n  for (var i = 0; i < replaceStrings.length; i++) {\n    var el = replaceStrings[i];\n    if (el.oldStr.test(data)) data = data.replace(el.oldStr, el.newStr);\n  }\n\n  if (data.length > 150) return minimizeMe(data);\n  \n  if(data.length < 7) return null;\n\n  return data.trim() || null;\n}\n\n\n\nfunction minimizeMe(str){\n    return str.replace(/(\\.)(\\d)/g,\"~~~$2\")\n    .match(/[^\\.\\?\\!]*((\\$\\d)|(free)|(redeem)|(\\%))[^\\.\\?\\!]*/ig)\n    .join(\". \")\n    .replace(/(\\~\\~\\~)(\\d)/g,\".$2\") + \".\";\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "4": [
                {
                  "xpath": "//p[contains(translate(., 'OF', 'of'), \"% off\") or contains(translate(.,'FRE', \"fre\"),\"free\") and not (contains(translate(.,\"COMITENFR\",\"comitenfr\"), \"commitment-free\")) or contains(translate(.,\"SALE\",\"sale\"),\"sale\") or contains(translate(.,\"SAVE\",\"save\"),\"save\") and (contains(., \"%\") or contains(., \"$\")) or contains(translate(.,\"REDM\",\"redm\"),\"redeem\") and contains(translate(.,\"POINTS\",\"points\"),\"points\")]",
                  "js": "function transform (data){\n\n  var replaceStrings = [\n    {oldStr:/(\\w[\\*!])(\\w)/gi, newStr: \"$1 $2\"},\n    {oldStr:/[\\*©®ǂ‡†±→§™¹›]/gi, newStr: \"\"},\n    {oldStr: /(Save|Learn) More(\\s+)?$/i, newStr: \"\"},\n    {oldStr: /Shop Now to save/i, newStr: \"Save\"},\n    {oldStr: /Shop Now/i, newStr: \"\"},\n    {oldStr: /^\\$\\d+\\.\\d{2}Sale \\$\\d+\\.\\d{2}/i, newStr: \"\"},\n    {oldStr: /Ends \\d{1,2}\\/\\d{1,2}\\.?/i, newStr: \"\"},\n    {oldStr: /Restrictions apply.*/i, newStr: \"\"},\n    {oldStr: /Terms apply\\.?/i, newStr: \"\"},\n    {oldStr: /GET DEAL\\.?/i, newStr: \"\"},\n    {oldStr: /^BUY MORE, SAVE MORE$/i, newStr: \"\"},\n    {oldStr: /Excludes (coffee maker|gift subscriptions and) bundles\\.?/i, newStr: \"\"},\n    {oldStr: /FREE MEMBERSHIP (\\|\\s)?No initial or recurring member fees/i, newStr: \"\"},\n    {oldStr: /Free shipping on this delicious offer!/i, newStr: \"\"},\n    {oldStr: /LOG IN TO SHOP/i, newStr: \"\"},\n    {oldStr: /^LAST CHANCE TO SAVE! | Ends Today$/i, newStr: \"\"},\n    {oldStr: /^Models and save\\?.*/i, newStr: \"\"},\n    {oldStr: /Not ready to commit\\? No problem.Here's another way to save!/i, newStr: \"\"},\n    {oldStr: /This email was sent to.*/i, newStr: \"\"},\n    {oldStr: /^(OR|Plus),?/i, newStr: \"\"},\n    {oldStr: /(Simplify Your Life & Save Big)(\\w)/i, newStr: \"$1 $2\"},\n    {oldStr: /Spring into Savings!?/i, newStr: \"\"},\n    {oldStr: /(\\w)(\\$\\d+\\.\\d{2})Sale (\\$\\d+\\.\\d{2})/i, newStr: \"$1 - Was $2. Now $3.\"},\n    {oldStr: /To get your FREE sample box:.*/i, newStr: \"Get your FREE sample box\"},\n    {oldStr: /MANAGE YOUR AUTO-DELIVERY ORDERS\\.?/i, newStr: \"\"},\n    {oldStr: /To\\s+(save\\s+\\d{2}%\\s+on\\s+your\\s+new\\s+coffee\\s+maker),\\s+enter\\s+your\\s+unique,\\s+one-time\\s+use\\s+code\\s+at\\s+checkout.*/i, newStr: \"$1\"},\n    {oldStr: /.*And as always, you receive/i, newStr: \"Receive\"},\n    {oldStr: /(TODAY ONLY)([A-z]+)/i, newStr: \"$1! $2\"},\n    {oldStr: /Ends (today|tomorrow), \\d{1,2}\\/\\d{1,2}\\.?/i, newStr: \"\"},\n    {oldStr: /SHOP BEVERAGESSHOP COFFEE MAKERSSHOP ACCESSORIES/i, newStr: \"\"},\n    {oldStr: /^When you redeem \\d+ points/i, newStr: \"\"},\n    {oldStr: /You'll (get 20% off select coffee pods with your unique promo code):/i, newStr: \"$1\"},\n    {oldStr: /(\\w+)(\\$\\d+\\.\\d{2})(\\w+)/i, newStr: \"$1: $2 $3\"},\n    {oldStr: /Plus,/i, newStr: \"\"},\n    {oldStr: /Buy More,(\\s+)?$/i, newStr: \"\"},\n    {oldStr: /^\\+ FREE SHIPPING/, newStr: \"DISCOUNTS + FREE SHIPPING\"},\n    {oldStr: /^\\w(\\s+)?$/i, newStr: \"\"},\n    {oldStr: /^Offer(\\s+)?$/i, newStr: \"\"},\n    {oldStr: /You'll\\S+enjoy:.*/i, newStr: \"\"},\n    {oldStr: /.*Keurig Customer Service.*/i, newStr: \"\"},\n    {oldStr: /.*Keurig Green Mountain*./i, newStr: \"\"},\n    {oldStr: /purchased on www\\.Keurig\\.com.*/i, newStr: \"\"},\n    {oldStr: /^Offer valid for/i, newStr: \"\"},\n    {oldStr: /(, )?while supplies last.*/i, newStr: \"\"},\n    {oldStr: /But\\S+this\\S+doesn't\\S+have\\S+to\\S+be\\S+goodbye\\.\\S+Far\\S+from\\S+it!/i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n  ];\n\n  for (var i = 0; i < replaceStrings.length; i++) {\n    var el = replaceStrings[i];\n    if (el.oldStr.test(data)) data = data.replace(el.oldStr, el.newStr);\n  }\n\n  if (data.length > 150) return minimizeMe(data);\n  \n  if(data.length < 7) return null;\n\n  return data.trim() || null;\n}\n\n\n\nfunction minimizeMe(str){\n    return str.replace(/(\\.)(\\d)/g,\"~~~$2\")\n    .match(/[^\\.\\?\\!]*((\\$\\d)|(free)|(redeem)|(\\%))[^\\.\\?\\!]*/ig)\n    .join(\". \")\n    .replace(/(\\~\\~\\~)(\\d)/g,\".$2\") + \".\";\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "5": [
                {
                  "xpath": "//text()[contains(translate(., 'OF', 'of'), \"% off\") or contains(translate(.,'FRE', \"fre\"),\"free\") and not (contains(translate(.,\"COMITENFR\",\"comitenfr\"), \"commitment-free\")) or contains(translate(.,\"SALE\",\"sale\"),\"sale\") or contains(translate(.,\"SAVE\",\"save\"),\"save\") and (contains(., \"%\") or contains(., \"$\")) or contains(translate(.,\"REDM\",\"redm\"),\"redeem\") and contains(translate(.,\"POINTS\",\"points\"),\"points\")]/ancestor::td[1][not(contains(.,\"Keurig Green Mountain\") or contains(.,\"Keurig Customer Service\") or contains(translate(.,\"USECOD\", \"usecod\"), \"use code\") or contains(translate(.,\"STREFR\", \"strefr\"),\"stress-free\") or contains(translate(.,\"STREFR\", \"strefr\"),\"dust-free\"))]",
                  "js": "function transform (data){\n\n  var replaceStrings = [\n    {oldStr:/(\\w[\\*!])(\\w)/gi, newStr: \"$1 $2\"},\n    {oldStr:/[\\*©®ǂ‡†±→§™¹›]/gi, newStr: \"\"},\n    {oldStr: /(Save|Learn) More(\\s+)?$/i, newStr: \"\"},\n    {oldStr: /Shop Now to save/i, newStr: \"Save\"},\n    {oldStr: /Shop Now/i, newStr: \"\"},\n    {oldStr: /^\\$\\d+\\.\\d{2}Sale \\$\\d+\\.\\d{2}/i, newStr: \"\"},\n    {oldStr: /Ends \\d{1,2}\\/\\d{1,2}\\.?/i, newStr: \"\"},\n    {oldStr: /Restrictions apply.*/i, newStr: \"\"},\n    {oldStr: /Terms apply\\.?/i, newStr: \"\"},\n    {oldStr: /GET DEAL\\.?/i, newStr: \"\"},\n    {oldStr: /^BUY MORE, SAVE MORE$/i, newStr: \"\"},\n    {oldStr: /Excludes (coffee maker|gift subscriptions and) bundles\\.?/i, newStr: \"\"},\n    {oldStr: /FREE MEMBERSHIP (\\|\\s)?No initial or recurring member fees/i, newStr: \"\"},\n    {oldStr: /Free shipping on this delicious offer!/i, newStr: \"\"},\n    {oldStr: /LOG IN TO SHOP/i, newStr: \"\"},\n    {oldStr: /^LAST CHANCE TO SAVE! | Ends Today$/i, newStr: \"\"},\n    {oldStr: /^Models and save\\?.*/i, newStr: \"\"},\n    {oldStr: /Not ready to commit\\? No problem.Here's another way to save!/i, newStr: \"\"},\n    {oldStr: /This email was sent to.*/i, newStr: \"\"},\n    {oldStr: /^(OR|Plus),?/i, newStr: \"\"},\n    {oldStr: /(Simplify Your Life & Save Big)(\\w)/i, newStr: \"$1 $2\"},\n    {oldStr: /Spring into Savings!?/i, newStr: \"\"},\n    {oldStr: /(\\w)(\\$\\d+\\.\\d{2})Sale (\\$\\d+\\.\\d{2})/i, newStr: \"$1 - Was $2. Now $3.\"},\n    {oldStr: /To get your FREE sample box:.*/i, newStr: \"Get your FREE sample box\"},\n    {oldStr: /MANAGE YOUR AUTO-DELIVERY ORDERS\\.?/i, newStr: \"\"},\n    {oldStr: /To\\s+(save\\s+\\d{2}%\\s+on\\s+your\\s+new\\s+coffee\\s+maker),\\s+enter\\s+your\\s+unique,\\s+one-time\\s+use\\s+code\\s+at\\s+checkout.*/i, newStr: \"$1\"},\n    {oldStr: /.*And as always, you receive/i, newStr: \"Receive\"},\n    {oldStr: /(TODAY ONLY)([A-z]+)/i, newStr: \"$1! $2\"},\n    {oldStr: /Ends (today|tomorrow), \\d{1,2}\\/\\d{1,2}\\.?/i, newStr: \"\"},\n    {oldStr: /SHOP BEVERAGESSHOP COFFEE MAKERSSHOP ACCESSORIES/i, newStr: \"\"},\n    {oldStr: /^When you redeem \\d+ points/i, newStr: \"\"},\n    {oldStr: /You'll (get 20% off select coffee pods with your unique promo code):/i, newStr: \"$1\"},\n    {oldStr: /(\\w+)(\\$\\d+\\.\\d{2})(\\w+)/i, newStr: \"$1: $2 $3\"},\n    {oldStr: /Plus,/i, newStr: \"\"},\n    {oldStr: /Buy More,(\\s+)?$/i, newStr: \"\"},\n    {oldStr: /^\\+ FREE SHIPPING/, newStr: \"DISCOUNTS + FREE SHIPPING\"},\n    {oldStr: /^\\w(\\s+)?$/i, newStr: \"\"},\n    {oldStr: /^Offer(\\s+)?$/i, newStr: \"\"},\n    {oldStr: /You'll\\S+enjoy:.*/i, newStr: \"\"},\n    {oldStr: /.*Keurig Customer Service.*/i, newStr: \"\"},\n    {oldStr: /.*Keurig Green Mountain*./i, newStr: \"\"},\n    {oldStr: /purchased on www\\.Keurig\\.com.*/i, newStr: \"\"},\n    {oldStr: /^Offer valid for/i, newStr: \"\"},\n    {oldStr: /(, )?while supplies last.*/i, newStr: \"\"},\n    {oldStr: /But\\S+this\\S+doesn't\\S+have\\S+to\\S+be\\S+goodbye\\.\\S+Far\\S+from\\S+it!/i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n  ];\n\n  for (var i = 0; i < replaceStrings.length; i++) {\n    var el = replaceStrings[i];\n    if (el.oldStr.test(data)) data = data.replace(el.oldStr, el.newStr);\n  }\n\n  if (data.length > 150) return minimizeMe(data);\n  \n  if(data.length < 7) return null;\n\n  return data.trim() || null;\n}\n\n\n\nfunction minimizeMe(str){\n    return str.replace(/(\\.)(\\d)/g,\"~~~$2\")\n    .match(/[^\\.\\?\\!]*((\\$\\d)|(free)|(redeem)|(\\%))[^\\.\\?\\!]*/ig)\n    .join(\". \")\n    .replace(/(\\~\\~\\~)(\\d)/g,\".$2\") + \".\";\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "6": [
                {
                  "xpath": "//font[contains(translate(., 'OF', 'of'), \"% off\") or contains(translate(.,'FRE', \"fre\"),\"free\") and not (contains(translate(.,\"COMITENFR\",\"comitenfr\"), \"commitment-free\")) or contains(translate(.,\"SALE\",\"sale\"),\"sale\") or contains(translate(.,\"SAVE\",\"save\"),\"save\") and (contains(., \"%\") or contains(., \"$\")) or contains(translate(.,\"REDM\",\"redm\"),\"redeem\") and contains(translate(.,\"POINTS\",\"points\"),\"points\")]",
                  "js": "function transform (data){\n\n  var replaceStrings = [\n    {oldStr:/(\\w[\\*!])(\\w)/gi, newStr: \"$1 $2\"},\n    {oldStr:/[\\*©®ǂ‡†±→§™¹›]/gi, newStr: \"\"},\n    {oldStr: /(Save|Learn) More(\\s+)?$/i, newStr: \"\"},\n    {oldStr: /Shop Now to save/i, newStr: \"Save\"},\n    {oldStr: /Shop Now/i, newStr: \"\"},\n    {oldStr: /^\\$\\d+\\.\\d{2}Sale \\$\\d+\\.\\d{2}/i, newStr: \"\"},\n    {oldStr: /Ends \\d{1,2}\\/\\d{1,2}\\.?/i, newStr: \"\"},\n    {oldStr: /Restrictions apply.*/i, newStr: \"\"},\n    {oldStr: /Terms apply\\.?/i, newStr: \"\"},\n    {oldStr: /GET DEAL\\.?/i, newStr: \"\"},\n    {oldStr: /^BUY MORE, SAVE MORE$/i, newStr: \"\"},\n    {oldStr: /Excludes (coffee maker|gift subscriptions and) bundles\\.?/i, newStr: \"\"},\n    {oldStr: /FREE MEMBERSHIP (\\|\\s)?No initial or recurring member fees/i, newStr: \"\"},\n    {oldStr: /Free shipping on this delicious offer!/i, newStr: \"\"},\n    {oldStr: /LOG IN TO SHOP/i, newStr: \"\"},\n    {oldStr: /^LAST CHANCE TO SAVE! | Ends Today$/i, newStr: \"\"},\n    {oldStr: /^Models and save\\?.*/i, newStr: \"\"},\n    {oldStr: /Not ready to commit\\? No problem.Here's another way to save!/i, newStr: \"\"},\n    {oldStr: /This email was sent to.*/i, newStr: \"\"},\n    {oldStr: /^(OR|Plus),?/i, newStr: \"\"},\n    {oldStr: /(Simplify Your Life & Save Big)(\\w)/i, newStr: \"$1 $2\"},\n    {oldStr: /Spring into Savings!?/i, newStr: \"\"},\n    {oldStr: /(\\w)(\\$\\d+\\.\\d{2})Sale (\\$\\d+\\.\\d{2})/i, newStr: \"$1 - Was $2. Now $3.\"},\n    {oldStr: /To get your FREE sample box:.*/i, newStr: \"Get your FREE sample box\"},\n    {oldStr: /MANAGE YOUR AUTO-DELIVERY ORDERS\\.?/i, newStr: \"\"},\n    {oldStr: /To\\s+(save\\s+\\d{2}%\\s+on\\s+your\\s+new\\s+coffee\\s+maker),\\s+enter\\s+your\\s+unique,\\s+one-time\\s+use\\s+code\\s+at\\s+checkout.*/i, newStr: \"$1\"},\n    {oldStr: /.*And as always, you receive/i, newStr: \"Receive\"},\n    {oldStr: /(TODAY ONLY)([A-z]+)/i, newStr: \"$1! $2\"},\n    {oldStr: /Ends (today|tomorrow), \\d{1,2}\\/\\d{1,2}\\.?/i, newStr: \"\"},\n    {oldStr: /SHOP BEVERAGESSHOP COFFEE MAKERSSHOP ACCESSORIES/i, newStr: \"\"},\n    {oldStr: /^When you redeem \\d+ points/i, newStr: \"\"},\n    {oldStr: /You'll (get 20% off select coffee pods with your unique promo code):/i, newStr: \"$1\"},\n    {oldStr: /(\\w+)(\\$\\d+\\.\\d{2})(\\w+)/i, newStr: \"$1: $2 $3\"},\n    {oldStr: /Plus,/i, newStr: \"\"},\n    {oldStr: /Buy More,(\\s+)?$/i, newStr: \"\"},\n    {oldStr: /^\\+ FREE SHIPPING/, newStr: \"DISCOUNTS + FREE SHIPPING\"},\n    {oldStr: /^\\w(\\s+)?$/i, newStr: \"\"},\n    {oldStr: /^Offer(\\s+)?$/i, newStr: \"\"},\n    {oldStr: /You'll\\S+enjoy:.*/i, newStr: \"\"},\n    {oldStr: /.*Keurig Customer Service.*/i, newStr: \"\"},\n    {oldStr: /.*Keurig Green Mountain*./i, newStr: \"\"},\n    {oldStr: /purchased on www\\.Keurig\\.com.*/i, newStr: \"\"},\n    {oldStr: /^Offer valid for/i, newStr: \"\"},\n    {oldStr: /(, )?while supplies last.*/i, newStr: \"\"},\n    {oldStr: /But\\S+this\\S+doesn't\\S+have\\S+to\\S+be\\S+goodbye\\.\\S+Far\\S+from\\S+it!/i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n  ];\n\n  for (var i = 0; i < replaceStrings.length; i++) {\n    var el = replaceStrings[i];\n    if (el.oldStr.test(data)) data = data.replace(el.oldStr, el.newStr);\n  }\n\n  if (data.length > 150) return minimizeMe(data);\n  \n  if(data.length < 7) return null;\n\n  return data.trim() || null;\n}\n\n\n\nfunction minimizeMe(str){\n    return str.replace(/(\\.)(\\d)/g,\"~~~$2\")\n    .match(/[^\\.\\?\\!]*((\\$\\d)|(free)|(redeem)|(\\%))[^\\.\\?\\!]*/ig)\n    .join(\". \")\n    .replace(/(\\~\\~\\~)(\\d)/g,\".$2\") + \".\";\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/description",
            "dataTypes": [
              "Text"
            ],
            "dedupCondition": {
              "matchThreshold": "0.5",
              "stopWords": []
            }
          },
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//text()[contains(translate(., 'VALID', 'valid'), ' valid ') or contains(translate(., 'THROUG', 'throug'), ' through ') or contains(translate(., 'ENDS', 'ends'), ' ends ') or contains(translate(., 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(., 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(., 'OFERGD', 'ofergd'), ' offer good') or contains(translate(.,\"ENDS\",\"ends\"),\"ends\") or contains(translate(.,\"ONEDAYSL\",\"onedaysl\"),\"one day sale\")]\n[not(contains(.,\"SAVE15MAY\"))]",
                  "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ').replace(/10\\/(\\d+)\\/(\\d{2}[^\\d])/,\"October $1, 20$2\").replace(/11\\/(\\d+)\\/(\\d{2}[^\\d])/,\"November $1, 20$2\").replace(/12\\/(\\d+)\\/(\\d{2}[^\\d])/,\"December $1, 20$2\").replace(/1\\/(\\d+)\\/(\\d{2}[^\\d])/,\"January $1, 20$2\").replace(/2\\/(\\d+)\\/(\\d{2}[^\\d])/,\"February $1, 20$2\").replace(/3\\/(\\d+)\\/(\\d{2}[^\\d])/,\"March $1, 20$2\").replace(/4\\/(\\d+)\\/(\\d{2}[^\\d])/,\"April $1, 20$2\").replace(/5\\/(\\d+)\\/(\\d{2}[^\\d])/,\"May $1, 20$2\").replace(/6\\/(\\d+)\\/(\\d{2}[^\\d])/,\"June $1, 20$2\").replace(/7\\/(\\d+)\\/(\\d{2}[^\\d])/,\"July $1, 20$2\").replace(/8\\/(\\d+)\\/(\\d{2}[^\\d])/,\"August $1, 20$2\").replace(/9\\/(\\d+)\\/(\\d{2}[^\\d])/,\"September $1, 20$2\");\n\t\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n \n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n  \t// 8/4/18\n\tvar regMMDDYY = /\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2}\\s/g;\n  \n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n  \tvar dt = matchDatePAttern(strValue, regMMDDYY);\n\tif (dt) {\n      \n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt;\n\t}\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\t\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\t\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@alt, 'VALID', 'valid'), ' valid ') or contains(translate(., 'THROUG', 'throug'), ' through ') or contains(translate(@alt, 'ENDS', 'ends'), ' ends ') or contains(translate(@alt, 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(@alt, 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(@alt, 'OFERGD', 'ofergd'), ' offer good') or contains(translate(@alt,\"ENDS\",\"ends\"),\"ends\") or contains(translate(@alt,\"ONEDAYSL\",\"onedaysl\"),\"one day sale\")]/@alt",
                  "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ').replace(/10\\/(\\d+)\\/(\\d{2}[^\\d])/,\"October $1, 20$2\").replace(/11\\/(\\d+)\\/(\\d{2}[^\\d])/,\"November $1, 20$2\").replace(/12\\/(\\d+)\\/(\\d{2}[^\\d])/,\"December $1, 20$2\").replace(/1\\/(\\d+)\\/(\\d{2}[^\\d])/,\"January $1, 20$2\").replace(/2\\/(\\d+)\\/(\\d{2}[^\\d])/,\"February $1, 20$2\").replace(/3\\/(\\d+)\\/(\\d{2}[^\\d])/,\"March $1, 20$2\").replace(/4\\/(\\d+)\\/(\\d{2}[^\\d])/,\"April $1, 20$2\").replace(/5\\/(\\d+)\\/(\\d{2}[^\\d])/,\"May $1, 20$2\").replace(/6\\/(\\d+)\\/(\\d{2}[^\\d])/,\"June $1, 20$2\").replace(/7\\/(\\d+)\\/(\\d{2}[^\\d])/,\"July $1, 20$2\").replace(/8\\/(\\d+)\\/(\\d{2}[^\\d])/,\"August $1, 20$2\").replace(/9\\/(\\d+)\\/(\\d{2}[^\\d])/,\"September $1, 20$2\");\n\t\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n \n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n  \t// 8/4/18\n\tvar regMMDDYY = /\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2}\\s/g;\n  \n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\n  \tvar dt = matchDatePAttern(strValue, regMMDDYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt;\n\t}\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\t\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\t\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\t\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "3": [
                {
                  "xpath": "//img[contains(translate(@title, 'VALID', 'valid'), ' valid ') or contains(translate(., 'THROUG', 'throug'), ' through ') or contains(translate(@title, 'ENDS', 'ends'), ' ends ') or contains(translate(@title, 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(@title, 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(@title, 'OFERGD', 'ofergd'), ' offer good') or contains(translate(@title,\"ENDS\",\"ends\"),\"ends\") or contains(translate(@title,\"ONEDAYSL\",\"onedaysl\"),\"one day sale\")]/@title",
                  "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ').replace(/10\\/(\\d+)\\/(\\d{2}[^\\d])/,\"October $1, 20$2\").replace(/11\\/(\\d+)\\/(\\d{2}[^\\d])/,\"November $1, 20$2\").replace(/12\\/(\\d+)\\/(\\d{2}[^\\d])/,\"December $1, 20$2\").replace(/1\\/(\\d+)\\/(\\d{2}[^\\d])/,\"January $1, 20$2\").replace(/2\\/(\\d+)\\/(\\d{2}[^\\d])/,\"February $1, 20$2\").replace(/3\\/(\\d+)\\/(\\d{2}[^\\d])/,\"March $1, 20$2\").replace(/4\\/(\\d+)\\/(\\d{2}[^\\d])/,\"April $1, 20$2\").replace(/5\\/(\\d+)\\/(\\d{2}[^\\d])/,\"May $1, 20$2\").replace(/6\\/(\\d+)\\/(\\d{2}[^\\d])/,\"June $1, 20$2\").replace(/7\\/(\\d+)\\/(\\d{2}[^\\d])/,\"July $1, 20$2\").replace(/8\\/(\\d+)\\/(\\d{2}[^\\d])/,\"August $1, 20$2\").replace(/9\\/(\\d+)\\/(\\d{2}[^\\d])/,\"September $1, 20$2\");\n\t\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n \n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n  \t// 8/4/18\n\tvar regMMDDYY = /\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2}\\s/g;\n  \n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\n  \tvar dt = matchDatePAttern(strValue, regMMDDYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt;\n\t}\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\t\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\t\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\t\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/validThrough",
            "dataTypes": [
              "DateTime"
            ],
            "dedupCondition": {
              "matchThreshold": "0.5",
              "stopWords": []
            }
          },
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(@alt, 'REWAD', 'rewad'), \"reward\") or contains(translate(@alt, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@alt, 'CASH', 'cash'), \"cash\") or contains(translate(@alt, 'CODE', 'code'), \"code\") or contains(translate(@alt, 'SHOPBEVRAG', 'shopbevrag'), \"shop beverages\")]/parent::a[1]/@href",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@title, 'OF', 'of'), \" off \") or contains(@title, \"0%\") or contains(@title, \"1%\") or contains(@title, \"2%\") or contains(@title, \"3%\") or contains(@title, \"4%\") or contains(@title, \"5%\") or contains(@title, \"6%\") or contains(@title, \"7%\") or contains(@title, \"8%\") or contains(@title, \"9%\") or contains(translate(@title, 'REWAD', 'rewad'), \"reward\") or contains(translate(@title, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@title, 'CASH', 'cash'), \"cash\") or contains(translate(@title, 'CODE', 'code'), \"code\") or contains(translate(@title, 'SHOP', 'shop'), \"shop\")]/parent::a[1]/@href",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "3": [
                {
                  "xpath": "//a[contains(translate(., 'OF', 'of'), \" off \") or contains(., \"0%\") or contains(., \"1%\") or contains(., \"2%\") or contains(., \"3%\") or contains(., \"4%\") or contains(., \"5%\") or contains(., \"6%\") or contains(., \"7%\") or contains(., \"8%\") or contains(., \"9%\") or contains(translate(., 'REWAD', 'rewad'), \"reward\") or contains(translate(., 'COUPN', 'coupn'), \"coupon\") or contains(translate(., 'CASH', 'cash'), \"cash\") or contains(translate(., 'CODE', 'code'), \"code\") or contains(translate(., 'SHOP', 'shop'), \"shop\")]/@href\n",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "4": [
                {
                  "xpath": "//html/descendant::title[contains(.,\"%\")]/following::body/descendant::a[contains(translate(., 'OF', 'of'), \" off \") or contains(., \"0%\") or contains(., \"1%\") or contains(., \"2%\") or contains(., \"3%\") or contains(., \"4%\") or contains(., \"5%\") or contains(., \"6%\") or contains(., \"7%\") or contains(., \"8%\") or contains(., \"9%\") or contains(translate(., 'REWAD', 'rewad'), \"reward\") or contains(translate(., 'COUPN', 'coupn'), \"coupon\") or contains(translate(., 'CASH', 'cash'), \"cash\") or contains(translate(., 'CODE', 'code'), \"code\") or contains(translate(., 'SHOP', 'shop'), \"shop\")]/@href\n",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/url",
            "dataTypes": [
              "URL"
            ],
            "dedupCondition": {
              "matchThreshold": "0.5",
              "stopWords": []
            }
          }
        ]
      },
      {
        "id": "5aabd401-e355-41b2-9c9d-9e9ee3a1e70c",
        "type": "http://schema.org/Organization",
        "attributes": [
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "concat(\"KEURIG\", \"\")",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "STRING"
                }
              ]
            },
            "name": "http://schema.org/name",
            "dataTypes": [
              "Text"
            ],
            "dedupCondition": null
          }
        ]
      },
      {
        "id": "a3f2df32-7b35-4c77-8513-72ac9e26648e",
        "type": "http://schema.org/ImageObject",
        "attributes": [
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \"% off\") or contains(translate(@alt,'FRE', \"fre\"),\"free\") or contains(translate(@alt,\"SALE\",\"sale\"),\"sale\") or contains(translate(@alt,\"SAVE\",\"save\"),\"save\") or contains(translate(@alt,\"SAVING\",\"saving\"),\"savings\") or contains(translate(@alt,\"REDM\",\"redm\"),\"redeem\") and contains(translate(@alt,\"POINTS\",\"points\"),\"points\")]/@alt",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@title, 'OF', 'of'), \"% off\") or contains(translate(@title,'FRE', \"fre\"),\"free\") or contains(translate(@title,\"SALE\",\"sale\"),\"sale\") or contains(translate(@title,\"SAVE\",\"save\"),\"save\") or contains(translate(@title,\"SAVING\",\"saving\"),\"savings\") or contains(translate(@title,\"REDM\",\"redm\"),\"redeem\") and contains(translate(@title,\"POINTS\",\"points\"),\"points\")]/@title",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/url",
            "dataTypes": [
              "URL"
            ],
            "dedupCondition": {
              "matchThreshold": "0.5",
              "stopWords": []
            }
          },
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \"% off\") or contains(translate(@alt,'FRE', \"fre\"),\"free\") or contains(translate(@alt,\"SALE\",\"sale\"),\"sale\") or contains(translate(@alt,\"SAVE\",\"save\"),\"save\") or contains(translate(@alt,\"SAVING\",\"saving\"),\"savings\") or contains(translate(@alt,\"REDM\",\"redm\"),\"redeem\") and contains(translate(@alt,\"POINTS\",\"points\"),\"points\")]/@alt",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@title, 'OF', 'of'), \"% off\") or contains(translate(@title,'FRE', \"fre\"),\"free\") or contains(translate(@title,\"SALE\",\"sale\"),\"sale\") or contains(translate(@title,\"SAVE\",\"save\"),\"save\") or contains(translate(@title,\"SAVING\",\"saving\"),\"savings\") or contains(translate(@title,\"REDM\",\"redm\"),\"redeem\") and contains(translate(@title,\"POINTS\",\"points\"),\"points\")]/@title",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/__test",
            "transient": true,
            "dataTypes": [
              "Text"
            ],
            "dedupCondition": {
              "matchThreshold": "0.5",
              "stopWords": []
            }
          }
        ]
      }
    ],
    "edgeRules": [
      {
        "from": {
          "entityRule": "f0cb28cf-6320-4046-82e9-0bf962223333",
          "matchAttr": ""
        },
        "to": {
          "entityRule": "5aabd401-e355-41b2-9c9d-9e9ee3a1e70c",
          "matchAttr": ""
        },
        "predicate": "http://schema.org/broker",
        "cardinality": "MANY_TO_ONE"
      },
      {
        "from": {
          "entityRule": "f0cb28cf-6320-4046-82e9-0bf962223333",
          "matchAttr": "http://schema.org/description"
        },
        "to": {
          "entityRule": "a3f2df32-7b35-4c77-8513-72ac9e26648e",
          "matchAttr": "http://schema.org/__test"
        },
        "predicate": "http://schema.org/image",
        "cardinality": "ONE_TO_ONE",
        "matchThreshold": "0.8"
      }
    ]
  },
  "preCleanInfo": [
    {
      "regexStr": "\\/\\*<\\!\\[cdata\\[>\\*\\/",
      "replacement": "",
      "replaceAll": false
    },
    {
      "regexStr": "\\<html.*?\\>",
      "replacement": "<html>",
      "replaceAll": false
    }
  ]
}

/* NORDSTROM em.nordstrom.com */
{
  "extract": {
    "extractEmbedded": false,
    "source": null,
    "schema": [
      {
        "url": "http://ws.rmf.yahoo.com:4080/rmf/v1/schema?type=schema.org&name=y.2.0&format=json",
        "ns": "http://schema.org",
        "context": {
          "@type": [
            "Coupon"
          ]
        }
      }
    ],
    "entityRules": [
      {
        "id": "0386bd07-e736-4a45-9305-400e673ab76d",
        "repeating": true,
        "locations": [
          "/"
        ],
        "type": "http://schema.org/Coupon",
        "javascript": null,
        "entityIdRef": null,
        "attributes": []
      }
    ],
    "edgeRules": [],
    "entityNS": null
  },
  "metaData": {
    "useVTDXML": "true",
    "ignoredValidations": null,
    "footerRatio": "0.3",
    "footerRatioFallBack": "0.4"
  },
  "extractV2": {
    "entityRules": [
      {
        "id": "f0cb28cf-6320-4046-82e9-0bf962223333",
        "type": "http://schema.org/Coupon",
        "attributes": [
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") and not(contains(translate(@alt,'HOUSEPARTY','houseparty'),\"house party\")) or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") and not(contains(translate(@alt,'HOUSEPARTY','houseparty'),\"house party\")) or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(@alt, 'REWAD', 'rewad'), \"reward\") and not (contains(translate(@alt,'NORDSTMEWAD', 'nordstmedwad'),'nordstrom rewards')) or contains(translate(@alt, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@alt, 'CASH', 'cash'), \"cash\") or contains(translate(@alt, 'DISCOUNT', 'discount'), \"discount\") or contains(translate(@alt, 'CODE', 'code'), \"code\") or contains(translate(@alt, 'REDM', 'redm'), \"redeem\") or contains(translate(@alt, 'REWARDS', 'rewards'), \"rewards\") or contains(translate(@alt, 'PROMTIN', 'promtin'), \"promotion\") or contains(translate(@alt, 'SHIPNG', 'shipng'), \"shipping\") or contains(translate(@alt,'SALE','sale'),\" sale\") and not(contains(@alt,\"easier?\")) or contains(translate(@alt,'FREGIT','fregit'),\"free gift\") or contains(translate(@alt,'ADTONLGIT','adtonlgit'),\"additional gift\") \n or contains(translate(@alt,'GETA','geta'),\"get a $\") or contains(translate(@alt,'SAVEON','saveon'),\"save on \") or contains(translate(@alt,'FREDLIVYB','fredlivyb'),\"free delivery by\") or contains(translate(@alt,'EARN','earn'),\"earn\") and contains(translate(@alt,'POINTS','points'),\"points\") and contains(translate(@alt,'X','x'),\"x\") or contains(translate(@alt,'SAVING','saving'),\"savings\") or contains(translate(@alt,'POINTSDYEXR','pointsdyexr'),\"points day expires\") or contains(translate(@alt,'GIFTWHYOUR','giftwhyour'),\"gift with your $\") or contains(translate(@alt,'EARNTRIPL','earntripl'),\"earn triple p\") or contains(translate(@alt,'GIFTWHYOUR','giftwhyour'),\"gift with $\") or contains(translate(@alt,'PERCNTOF','percntof'),\"percent off\")]/@alt\n",
                  "js": "function transform (data){\n\n  var replaceStrings = [\n    {oldStr:/[\\*©®ǂ‡†±→§™¹›]/gi, newStr: \"\"},\n    {oldStr: /See Details$/i, newStr: \"\"},\n    {oldStr: /shop\\s*now|\\-\\s*learn\\s*more/ig, newStr: \"\"},\n    {oldStr: /Details below/i, newStr: \"\"},\n    {oldStr: /See Details/i, newStr: \"\"},\n    {oldStr: /Find Your Store/i, newStr: \"\"},\n    {oldStr: /Plus, /i, newStr: \"\"},\n    {oldStr: /Restrictions apply/i, newStr: \"\"},\n    {oldStr: /Get\\s+on\\s+it\\.?/i, newStr: \"\"},\n    {oldStr: /In-Store Only/i, newStr: \"\"},\n    {oldStr: /Plus, you'll get amazing benefits like.*/i, newStr: \"\"},\n    {oldStr: /Find Your Store/i, newStr: \"\"},\n    {oldStr: /^NORDSTROM REWARDS$/i, newStr: \"\"},\n    {oldStr: /(Expires|Now-)(\\s+)?(Jan|Fev|Mar|Arp|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[A-z]*\\.?\\s+\\d{1,2}.*/gi, newStr: \"\"},\n    {oldStr: /.*(Schedule your Personal 10 Points Day\\.).*/i, newStr: \"$1\"},\n    {oldStr: /Promo code required.*/i, newStr: \"\"},\n    {oldStr: /Get on it/i, newStr: \"\"},\n    {oldStr: /Sale ends.*/i, newStr: \"\"},\n    {oldStr: /(\\$\\d{1,}(\\.\\d{2})?)(\\$\\d{1,}(\\.\\d{2})?)/gi, newStr: \"$1 - Was $3\"},\n    {oldStr: /Shop ClothingShop Shoes/i, newStr: \"\"},\n    {oldStr: /\\| (Shop Women's Sale)/i, newStr: \"$1\"},\n    {oldStr: /Hi,? [A-z]+\\.?\\s(You've got \\$\\d+ in Nordstrom Notes)/i, newStr: \"$1\"},\n    {oldStr: /(You have 1 Personal Triple Points Day\\(s\\) expiring (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\. 31\\.).*/i, newStr: \"$1\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    {oldStr: /\\|\\s+\\|/i, newStr: \"|\"},\n    {oldStr: /\\.\\†/gi, newStr: \".\"},\n    {oldStr: /[\\†\\|-](\\s+)?$/gi, newStr: \"\"},\n    {oldStr: /\\.\\s+\\./gi, newStr: \".\"},\n  ];\n\n  for (var i = 0; i < replaceStrings.length; i++) {\n    var el = replaceStrings[i];\n    if (el.oldStr.test(data)) data = data.replace(el.oldStr, el.newStr);\n  }\n\n  data = data.trim();\n\n  if (data.lastIndexOf(\"†\") === data.length - 1) data = data.slice(0, data.length-1);\n\n  while (data.length > 100 && /[\\.\\?!;]/.test(data[data.length-1]) && data.replace(/[^\\.;\\??]/g,\"\").length > 1) {\n    data = data.slice(0, data.length-1).split(\"\").reverse().join(\"\");\n    data = data.slice(data.search(/[\\.\\?!;]/)).split(\"\").reverse().join(\"\");\n  }\n\n\n\n  return data.trim() || null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//tr[3]//td[contains(.,'% OFF')]/ancestor::table[1]",
                  "js": "function transform (data){\n\n  var replaceStrings = [\n    {oldStr:/[\\*©®ǂ‡†±→§™¹›]/gi, newStr: \"\"},\n    {oldStr: /See Details$/i, newStr: \"\"},\n    {oldStr: /shop\\s*now|\\-\\s*learn\\s*more/ig, newStr: \"\"},\n    {oldStr: /Details below/i, newStr: \"\"},\n    {oldStr: /See Details/i, newStr: \"\"},\n    {oldStr: /Find Your Store/i, newStr: \"\"},\n    {oldStr: /Plus, /i, newStr: \"\"},\n    {oldStr: /Restrictions apply/i, newStr: \"\"},\n    {oldStr: /Get\\s+on\\s+it\\.?/i, newStr: \"\"},\n    {oldStr: /In-Store Only/i, newStr: \"\"},\n    {oldStr: /Plus, you'll get amazing benefits like.*/i, newStr: \"\"},\n    {oldStr: /Find Your Store/i, newStr: \"\"},\n    {oldStr: /^NORDSTROM REWARDS$/i, newStr: \"\"},\n    {oldStr: /(Expires|Now-)(\\s+)?(Jan|Fev|Mar|Arp|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[A-z]*\\.?\\s+\\d{1,2}.*/gi, newStr: \"\"},\n    {oldStr: /.*(Schedule your Personal 10 Points Day\\.).*/i, newStr: \"$1\"},\n    {oldStr: /Promo code required.*/i, newStr: \"\"},\n    {oldStr: /Get on it/i, newStr: \"\"},\n    {oldStr: /Sale ends.*/i, newStr: \"\"},\n    {oldStr: /(\\$\\d{1,}(\\.\\d{2})?)(\\$\\d{1,}(\\.\\d{2})?)/gi, newStr: \"$1 - Was $3\"},\n    {oldStr: /Shop ClothingShop Shoes/i, newStr: \"\"},\n    {oldStr: /\\| (Shop Women's Sale)/i, newStr: \"$1\"},\n    {oldStr: /Hi,? [A-z]+\\.?\\s(You've got \\$\\d+ in Nordstrom Notes)/i, newStr: \"$1\"},\n    {oldStr: /(You have 1 Personal Triple Points Day\\(s\\) expiring (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\. 31\\.).*/i, newStr: \"$1\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    {oldStr: /\\|\\s+\\|/i, newStr: \"|\"},\n    {oldStr: /\\.\\†/gi, newStr: \".\"},\n    {oldStr: /[\\†\\|-](\\s+)?$/gi, newStr: \"\"},\n    {oldStr: /\\.\\s+\\./gi, newStr: \".\"},\n  ];\n\n  for (var i = 0; i < replaceStrings.length; i++) {\n    var el = replaceStrings[i];\n    if (el.oldStr.test(data)) data = data.replace(el.oldStr, el.newStr);\n  }\n\n  data = data.trim();\n\n  if (data.lastIndexOf(\"†\") === data.length - 1) data = data.slice(0, data.length-1);\n\n  while (data.length > 100 && /[\\.\\?!;]/.test(data[data.length-1]) && data.replace(/[^\\.;\\??]/g,\"\").length > 1) {\n    data = data.slice(0, data.length-1).split(\"\").reverse().join(\"\");\n    data = data.slice(data.search(/[\\.\\?!;]/)).split(\"\").reverse().join(\"\");\n  }\n\n\n\n  return data.trim() || null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "3": [
                {
                  "xpath": "//b[contains(translate(., 'OF', 'of'), \" off\") or contains(translate(., 'OFER', 'ofer'), \"offer\") or contains(translate(., 'REWAD', 'rewad'), \"reward\") or contains(translate(., 'COUPN', 'coupn'), \"coupon\") or contains(translate(., 'CASH', 'cash'), \"cash\") or contains(translate(., 'CODE', 'code'), \"code\") or contains(., \"0%\") or contains(., \"1%\") or contains(., \"2%\") or contains(., \"3%\") or contains(., \"4%\") or contains(., \"5%\") or contains(., \"6%\") or contains(., \"7%\") or contains(., \"8%\") or contains(., \"9%\") ]",
                  "js": "function transform (data){\n\n  var replaceStrings = [\n    {oldStr:/[\\*©®ǂ‡†±→§™¹›]/gi, newStr: \"\"},\n    {oldStr: /See Details$/i, newStr: \"\"},\n    {oldStr: /shop\\s*now|\\-\\s*learn\\s*more/ig, newStr: \"\"},\n    {oldStr: /Details below/i, newStr: \"\"},\n    {oldStr: /See Details/i, newStr: \"\"},\n    {oldStr: /Find Your Store/i, newStr: \"\"},\n    {oldStr: /Plus, /i, newStr: \"\"},\n    {oldStr: /Restrictions apply/i, newStr: \"\"},\n    {oldStr: /Get\\s+on\\s+it\\.?/i, newStr: \"\"},\n    {oldStr: /In-Store Only/i, newStr: \"\"},\n    {oldStr: /Plus, you'll get amazing benefits like.*/i, newStr: \"\"},\n    {oldStr: /Find Your Store/i, newStr: \"\"},\n    {oldStr: /^NORDSTROM REWARDS$/i, newStr: \"\"},\n    {oldStr: /(Expires|Now-)(\\s+)?(Jan|Fev|Mar|Arp|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[A-z]*\\.?\\s+\\d{1,2}.*/gi, newStr: \"\"},\n    {oldStr: /.*(Schedule your Personal 10 Points Day\\.).*/i, newStr: \"$1\"},\n    {oldStr: /Promo code required.*/i, newStr: \"\"},\n    {oldStr: /Get on it/i, newStr: \"\"},\n    {oldStr: /Sale ends.*/i, newStr: \"\"},\n    {oldStr: /(\\$\\d{1,}(\\.\\d{2})?)(\\$\\d{1,}(\\.\\d{2})?)/gi, newStr: \"$1 - Was $3\"},\n    {oldStr: /Shop ClothingShop Shoes/i, newStr: \"\"},\n    {oldStr: /\\| (Shop Women's Sale)/i, newStr: \"$1\"},\n    {oldStr: /Hi,? [A-z]+\\.?\\s(You've got \\$\\d+ in Nordstrom Notes)/i, newStr: \"$1\"},\n    {oldStr: /(You have 1 Personal Triple Points Day\\(s\\) expiring (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\. 31\\.).*/i, newStr: \"$1\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    {oldStr: /\\|\\s+\\|/i, newStr: \"|\"},\n    {oldStr: /\\.\\†/gi, newStr: \".\"},\n    {oldStr: /[\\†\\|-](\\s+)?$/gi, newStr: \"\"},\n    {oldStr: /\\.\\s+\\./gi, newStr: \".\"},\n  ];\n\n  for (var i = 0; i < replaceStrings.length; i++) {\n    var el = replaceStrings[i];\n    if (el.oldStr.test(data)) data = data.replace(el.oldStr, el.newStr);\n  }\n\n  data = data.trim();\n\n  if (data.lastIndexOf(\"†\") === data.length - 1) data = data.slice(0, data.length-1);\n\n  while (data.length > 100 && /[\\.\\?!;]/.test(data[data.length-1]) && data.replace(/[^\\.;\\??]/g,\"\").length > 1) {\n    data = data.slice(0, data.length-1).split(\"\").reverse().join(\"\");\n    data = data.slice(data.search(/[\\.\\?!;]/)).split(\"\").reverse().join(\"\");\n  }\n\n\n\n  return data.trim() || null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "4": [
                {
                  "xpath": "//strong[contains(translate(.,'TRIPLEONS','tripleons'),\"triple points\") and contains(.,'expiring') or contains(translate(.,'POINTSDAY','pointsday'),\"points day\")]/ancestor::td[1]",
                  "js": "function transform (data){\n\n  var replaceStrings = [\n    {oldStr:/[\\*©®ǂ‡†±→§™¹›]/gi, newStr: \"\"},\n    {oldStr: /See Details$/i, newStr: \"\"},\n    {oldStr: /shop\\s*now|\\-\\s*learn\\s*more/ig, newStr: \"\"},\n    {oldStr: /Details below/i, newStr: \"\"},\n    {oldStr: /See Details/i, newStr: \"\"},\n    {oldStr: /Find Your Store/i, newStr: \"\"},\n    {oldStr: /Plus, /i, newStr: \"\"},\n    {oldStr: /Restrictions apply/i, newStr: \"\"},\n    {oldStr: /Get\\s+on\\s+it\\.?/i, newStr: \"\"},\n    {oldStr: /In-Store Only/i, newStr: \"\"},\n    {oldStr: /Plus, you'll get amazing benefits like.*/i, newStr: \"\"},\n    {oldStr: /Find Your Store/i, newStr: \"\"},\n    {oldStr: /^NORDSTROM REWARDS$/i, newStr: \"\"},\n    {oldStr: /(Expires|Now-)(\\s+)?(Jan|Fev|Mar|Arp|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[A-z]*\\.?\\s+\\d{1,2}.*/gi, newStr: \"\"},\n    {oldStr: /.*(Schedule your Personal 10 Points Day\\.).*/i, newStr: \"$1\"},\n    {oldStr: /Promo code required.*/i, newStr: \"\"},\n    {oldStr: /Get on it/i, newStr: \"\"},\n    {oldStr: /Sale ends.*/i, newStr: \"\"},\n    {oldStr: /(\\$\\d{1,}(\\.\\d{2})?)(\\$\\d{1,}(\\.\\d{2})?)/gi, newStr: \"$1 - Was $3\"},\n    {oldStr: /Shop ClothingShop Shoes/i, newStr: \"\"},\n    {oldStr: /\\| (Shop Women's Sale)/i, newStr: \"$1\"},\n    {oldStr: /Hi,? [A-z]+\\.?\\s(You've got \\$\\d+ in Nordstrom Notes)/i, newStr: \"$1\"},\n    {oldStr: /(You have 1 Personal Triple Points Day\\(s\\) expiring (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\. 31\\.).*/i, newStr: \"$1\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    {oldStr: /\\|\\s+\\|/i, newStr: \"|\"},\n    {oldStr: /\\.\\†/gi, newStr: \".\"},\n    {oldStr: /[\\†\\|-](\\s+)?$/gi, newStr: \"\"},\n    {oldStr: /\\.\\s+\\./gi, newStr: \".\"},\n  ];\n\n  for (var i = 0; i < replaceStrings.length; i++) {\n    var el = replaceStrings[i];\n    if (el.oldStr.test(data)) data = data.replace(el.oldStr, el.newStr);\n  }\n\n  data = data.trim();\n\n  if (data.lastIndexOf(\"†\") === data.length - 1) data = data.slice(0, data.length-1);\n\n  while (data.length > 100 && /[\\.\\?!;]/.test(data[data.length-1]) && data.replace(/[^\\.;\\??]/g,\"\").length > 1) {\n    data = data.slice(0, data.length-1).split(\"\").reverse().join(\"\");\n    data = data.slice(data.search(/[\\.\\?!;]/)).split(\"\").reverse().join(\"\");\n  }\n\n\n\n  return data.trim() || null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "5": [
                {
                  "xpath": "//text()[contains(translate(.,'CHOSEFRM','chosefrm'),\"choose from\") and contains(.,'gift') or contains(translate(.,'GIFTSWHPURCAE','giftswhpurcae'),\"gifts with purchase\")]",
                  "js": "function transform (data){\n\n  var replaceStrings = [\n    {oldStr:/[\\*©®ǂ‡†±→§™¹›]/gi, newStr: \"\"},\n    {oldStr: /See Details$/i, newStr: \"\"},\n    {oldStr: /shop\\s*now|\\-\\s*learn\\s*more/ig, newStr: \"\"},\n    {oldStr: /Details below/i, newStr: \"\"},\n    {oldStr: /See Details/i, newStr: \"\"},\n    {oldStr: /Find Your Store/i, newStr: \"\"},\n    {oldStr: /Plus, /i, newStr: \"\"},\n    {oldStr: /Restrictions apply/i, newStr: \"\"},\n    {oldStr: /Get\\s+on\\s+it\\.?/i, newStr: \"\"},\n    {oldStr: /In-Store Only/i, newStr: \"\"},\n    {oldStr: /Plus, you'll get amazing benefits like.*/i, newStr: \"\"},\n    {oldStr: /Find Your Store/i, newStr: \"\"},\n    {oldStr: /^NORDSTROM REWARDS$/i, newStr: \"\"},\n    {oldStr: /(Expires|Now-)(\\s+)?(Jan|Fev|Mar|Arp|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[A-z]*\\.?\\s+\\d{1,2}.*/gi, newStr: \"\"},\n    {oldStr: /.*(Schedule your Personal 10 Points Day\\.).*/i, newStr: \"$1\"},\n    {oldStr: /Promo code required.*/i, newStr: \"\"},\n    {oldStr: /Get on it/i, newStr: \"\"},\n    {oldStr: /Sale ends.*/i, newStr: \"\"},\n    {oldStr: /(\\$\\d{1,}(\\.\\d{2})?)(\\$\\d{1,}(\\.\\d{2})?)/gi, newStr: \"$1 - Was $3\"},\n    {oldStr: /Shop ClothingShop Shoes/i, newStr: \"\"},\n    {oldStr: /\\| (Shop Women's Sale)/i, newStr: \"$1\"},\n    {oldStr: /Hi,? [A-z]+\\.?\\s(You've got \\$\\d+ in Nordstrom Notes)/i, newStr: \"$1\"},\n    {oldStr: /(You have 1 Personal Triple Points Day\\(s\\) expiring (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\. 31\\.).*/i, newStr: \"$1\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    {oldStr: /\\|\\s+\\|/i, newStr: \"|\"},\n    {oldStr: /\\.\\†/gi, newStr: \".\"},\n    {oldStr: /[\\†\\|-](\\s+)?$/gi, newStr: \"\"},\n    {oldStr: /\\.\\s+\\./gi, newStr: \".\"},\n  ];\n\n  for (var i = 0; i < replaceStrings.length; i++) {\n    var el = replaceStrings[i];\n    if (el.oldStr.test(data)) data = data.replace(el.oldStr, el.newStr);\n  }\n\n  data = data.trim();\n\n  if (data.lastIndexOf(\"†\") === data.length - 1) data = data.slice(0, data.length-1);\n\n  while (data.length > 100 && /[\\.\\?!;]/.test(data[data.length-1]) && data.replace(/[^\\.;\\??]/g,\"\").length > 1) {\n    data = data.slice(0, data.length-1).split(\"\").reverse().join(\"\");\n    data = data.slice(data.search(/[\\.\\?!;]/)).split(\"\").reverse().join(\"\");\n  }\n\n\n\n  return data.trim() || null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "7": [
                {
                  "xpath": "//a[contains(translate(.,'FREGIFT','fregift'),\"free gift\") or contains(translate(.,'EXTRA','extra'),\"extra\") and contains(.,'%') or contains(.,'enjoy this') and contains(.,'reward') or contains(translate(.,'SAVEUPTO','saveupto'),\"save up to\") and contains(.,'%')]",
                  "js": "function transform (data){\n\n  var replaceStrings = [\n    {oldStr:/[\\*©®ǂ‡†±→§™¹›]/gi, newStr: \"\"},\n    {oldStr: /See Details$/i, newStr: \"\"},\n    {oldStr: /shop\\s*now|\\-\\s*learn\\s*more/ig, newStr: \"\"},\n    {oldStr: /Details below/i, newStr: \"\"},\n    {oldStr: /See Details/i, newStr: \"\"},\n    {oldStr: /Find Your Store/i, newStr: \"\"},\n    {oldStr: /Plus, /i, newStr: \"\"},\n    {oldStr: /Restrictions apply/i, newStr: \"\"},\n    {oldStr: /Get\\s+on\\s+it\\.?/i, newStr: \"\"},\n    {oldStr: /In-Store Only/i, newStr: \"\"},\n    {oldStr: /Plus, you'll get amazing benefits like.*/i, newStr: \"\"},\n    {oldStr: /Find Your Store/i, newStr: \"\"},\n    {oldStr: /^NORDSTROM REWARDS$/i, newStr: \"\"},\n    {oldStr: /(Expires|Now-)(\\s+)?(Jan|Fev|Mar|Arp|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[A-z]*\\.?\\s+\\d{1,2}.*/gi, newStr: \"\"},\n    {oldStr: /.*(Schedule your Personal 10 Points Day\\.).*/i, newStr: \"$1\"},\n    {oldStr: /Promo code required.*/i, newStr: \"\"},\n    {oldStr: /Get on it/i, newStr: \"\"},\n    {oldStr: /Sale ends.*/i, newStr: \"\"},\n    {oldStr: /(\\$\\d{1,}(\\.\\d{2})?)(\\$\\d{1,}(\\.\\d{2})?)/gi, newStr: \"$1 - Was $3\"},\n    {oldStr: /Shop ClothingShop Shoes/i, newStr: \"\"},\n    {oldStr: /\\| (Shop Women's Sale)/i, newStr: \"$1\"},\n    {oldStr: /Hi,? [A-z]+\\.?\\s(You've got \\$\\d+ in Nordstrom Notes)/i, newStr: \"$1\"},\n    {oldStr: /(You have 1 Personal Triple Points Day\\(s\\) expiring (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\. 31\\.).*/i, newStr: \"$1\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    {oldStr: /\\|\\s+\\|/i, newStr: \"|\"},\n    {oldStr: /\\.\\†/gi, newStr: \".\"},\n    {oldStr: /[\\†\\|-](\\s+)?$/gi, newStr: \"\"},\n    {oldStr: /\\.\\s+\\./gi, newStr: \".\"},\n  ];\n\n  for (var i = 0; i < replaceStrings.length; i++) {\n    var el = replaceStrings[i];\n    if (el.oldStr.test(data)) data = data.replace(el.oldStr, el.newStr);\n  }\n\n  data = data.trim();\n\n  if (data.lastIndexOf(\"†\") === data.length - 1) data = data.slice(0, data.length-1);\n\n  while (data.length > 100 && /[\\.\\?!;]/.test(data[data.length-1]) && data.replace(/[^\\.;\\??]/g,\"\").length > 1) {\n    data = data.slice(0, data.length-1).split(\"\").reverse().join(\"\");\n    data = data.slice(data.search(/[\\.\\?!;]/)).split(\"\").reverse().join(\"\");\n  }\n\n\n\n  return data.trim() || null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "9": [
                {
                  "xpath": "//s[1][contains(.,'$')]/ancestor::td[1]",
                  "js": "function transform (data){\n\n  var replaceStrings = [\n    {oldStr:/[\\*©®ǂ‡†±→§™¹›]/gi, newStr: \"\"},\n    {oldStr: /See Details$/i, newStr: \"\"},\n    {oldStr: /shop\\s*now|\\-\\s*learn\\s*more/ig, newStr: \"\"},\n    {oldStr: /Details below/i, newStr: \"\"},\n    {oldStr: /See Details/i, newStr: \"\"},\n    {oldStr: /Find Your Store/i, newStr: \"\"},\n    {oldStr: /Plus, /i, newStr: \"\"},\n    {oldStr: /Restrictions apply/i, newStr: \"\"},\n    {oldStr: /Get\\s+on\\s+it\\.?/i, newStr: \"\"},\n    {oldStr: /In-Store Only/i, newStr: \"\"},\n    {oldStr: /Plus, you'll get amazing benefits like.*/i, newStr: \"\"},\n    {oldStr: /Find Your Store/i, newStr: \"\"},\n    {oldStr: /^NORDSTROM REWARDS$/i, newStr: \"\"},\n    {oldStr: /(Expires|Now-)(\\s+)?(Jan|Fev|Mar|Arp|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[A-z]*\\.?\\s+\\d{1,2}.*/gi, newStr: \"\"},\n    {oldStr: /.*(Schedule your Personal 10 Points Day\\.).*/i, newStr: \"$1\"},\n    {oldStr: /Promo code required.*/i, newStr: \"\"},\n    {oldStr: /Get on it/i, newStr: \"\"},\n    {oldStr: /Sale ends.*/i, newStr: \"\"},\n    {oldStr: /(\\$\\d{1,}(\\.\\d{2})?)(\\$\\d{1,}(\\.\\d{2})?)/gi, newStr: \"$1 - Was $3\"},\n    {oldStr: /Shop ClothingShop Shoes/i, newStr: \"\"},\n    {oldStr: /\\| (Shop Women's Sale)/i, newStr: \"$1\"},\n    {oldStr: /Hi,? [A-z]+\\.?\\s(You've got \\$\\d+ in Nordstrom Notes)/i, newStr: \"$1\"},\n    {oldStr: /(You have 1 Personal Triple Points Day\\(s\\) expiring (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\. 31\\.).*/i, newStr: \"$1\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    {oldStr: /\\|\\s+\\|/i, newStr: \"|\"},\n    {oldStr: /\\.\\†/gi, newStr: \".\"},\n    {oldStr: /[\\†\\|-](\\s+)?$/gi, newStr: \"\"},\n    {oldStr: /\\.\\s+\\./gi, newStr: \".\"},\n  ];\n\n  for (var i = 0; i < replaceStrings.length; i++) {\n    var el = replaceStrings[i];\n    if (el.oldStr.test(data)) data = data.replace(el.oldStr, el.newStr);\n  }\n\n  data = data.trim();\n\n  if (data.lastIndexOf(\"†\") === data.length - 1) data = data.slice(0, data.length-1);\n\n  while (data.length > 100 && /[\\.\\?!;]/.test(data[data.length-1]) && data.replace(/[^\\.;\\??]/g,\"\").length > 1) {\n    data = data.slice(0, data.length-1).split(\"\").reverse().join(\"\");\n    data = data.slice(data.search(/[\\.\\?!;]/)).split(\"\").reverse().join(\"\");\n  }\n\n\n\n  return data.trim() || null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/description",
            "dataTypes": [
              "Text"
            ],
            "dedupCondition": {
              "matchThreshold": ".6",
              "stopWords": []
            }
          },
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//text()[contains(translate(., 'VALID', 'valid'), ' valid ') or contains(translate(., 'T', 't'), ' through ') or contains(translate(., 'ENDS', 'ends'), ' ends ') or contains(translate(., 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(., 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(., 'OFERGD', 'ofergd'), ' offer good')]",
                  "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ');\n\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@alt, 'VALID', 'valid'), ' valid ') or contains(translate(@alt, 'T', 't'), ' through ') or contains(translate(@alt, 'ENDS', 'ends'), ' ends ') or contains(translate(@alt, 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(@alt, 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(@alt, 'OFERGD', 'ofergd'), ' offer good')]/@alt",
                  "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ');\n\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "3": [
                {
                  "xpath": "//img[contains(translate(@title, 'VALID', 'valid'), ' valid ') or contains(translate(@title, 'T', 't'), ' through ') or contains(translate(@title, 'ENDS', 'ends'), ' ends ') or contains(translate(@title, 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(@title, 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(@title, 'OFERGD', 'ofergd'), ' offer good')]/@title",
                  "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ');\n\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/validThrough",
            "dataTypes": [
              "DateTime"
            ],
            "dedupCondition": null
          },
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(@alt, 'REWAD', 'rewad'), \"reward\") or contains(translate(@alt, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@alt, 'CASH', 'cash'), \"cash\") or contains(translate(@alt, 'CODE', 'code'), \"code\") or contains(translate(@alt, 'FRE', 'fre'), \"free\")]/parent::a[1]/@href",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@title, 'OF', 'of'), \" off \") or contains(@title, \"0%\") or contains(@title, \"1%\") or contains(@title, \"2%\") or contains(@title, \"3%\") or contains(@title, \"4%\") or contains(@title, \"5%\") or contains(@title, \"6%\") or contains(@title, \"7%\") or contains(@title, \"8%\") or contains(@title, \"9%\") or contains(translate(@title, 'REWAD', 'rewad'), \"reward\") or contains(translate(@title, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@title, 'CASH', 'cash'), \"cash\") or contains(translate(@title, 'CODE', 'code'), \"code\") or contains(translate(@title, 'FRE', 'fre'), \"free\")]/parent::a[1]/@href",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "3": [
                {
                  "xpath": "//a[contains(translate(., 'OF', 'of'), \" off \") or contains(., \"0%\") or contains(., \"1%\") or contains(., \"2%\") or contains(., \"3%\") or contains(., \"4%\") or contains(., \"5%\") or contains(., \"6%\") or contains(., \"7%\") or contains(., \"8%\") or contains(., \"9%\") or contains(translate(., 'REWAD', 'rewad'), \"reward\") or contains(translate(., 'COUPN', 'coupn'), \"coupon\") or contains(translate(., 'CASH', 'cash'), \"cash\") or contains(translate(., 'CODE', 'code'), \"code\") or contains(translate(., 'FRE', 'fre'), \"free\")]/@href",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/url",
            "dataTypes": [
              "URL"
            ],
            "dedupCondition": {
              "matchThreshold": ".6",
              "stopWords": []
            },
            "useSpaceForBlankNode": false
          }
        ]
      },
      {
        "id": "5aabd401-e355-41b2-9c9d-9e9ee3a1e70c",
        "type": "http://schema.org/Organization",
        "attributes": [
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "concat(\"NORDSTROM\", \"\")",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "STRING"
                }
              ]
            },
            "name": "http://schema.org/name",
            "dataTypes": [
              "Text"
            ],
            "dedupCondition": null
          }
        ]
      },
      {
        "id": "a3f2df32-7b35-4c77-8513-72ac9e26648e",
        "type": "http://schema.org/ImageObject",
        "attributes": [
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(@alt, 'REWAD', 'rewad'), \"reward\") or contains(translate(@alt, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@alt, 'CASH', 'cash'), \"cash\") or contains(translate(@alt, 'CODE', 'code'), \"code\") or contains(translate(@alt, 'SHIPNG', 'shipng'), \"shipping\")]/@src",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@title, 'OF', 'of'), \" off \") or contains(@title, \"0%\") or contains(@title, \"1%\") or contains(@title, \"2%\") or contains(@title, \"3%\") or contains(@title, \"4%\") or contains(@title, \"5%\") or contains(@title, \"6%\") or contains(@title, \"7%\") or contains(@title, \"8%\") or contains(@title, \"9%\") or contains(translate(@title, 'REWAD', 'rewad'), \"reward\") or contains(translate(@title, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@title, 'CASH', 'cash'), \"cash\") or contains(translate(@title, 'CODE', 'code'), \"code\") or contains(translate(@title, 'SHIPNG', 'shipng'), \"shipping\")]/@src",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/url",
            "dataTypes": [
              "URL"
            ]
          },
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(@alt, 'REWAD', 'rewad'), \"reward\") or contains(translate(@alt, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@alt, 'CASH', 'cash'), \"cash\") or contains(translate(@alt, 'CODE', 'code'), \"code\") or contains(translate(@alt, 'SHIPNG', 'shipng'), \"shipping\")]/@alt",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@title, 'OF', 'of'), \" off \") or contains(@title, \"0%\") or contains(@title, \"1%\") or contains(@title, \"2%\") or contains(@title, \"3%\") or contains(@title, \"4%\") or contains(@title, \"5%\") or contains(@title, \"6%\") or contains(@title, \"7%\") or contains(@title, \"8%\") or contains(@title, \"9%\") or contains(translate(@title, 'REWAD', 'rewad'), \"reward\") or contains(translate(@title, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@title, 'CASH', 'cash'), \"cash\") or contains(translate(@title, 'CODE', 'code'), \"code\") or contains(translate(@title, 'SHIPNG', 'shipng'), \"shipping\")]/@title",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/__test",
            "transient": true,
            "dataTypes": [
              "Text"
            ]
          }
        ]
      }
    ],
    "edgeRules": [
      {
        "from": {
          "entityRule": "f0cb28cf-6320-4046-82e9-0bf962223333",
          "matchAttr": ""
        },
        "to": {
          "entityRule": "5aabd401-e355-41b2-9c9d-9e9ee3a1e70c",
          "matchAttr": ""
        },
        "predicate": "http://schema.org/broker",
        "cardinality": "MANY_TO_ONE"
      },
      {
        "from": {
          "entityRule": "f0cb28cf-6320-4046-82e9-0bf962223333",
          "matchAttr": "http://schema.org/description"
        },
        "to": {
          "entityRule": "a3f2df32-7b35-4c77-8513-72ac9e26648e",
          "matchAttr": "http://schema.org/__test"
        },
        "predicate": "http://schema.org/image",
        "cardinality": "ONE_TO_ONE",
        "matchThreshold": "0.8"
      }
    ]
  },
  "preCleanInfo": []
}
/* Nordstrom two (after Kathys first review) */
{
  "extract": {
    "extractEmbedded": false,
    "source": null,
    "schema": [
      {
        "url": "http://ws.rmf.yahoo.com:4080/rmf/v1/schema?type=schema.org&name=y.2.0&format=json",
        "ns": "http://schema.org",
        "context": {
          "@type": [
            "Coupon"
          ]
        }
      }
    ],
    "entityRules": [
      {
        "id": "0386bd07-e736-4a45-9305-400e673ab76d",
        "repeating": true,
        "locations": [
          "/"
        ],
        "type": "http://schema.org/Coupon",
        "javascript": null,
        "entityIdRef": null,
        "attributes": []
      }
    ],
    "edgeRules": [],
    "entityNS": null
  },
  "metaData": {
    "useVTDXML": "true",
    "ignoredValidations": null,
    "footerRatio": "0.3",
    "footerRatioFallBack": "0.4"
  },
  "extractV2": {
    "entityRules": [
      {
        "id": "f0cb28cf-6320-4046-82e9-0bf962223333",
        "type": "http://schema.org/Coupon",
        "attributes": [
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(translate(@alt,'HOUSEPARTY','houseparty'),\"house party\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") and not(contains(translate(@alt,'HOUSEPARTY','houseparty'),\"house party\")) or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(@alt, 'REWAD', 'rewad'), \"reward\") and not (contains(translate(@alt,'NORDSTMEWAD', 'nordstmedwad'),'nordstrom rewards')) or contains(translate(@alt, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@alt, 'CASH', 'cash'), \"cash\") or contains(translate(@alt, 'DISCOUNT', 'discount'), \"discount\") or contains(translate(@alt, 'CODE', 'code'), \"code\") or contains(translate(@alt, 'REDM', 'redm'), \"redeem\") or contains(translate(@alt, 'REWARDS', 'rewards'), \"rewards\") or contains(translate(@alt, 'PROMTIN', 'promtin'), \"promotion\") or contains(translate(@alt, 'SHIPNG', 'shipng'), \"shipping\") or contains(translate(@alt,'SALE','sale'),\" sale\") and not(contains(@alt,\"easier?\")) or contains(translate(@alt,'FREGIT','fregit'),\"free gift\") or contains(translate(@alt,'ADTONLGIT','adtonlgit'),\"additional gift\") \n or contains(translate(@alt,'GETA','geta'),\"get a $\") or contains(translate(@alt,'SAVEON','saveon'),\"save on \") or contains(translate(@alt,'FREDLIVYB','fredlivyb'),\"free delivery by\") or contains(translate(@alt,'EARN','earn'),\"earn\") and contains(translate(@alt,'POINTS','points'),\"points\") and contains(translate(@alt,'X','x'),\"x\") or contains(translate(@alt,'SAVING','saving'),\"savings\") or contains(translate(@alt,'POINTSDYEXR','pointsdyexr'),\"points day expires\") or contains(translate(@alt,'GIFTWHYOUR','giftwhyour'),\"gift with your $\") or contains(translate(@alt,'EARNTRIPL','earntripl'),\"earn triple p\") or contains(translate(@alt,'GIFTWHYOUR','giftwhyour'),\"gift with $\") or contains(translate(@alt,'PERCNTOF','percntof'),\"percent off\")]/@alt\n",
                  "js": "function transform (data){\n\n  var replaceStrings = [\n    {oldStr:/[\\*©®ǂ‡†±→§™¹›]/gi, newStr: \"\"},\n    {oldStr: /See Details$/i, newStr: \"\"},\n    {oldStr: /shop\\s*now|\\-\\s*learn\\s*more/ig, newStr: \"\"},\n    {oldStr: /Details below/i, newStr: \"\"},\n    {oldStr: /See Details/i, newStr: \"\"},\n    {oldStr: /Find Your Store/i, newStr: \"\"},\n    {oldStr: /Plus, /i, newStr: \"\"},\n    {oldStr: /Restrictions apply/i, newStr: \"\"},\n    {oldStr: /Get\\s+on\\s+it\\.?/i, newStr: \"\"},\n    {oldStr: /In-Store Only/i, newStr: \"\"},\n    {oldStr: /Plus, you'll get amazing benefits like.*/i, newStr: \"\"},\n    {oldStr: /Find Your Store/i, newStr: \"\"},\n    {oldStr: /^NORDSTROM REWARDS$/i, newStr: \"\"},\n    {oldStr: /(Expires|Now-)(\\s+)?(Jan|Fev|Mar|Arp|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[A-z]*\\.?\\s+\\d{1,2}.*/gi, newStr: \"\"},\n    {oldStr: /.*(Schedule your Personal 10 Points Day\\.).*/i, newStr: \"$1\"},\n    {oldStr: /Promo code required.*/i, newStr: \"\"},\n    {oldStr: /Get on it/i, newStr: \"\"},\n    {oldStr: /Sale ends.*/i, newStr: \"\"},\n    {oldStr: /(\\$\\d{1,}(\\.\\d{2})?)(\\$\\d{1,}(\\.\\d{2})?)/gi, newStr: \"$1 - Was $3\"},\n    {oldStr: /Shop ClothingShop Shoes/i, newStr: \"\"},\n    {oldStr: /\\| (Shop Women's Sale)/i, newStr: \"$1\"},\n    {oldStr: /Hi,? [A-z]+\\.?\\s(You've got \\$\\d+ in Nordstrom Notes)/i, newStr: \"$1\"},\n    {oldStr: /(You have 1 Personal Triple Points Day\\(s\\) expiring (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\. 31\\.).*/i, newStr: \"$1\"},\n    {oldStr: / or$/i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    {oldStr: /\\|\\s+\\|/i, newStr: \"|\"},\n    {oldStr: /\\.\\†/gi, newStr: \".\"},\n    {oldStr: /[\\†\\|-](\\s+)?$/gi, newStr: \"\"},\n    {oldStr: /\\.\\s+\\./gi, newStr: \".\"},\n  ];\n\n  for (var i = 0; i < replaceStrings.length; i++) {\n    var el = replaceStrings[i];\n    if (el.oldStr.test(data)) data = data.replace(el.oldStr, el.newStr);\n  }\n\n  data = data.trim();\n\n  if (data.lastIndexOf(\"†\") === data.length - 1) data = data.slice(0, data.length-1);\n  \n  if(data.length > 100) \n    return data.replace(/(\\.)(\\d)/g,\"~~~$2\")\n    .match(/[^\\.\\?\\!]*((\\$\\d)|(free)|(redeem)|(house \\/d0)|(\\%))[^\\.\\?\\!]*/ig)\n    .join(\". \")\n    .replace(/(\\~\\~\\~)(\\d)/g,\".$2\") + \".\";\n\n\n\n  return data.trim() || null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "3": [
                {
                  "xpath": "//strong[contains(.,\"$\") or contains(translate(.,\"POINTS\",\"points\"),\"points\")]/ancestor::td[1][contains(translate(.,\"OF\",\"of\"),\"% off\") or contains(./descendant::s/descendant::text(),\"$\") or contains(translate(.,\"POINTS\",\"points\"),\"points\")]",
                  "js": "function transform (data){\n\n  var replaceStrings = [\n    {oldStr:/[\\*©®ǂ‡†±→§™¹›]/gi, newStr: \"\"},\n    {oldStr: /See Details$/i, newStr: \"\"},\n    {oldStr: /shop\\s*now|\\-\\s*learn\\s*more/ig, newStr: \"\"},\n    {oldStr: /Details below/i, newStr: \"\"},\n    {oldStr: /See Details/i, newStr: \"\"},\n    {oldStr: /Find Your Store/i, newStr: \"\"},\n    {oldStr: /Plus, /i, newStr: \"\"},\n    {oldStr: /Restrictions apply/i, newStr: \"\"},\n    {oldStr: /Get\\s+on\\s+it\\.?/i, newStr: \"\"},\n    {oldStr: /In-Store Only/i, newStr: \"\"},\n    {oldStr: /Plus, you'll get amazing benefits like.*/i, newStr: \"\"},\n    {oldStr: /Find Your Store/i, newStr: \"\"},\n    {oldStr: /^NORDSTROM REWARDS$/i, newStr: \"\"},\n    {oldStr: /(Expires|Now-)(\\s+)?(Jan|Fev|Mar|Arp|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[A-z]*\\.?\\s+\\d{1,2}.*/gi, newStr: \"\"},\n    {oldStr: /.*(Schedule your Personal 10 Points Day\\.).*/i, newStr: \"$1\"},\n    {oldStr: /Promo code required.*/i, newStr: \"\"},\n    {oldStr: /Get on it/i, newStr: \"\"},\n    {oldStr: /Sale ends.*/i, newStr: \"\"},\n    {oldStr: /(\\$\\d{1,}(\\.\\d{2})?)(\\$\\d{1,}(\\.\\d{2})?)/gi, newStr: \"$1 - Was $3\"},\n    {oldStr: /Shop ClothingShop Shoes/i, newStr: \"\"},\n    {oldStr: /\\| (Shop Women's Sale)/i, newStr: \"$1\"},\n    {oldStr: /Hi,? [A-z]+\\.?\\s(You've got \\$\\d+ in Nordstrom Notes)/i, newStr: \"$1\"},\n    {oldStr: /(You have 1 Personal Triple Points Day\\(s\\) expiring (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\. 31\\.).*/i, newStr: \"$1\"},\n    {oldStr: / or$/i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    {oldStr: /\\|\\s+\\|/i, newStr: \"|\"},\n    {oldStr: /\\.\\†/gi, newStr: \".\"},\n    {oldStr: /[\\†\\|-](\\s+)?$/gi, newStr: \"\"},\n    {oldStr: /\\.\\s+\\./gi, newStr: \".\"},\n  ];\n\n  for (var i = 0; i < replaceStrings.length; i++) {\n    var el = replaceStrings[i];\n    if (el.oldStr.test(data)) data = data.replace(el.oldStr, el.newStr);\n  }\n\n  data = data.trim();\n\n  if (data.lastIndexOf(\"†\") === data.length - 1) data = data.slice(0, data.length-1);\n  \n  if(data.length > 100) \n    return data.replace(/(\\.)(\\d)/g,\"~~~$2\")\n    .match(/[^\\.\\?\\!]*((\\$\\d)|(free)|(redeem)|(house \\/d0)|(\\%))[^\\.\\?\\!]*/ig)\n    .join(\". \")\n    .replace(/(\\~\\~\\~)(\\d)/g,\".$2\") + \".\";\n\n\n\n  return data.trim() || null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/description",
            "dataTypes": [
              "Text"
            ],
            "dedupCondition": {
              "matchThreshold": ".6",
              "stopWords": []
            }
          },
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//text()[contains(translate(., 'VALID', 'valid'), ' valid ') or contains(translate(., 'T', 't'), ' through ') or contains(translate(., 'ENDS', 'ends'), ' ends ') or contains(translate(., 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(., 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(., 'OFERGD', 'ofergd'), ' offer good')]",
                  "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ');\n\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@alt, 'VALID', 'valid'), ' valid ') or contains(translate(@alt, 'T', 't'), ' through ') or contains(translate(@alt, 'ENDS', 'ends'), ' ends ') or contains(translate(@alt, 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(@alt, 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(@alt, 'OFERGD', 'ofergd'), ' offer good')]/@alt",
                  "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ');\n\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "3": [
                {
                  "xpath": "//img[contains(translate(@title, 'VALID', 'valid'), ' valid ') or contains(translate(@title, 'T', 't'), ' through ') or contains(translate(@title, 'ENDS', 'ends'), ' ends ') or contains(translate(@title, 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(@title, 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(@title, 'OFERGD', 'ofergd'), ' offer good')]/@title",
                  "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ');\n\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/validThrough",
            "dataTypes": [
              "DateTime"
            ],
            "dedupCondition": null
          },
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(translate(@alt,'HOUSEPARTY','houseparty'),\"house party\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") and not(contains(translate(@alt,'HOUSEPARTY','houseparty'),\"house party\")) or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(@alt, 'REWAD', 'rewad'), \"reward\") and not (contains(translate(@alt,'NORDSTMEWAD', 'nordstmedwad'),'nordstrom rewards')) or contains(translate(@alt, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@alt, 'CASH', 'cash'), \"cash\") or contains(translate(@alt, 'DISCOUNT', 'discount'), \"discount\") or contains(translate(@alt, 'CODE', 'code'), \"code\") or contains(translate(@alt, 'REDM', 'redm'), \"redeem\") or contains(translate(@alt, 'REWARDS', 'rewards'), \"rewards\") or contains(translate(@alt, 'PROMTIN', 'promtin'), \"promotion\") or contains(translate(@alt, 'SHIPNG', 'shipng'), \"shipping\") or contains(translate(@alt,'SALE','sale'),\" sale\") and not(contains(@alt,\"easier?\")) or contains(translate(@alt,'FREGIT','fregit'),\"free gift\") or contains(translate(@alt,'ADTONLGIT','adtonlgit'),\"additional gift\") \n or contains(translate(@alt,'GETA','geta'),\"get a $\") or contains(translate(@alt,'SAVEON','saveon'),\"save on \") or contains(translate(@alt,'FREDLIVYB','fredlivyb'),\"free delivery by\") or contains(translate(@alt,'EARN','earn'),\"earn\") and contains(translate(@alt,'POINTS','points'),\"points\") and contains(translate(@alt,'X','x'),\"x\") or contains(translate(@alt,'SAVING','saving'),\"savings\") or contains(translate(@alt,'POINTSDYEXR','pointsdyexr'),\"points day expires\") or contains(translate(@alt,'GIFTWHYOUR','giftwhyour'),\"gift with your $\") or contains(translate(@alt,'EARNTRIPL','earntripl'),\"earn triple p\") or contains(translate(@alt,'GIFTWHYOUR','giftwhyour'),\"gift with $\") or contains(translate(@alt,'PERCNTOF','percntof'),\"percent off\")]/parent::a[1]/@href\n",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//strong[contains(.,\"$\") or contains(translate(.,\"POINTS\",\"points\"),\"points\")]/ancestor::td[1][contains(translate(.,\"OF\",\"of\"),\"% off\") or contains(./descendant::s/descendant::text(),\"$\") or contains(translate(.,\"POINTS\",\"points\"),\"points\")]/following::a[1]/@href",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/url",
            "dataTypes": [
              "URL"
            ],
            "dedupCondition": {
              "matchThreshold": ".6",
              "stopWords": []
            },
            "useSpaceForBlankNode": false
          }
        ]
      },
      {
        "id": "5aabd401-e355-41b2-9c9d-9e9ee3a1e70c",
        "type": "http://schema.org/Organization",
        "attributes": [
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "concat(\"NORDSTROM\", \"\")",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "STRING"
                }
              ]
            },
            "name": "http://schema.org/name",
            "dataTypes": [
              "Text"
            ],
            "dedupCondition": null
          }
        ]
      },
      {
        "id": "a3f2df32-7b35-4c77-8513-72ac9e26648e",
        "type": "http://schema.org/ImageObject",
        "attributes": [
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(translate(@alt,'HOUSEPARTY','houseparty'),\"house party\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") and not(contains(translate(@alt,'HOUSEPARTY','houseparty'),\"house party\")) or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(@alt, 'REWAD', 'rewad'), \"reward\") and not (contains(translate(@alt,'NORDSTMEWAD', 'nordstmedwad'),'nordstrom rewards')) or contains(translate(@alt, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@alt, 'CASH', 'cash'), \"cash\") or contains(translate(@alt, 'DISCOUNT', 'discount'), \"discount\") or contains(translate(@alt, 'CODE', 'code'), \"code\") or contains(translate(@alt, 'REDM', 'redm'), \"redeem\") or contains(translate(@alt, 'REWARDS', 'rewards'), \"rewards\") or contains(translate(@alt, 'PROMTIN', 'promtin'), \"promotion\") or contains(translate(@alt, 'SHIPNG', 'shipng'), \"shipping\") or contains(translate(@alt,'SALE','sale'),\" sale\") and not(contains(@alt,\"easier?\")) or contains(translate(@alt,'FREGIT','fregit'),\"free gift\") or contains(translate(@alt,'ADTONLGIT','adtonlgit'),\"additional gift\") \n or contains(translate(@alt,'GETA','geta'),\"get a $\") or contains(translate(@alt,'SAVEON','saveon'),\"save on \") or contains(translate(@alt,'FREDLIVYB','fredlivyb'),\"free delivery by\") or contains(translate(@alt,'EARN','earn'),\"earn\") and contains(translate(@alt,'POINTS','points'),\"points\") and contains(translate(@alt,'X','x'),\"x\") or contains(translate(@alt,'SAVING','saving'),\"savings\") or contains(translate(@alt,'POINTSDYEXR','pointsdyexr'),\"points day expires\") or contains(translate(@alt,'GIFTWHYOUR','giftwhyour'),\"gift with your $\") or contains(translate(@alt,'EARNTRIPL','earntripl'),\"earn triple p\") or contains(translate(@alt,'GIFTWHYOUR','giftwhyour'),\"gift with $\") or contains(translate(@alt,'PERCNTOF','percntof'),\"percent off\")]/@src\n",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/url",
            "dataTypes": [
              "URL"
            ],
            "dedupCondition": {
              "matchThreshold": ".6",
              "stopWords": []
            }
          },
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(@alt, 'REWAD', 'rewad'), \"reward\") or contains(translate(@alt, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@alt, 'CASH', 'cash'), \"cash\") or contains(translate(@alt, 'CODE', 'code'), \"code\") or contains(translate(@alt, 'SHIPNG', 'shipng'), \"shipping\")]/@alt",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@title, 'OF', 'of'), \" off \") or contains(@title, \"0%\") or contains(@title, \"1%\") or contains(@title, \"2%\") or contains(@title, \"3%\") or contains(@title, \"4%\") or contains(@title, \"5%\") or contains(@title, \"6%\") or contains(@title, \"7%\") or contains(@title, \"8%\") or contains(@title, \"9%\") or contains(translate(@title, 'REWAD', 'rewad'), \"reward\") or contains(translate(@title, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@title, 'CASH', 'cash'), \"cash\") or contains(translate(@title, 'CODE', 'code'), \"code\") or contains(translate(@title, 'SHIPNG', 'shipng'), \"shipping\")]/@title",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/__test",
            "transient": true,
            "dataTypes": [
              "Text"
            ]
          }
        ]
      }
    ],
    "edgeRules": [
      {
        "from": {
          "entityRule": "f0cb28cf-6320-4046-82e9-0bf962223333",
          "matchAttr": ""
        },
        "to": {
          "entityRule": "5aabd401-e355-41b2-9c9d-9e9ee3a1e70c",
          "matchAttr": ""
        },
        "predicate": "http://schema.org/broker",
        "cardinality": "MANY_TO_ONE"
      },
      {
        "from": {
          "entityRule": "f0cb28cf-6320-4046-82e9-0bf962223333",
          "matchAttr": "http://schema.org/description"
        },
        "to": {
          "entityRule": "a3f2df32-7b35-4c77-8513-72ac9e26648e",
          "matchAttr": "http://schema.org/__test"
        },
        "predicate": "http://schema.org/image",
        "cardinality": "ONE_TO_ONE",
        "matchThreshold": "0.8"
      }
    ]
  },
  "preCleanInfo": []
}

/* SLEEP NUMBER default_rule_mailreply.selectcomfort.com */
{
  "extract": {
    "extractEmbedded": false,
    "source": null,
    "schema": [
      {
        "url": "http://ws.rmf.yahoo.com:4080/rmf/v1/schema?type=schema.org&name=y.2.0&format=json",
        "ns": "http://schema.org",
        "context": {
          "@type": [
            "Coupon"
          ]
        }
      }
    ],
    "entityRules": [
      {
        "id": "0386bd07-e736-4a45-9305-400e673ab76d",
        "repeating": true,
        "locations": [
          "/"
        ],
        "type": "http://schema.org/Coupon",
        "javascript": null,
        "entityIdRef": null,
        "attributes": []
      }
    ],
    "edgeRules": [],
    "entityNS": null
  },
  "metaData": {
    "useVTDXML": "true",
    "ignoredValidations": null,
    "footerRatio": "0.3",
    "footerRatioFallBack": "0.4"
  },
  "extractV2": {
    "entityRules": [
      {
        "id": "f0cb28cf-6320-4046-82e9-0bf962223333",
        "type": "http://schema.org/Coupon",
        "attributes": [
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \"% off\") or (contains(translate(@alt, 'OF', 'of'), \"off\") or contains(translate(@alt,\"ENDSTOAY\",\"endstoay\"),\"ends today\") or contains(translate(@alt,\"SAVE\",\"save\"),\"save\") or contains(translate(@alt,\"REWAD\",\"rewad\"),\"reward\") or contains(translate(@alt,\"GIFT\",\"gift\"),\"gift\") or contains(translate(@alt,\"REF\",\"ref\"),\"refer\")) and (contains(@alt, \"$\") or contains(@alt,\"%\") or contains(translate(@alt,\"CERTIFA\",\"certica\"),\"certificate\")) or contains(translate(@alt,\"FRE\",\"fre\"),\"free\") or contains(translate(@alt,\"DISCOUNT\",\"discount\"),\"discount\") or contains(translate(@alt,\"SAVEON\",\"saveon\"),\"save on\") or contains(translate(@alt,\"CLEARN\",\"clearn\"),\"clearance\") or contains(translate(@alt,\"SALE\",\"sale\"),\"sale\")]\n\n[not (contains(translate(@alt,\"INTERS\",\"inters\"),\"interest\") or contains(translate(@alt,\"FES\",\"fes\"),\"fees\") or contains(translate(@alt,\"OFERVALID\",\"ofervalid\"),\"offer valid\")  or contains(translate(@alt,\"RESTRICTONS\",\"restrictons\"),\"restrictions\") or contains(translate(@alt,\"CONTA\",\"conta\"),\"contact\") or contains(translate(@alt,\"RETAILVU\",\"retailvu\"),\"retail value\") or contains(translate(@alt,\"NOTAVILBE\",\"notavilbe\"),\"not available\") or contains(translate(@alt,\"EXPIRES\",\"expires\"),\"expires\"))]/@alt",
                  "js": "function transform(data) {\n  var replaceArr = [\n    {olsStr: /[\\*\\©\\®\\ǂ\\†\\±\\→\\§\\™\\¹\\❯\\=]/gi, newStr: \"\"},\n    {oldStr: /Learn More/i, newStr: \"\"},\n    {oldStr: /Shop Now/i, newStr: \"\"},\n    {oldStr: /.*You've earned:\\d+ points/i, newStr: \"\"},\n    {oldStr: /Your InnerCircleSMreward certificate expires.*/i, newStr: \"\"},\n    {oldStr: /See all offers.*/i, newStr: \"\"},\n    {oldStr: /(SEE ALL SPRING CLEARANCE OFFERS).*/i, newStr: \"$1\"},\n    {oldStr: /=/g, newStr: \"\"},\n    {oldStr: /❯/g, newStr: \"\"},\n    {oldStr: /\\>/g, newStr: \"\"},\n    {oldStr: /\\*/g, newStr: \"\"},\n    {oldStr: /\\|(\\s+)$/i, newStr: \"\"},\n  ];\n\n  replaceArr.forEach(function(el) {\n    data = data.replace(el.oldStr, el.newStr);\n  });\n\n  return data;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "3": [
                {
                  "xpath": "//span[contains(translate(., 'OF', 'of'), \"% off\") or (contains(translate(., 'OF', 'of'), \"off\") or contains(translate(.,\"ENDSTOAY\",\"endstoay\"),\"ends today\") or contains(translate(.,\"SAVE\",\"save\"),\"save\") or contains(translate(.,\"REWAD\",\"rewad\"),\"reward\") or contains(translate(.,\"GIFT\",\"gift\"),\"gift\") or contains(translate(.,\"REF\",\"ref\"),\"refer\")) and (contains(., \"$\") or contains(.,\"%\") or contains(translate(.,\"CERTIFA\",\"certica\"),\"certificate\")) or contains(translate(.,\"FRE\",\"fre\"),\"free\") or contains(translate(.,\"DISCOUNT\",\"discount\"),\"discount\") or contains(translate(.,\"SAVEON\",\"saveon\"),\"save on\") or contains(translate(.,\"CLEARN\",\"clearn\"),\"clearance\") or contains(translate(.,\"SALE\",\"sale\"),\"sale\") and contains(translate(.,\"SHOP\",\"shop\"),\"shop\")]\n\n[not (contains(translate(.,\"INTERS\",\"inters\"),\"interest\") or contains(translate(.,\"FES\",\"fes\"),\"fees\") or contains(translate(.,\"OFERVALID\",\"ofervalid\"),\"offer valid\") or contains(translate(.,\"RESTRICTONS\",\"restrictons\"),\"restrictions\") or contains(translate(.,\"CONTA\",\"conta\"),\"contact\") or contains(translate(.,\"RETAILVU\",\"retailvu\"),\"retail value\") or contains(translate(.,\"NOTAVILBE\",\"notavilbe\"),\"not available\") or contains(translate(.,\"EXPIRES\",\"expires\"),\"expires\"))]",
                  "js": "function transform(data) {\n  var replaceArr = [\n    {olsStr: /[\\*\\©\\®\\ǂ\\†\\±\\→\\§\\™\\¹\\❯\\=]/gi, newStr: \"\"},\n    {oldStr: /Learn More/i, newStr: \"\"},\n    {oldStr: /Shop Now/i, newStr: \"\"},\n    {oldStr: /.*You've earned:\\d+ points/i, newStr: \"\"},\n    {oldStr: /Your InnerCircleSMreward certificate expires.*/i, newStr: \"\"},\n    {oldStr: /See all offers.*/i, newStr: \"\"},\n    {oldStr: /(SEE ALL SPRING CLEARANCE OFFERS).*/i, newStr: \"$1\"},\n    {oldStr: /=/g, newStr: \"\"},\n    {oldStr: /❯/g, newStr: \"\"},\n    {oldStr: /\\>/g, newStr: \"\"},\n    {oldStr: /\\*/g, newStr: \"\"},\n    {oldStr: /\\|(\\s+)$/i, newStr: \"\"},\n  ];\n\n  replaceArr.forEach(function(el) {\n    data = data.replace(el.oldStr, el.newStr);\n  });\n\n  return data;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "4": [
                {
                  "xpath": "//a/parent::td[contains(translate(., 'OF', 'of'), \"% off\") or (contains(translate(., 'OF', 'of'), \"off\") or contains(translate(.,\"ENDSTOAY\",\"endstoay\"),\"ends today\") or contains(translate(@alt,\"SAVE\",\"save\"),\"save\") or contains(translate(.,\"REWAD\",\"rewad\"),\"reward\") or contains(translate(.,\"GIFT\",\"gift\"),\"gift\") or contains(translate(.,\"REF\",\"ref\"),\"refer\")) and (contains(., \"$\") or contains(.,\"%\") or contains(translate(.,\"CERTIFA\",\"certica\"),\"certificate\")) or contains(translate(.,\"FRE\",\"fre\"),\"free\") or contains(translate(.,\"DISCOUNT\",\"discount\"),\"discount\") or contains(translate(.,\"SAVEON\",\"saveon\"),\"save on\") or contains(translate(.,\"CLEARN\",\"clearn\"),\"clearance\") or contains(translate(.,\"SALE\",\"sale\"),\"sale\") and contains(translate(.,\"SHOP\",\"shop\"),\"shop\")]\n\n[not (contains(translate(.,\"INTERS\",\"inters\"),\"interest\") or contains(translate(.,\"FES\",\"fes\"),\"fees\") or contains(translate(.,\"OFERVALID\",\"ofervalid\"),\"offer valid\")  or contains(translate(.,\"RESTRICTONS\",\"restrictons\"),\"restrictions\") or contains(translate(.,\"CONTA\",\"conta\"),\"contact\") or contains(translate(.,\"RETAILVU\",\"retailvu\"),\"retail value\") or contains(translate(.,\"NOTAVILBE\",\"notavilbe\"),\"not available\") or contains(translate(.,\"EXPIRES\",\"expires\"),\"expires\"))]",
                  "js": "function transform(data) {\n  var replaceArr = [\n    {olsStr: /[\\*\\©\\®\\ǂ\\†\\±\\→\\§\\™\\¹\\❯\\=]/gi, newStr: \"\"},\n    {oldStr: /Learn More/i, newStr: \"\"},\n    {oldStr: /Shop Now/i, newStr: \"\"},\n    {oldStr: /.*You've earned:\\d+ points/i, newStr: \"\"},\n    {oldStr: /Your InnerCircleSMreward certificate expires.*/i, newStr: \"\"},\n    {oldStr: /See all offers.*/i, newStr: \"\"},\n    {oldStr: /(SEE ALL SPRING CLEARANCE OFFERS).*/i, newStr: \"$1\"},\n    {oldStr: /=/g, newStr: \"\"},\n    {oldStr: /❯/g, newStr: \"\"},\n    {oldStr: /\\>/g, newStr: \"\"},\n    {oldStr: /\\*/g, newStr: \"\"},\n    {oldStr: /\\|(\\s+)$/i, newStr: \"\"},\n  ];\n\n  replaceArr.forEach(function(el) {\n    data = data.replace(el.oldStr, el.newStr);\n  });\n\n  return data;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/description",
            "dataTypes": [
              "Text"
            ],
            "dedupCondition": {
              "matchThreshold": ".5",
              "stopWords": []
            }
          },
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//text()[contains(translate(., 'VALID', 'valid'), ' valid ') or contains(translate(., 'T', 't'), ' through ') or contains(translate(., 'ENDS', 'ends'), ' ends ') or contains(translate(., 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(., 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(., 'OFERGD', 'ofergd'), ' offer good')]",
                  "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ');\n\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@alt, 'VALID', 'valid'), ' valid ') or contains(translate(@alt, 'T', 't'), ' through ') or contains(translate(@alt, 'ENDS', 'ends'), ' ends ') or contains(translate(@alt, 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(@alt, 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(@alt, 'OFERGD', 'ofergd'), ' offer good')]/@alt",
                  "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ');\n\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "3": [
                {
                  "xpath": "//img[contains(translate(@title, 'VALID', 'valid'), ' valid ') or contains(translate(@title, 'T', 't'), ' through ') or contains(translate(@title, 'ENDS', 'ends'), ' ends ') or contains(translate(@title, 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(@title, 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(@title, 'OFERGD', 'ofergd'), ' offer good')]/@title",
                  "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ');\n\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/validThrough",
            "dataTypes": [
              "DateTime"
            ],
            "dedupCondition": null
          },
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(@alt, 'REWAD', 'rewad'), \"reward\") or contains(translate(@alt, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@alt, 'CASH', 'cash'), \"cash\") or contains(translate(@alt, 'CODE', 'code'), \"code\") or contains(translate(@alt, 'REWARDS', 'rewards'), \"rewards\") or contains(translate(@alt, 'PROMTIN', 'promtin'), \"promotion\") or contains(translate(@alt, 'SHIPNG', 'shipng'), \"shipping\") or contains(@alt,\"$\") or contains(translate(@alt,\"SAVE\",\"save\"),\"save\") or contains(translate(@alt,\"FRE\",\"fre\"),\"free\") or contains(translate(@alt,\"CLEARNC\",\"clearnc\"),\"clearance\") or contains(translate(@alt,\"SHOP\",\"shop\"),\"shop\")]/parent::a/@href",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@title, 'OF', 'of'), \" off \") or contains(@title, \"0%\") or contains(@title, \"1%\") or contains(@title, \"2%\") or contains(@title, \"3%\") or contains(@title, \"4%\") or contains(@title, \"5%\") or contains(@title, \"6%\") or contains(@title, \"7%\") or contains(@title, \"8%\") or contains(@title, \"9%\") or contains(translate(@title, 'REWAD', 'rewad'), \"reward\") or contains(translate(@title, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@title, 'CASH', 'cash'), \"cash\") or contains(translate(@title, 'CODE', 'code'), \"code\") or contains(translate(@title, 'REWARDS', 'rewards'), \"rewards\") or contains(translate(@title, 'PROMTIN', 'promtin'), \"promotion\") or contains(translate(@title, 'SHIPNG', 'shipng'), \"shipping\") or contains(@title,\"$\")  or contains(translate(@title,\"SAVE\",\"save\"),\"save\") or contains(translate(@title,\"FRE\",\"fre\"),\"free\") or contains(translate(@title,\"CLEARNC\",\"clearnc\"),\"clearance\") or contains(translate(@title,\"SHOP\",\"shop\"),\"shop\")]/parent::a/@href",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "3": [
                {
                  "xpath": "//a[contains(.,\"REDEEM\") or contains(translate(.,\"SHOP\",\"shop\"),\"shop\")]/@href",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/url",
            "dataTypes": [
              "URL"
            ],
            "dedupCondition": null
          }
        ]
      },
      {
        "id": "5aabd401-e355-41b2-9c9d-9e9ee3a1e70c",
        "type": "http://schema.org/Organization",
        "attributes": [
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "concat(\"sleep number\", \"\")",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "STRING"
                }
              ]
            },
            "name": "http://schema.org/name",
            "dataTypes": [
              "Text"
            ],
            "dedupCondition": null
          }
        ]
      },
      {
        "id": "a3f2df32-7b35-4c77-8513-72ac9e26648e",
        "type": "http://schema.org/ImageObject",
        "attributes": [
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[not (contains(@src,\"hr.jpg\") or contains(@src,\"signin\") or contains(@src,\"footer\") or contains(@src,\"pinterest\") or contains(@src,\"facebook\") or contains(@src,\"twitter\") or contains(@src,\"youtube\") or contains(@src,\"instag\") or contains(@src,\"line_02\")  or contains(@src,\"FINAL_02\") or contains(@alt,\"Knows\"))]/@src",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/url",
            "dataTypes": [
              "URL"
            ],
            "dedupCondition": null
          },
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[not (contains(@src,\"hr.jpg\") or contains(@src,\"signin\") or contains(@src,\"footer\") or contains(@src,\"pinterest\") or contains(@src,\"facebook\") or contains(@src,\"twitter\") or contains(@src,\"youtube\") or contains(@src,\"instag\") or contains(@src,\"line_02\")  or contains(@src,\"FINAL_02\") or contains(@alt,\"Knows\"))]/@alt",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/__test",
            "transient": true,
            "dataTypes": [
              "Text"
            ],
            "dedupCondition": null
          }
        ],
        "attributeMatchConditions": null
      }
    ],
    "edgeRules": [
      {
        "from": {
          "entityRule": "f0cb28cf-6320-4046-82e9-0bf962223333",
          "matchAttr": ""
        },
        "to": {
          "entityRule": "5aabd401-e355-41b2-9c9d-9e9ee3a1e70c",
          "matchAttr": ""
        },
        "predicate": "http://schema.org/broker",
        "cardinality": "MANY_TO_ONE"
      },
      {
        "from": {
          "entityRule": "f0cb28cf-6320-4046-82e9-0bf962223333",
          "matchAttr": ""
        },
        "to": {
          "entityRule": "a3f2df32-7b35-4c77-8513-72ac9e26648e",
          "matchAttr": ""
        },
        "predicate": "http://schema.org/image",
        "cardinality": "ONE_TO_ONE"
      }
    ]
  },
  "preCleanInfo": []
}

/* SYNCHRONY FINANCIAL  e.synchronyfinancial.com */
{
  "extract": {
    "extractEmbedded": false,
    "source": null,
    "schema": [
      {
        "url": "http://ws.rmf.yahoo.com:4080/rmf/v1/schema?type=schema.org&name=y.2.0&format=json",
        "ns": "http://schema.org",
        "context": {
          "@type": [
            "Coupon"
          ]
        }
      }
    ],
    "entityRules": [
      {
        "id": "0386bd07-e736-4a45-9305-400e673ab76d",
        "repeating": true,
        "locations": [
          "/"
        ],
        "type": "http://schema.org/Coupon",
        "javascript": null,
        "entityIdRef": null,
        "attributes": []
      }
    ],
    "edgeRules": [],
    "entityNS": null
  },
  "metaData": {
    "useVTDXML": "true",
    "ignoredValidations": null,
    "footerRatio": "0.3",
    "footerRatioFallBack": "0.4"
  },
  "extractV2": {
    "entityRules": [
      {
        "id": "f0cb28cf-6320-4046-82e9-0bf962223333",
        "type": "http://schema.org/Coupon",
        "attributes": [
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt,\"FRE\",\"fre\"),\"free\") or (contains(translate(@alt,\"SAVE\",\"save\"),\"save\") or contains(translate(@alt,\"OF\",\"of\"),\"off\") or contains(translate(@alt,\"REWARD\",\"reward\"),\"reward\") or contains(translate(@alt,\"CASH\",\"cash\"),\"cash\") or contains(translate(@alt,\"EARN\",\"earn\"),\"earn\") or contains(translate(@alt,\"REBAT\",\"rebat\"),\"rebate\") or contains(translate(@alt,\"PREAID\",\"preaid\"),\"prepaid\") or contains(translate(@alt,\"GIFT\",\"gift\"),\"gift\")) and (contains(@alt,\"%\") or contains(@alt, \"$\")  or contains(@alt,\"¢\") or contains(translate(@alt,\"CERTIFA\",\"certifa\"),\"certificate\"))]\n\n[not (contains(translate(@alt,\"APR\",\"apr\"),\"apr\") or contains(translate(@alt,\"FINACG\",\"finacg\"),\"financing\") or contains(translate(@alt,\"CHARGED\",\"charged\"),\"charged\") or contains(translate(@alt,\"OF\",\"of\"),\"offer\") or contains(translate(@alt,\"ACOUNTED\",\"acounted\"),\"account end\")  or contains(translate(@alt,\"REQUID\",\"requid\"),\"required\") or contains(translate(@alt,\"CREDITAPOV\",\"creditapovl\"),\"credit approval\") or contains(translate(@alt,\"PURCHASEMONT\",\"purchasemont\"),\"purchase amount\"))]/@alt",
                  "js": "function transform(data){\n  var replaceArr = [\n    {oldStr: /[\\*©®ǂ†±→§™¹>❯]/g, newStr: \"\"}, \n    {oldStr: /^[\\^\\•\\+]\\s/i, newStr: \"\"},\n    {oldStr: /^(Plus,?|Or)/i, newStr: \"\"}\n  ];\n  \n  for (var i = 0; i < replaceArr.length; i++) {\n    var el = replaceArr[i];\n    data = data.replace(el.oldStr, el.newStr);\n  }\n  \n  if(data.length>120){\n    return data.replace(/(\\.)(\\d)/g,\"~~~$2\")\n    .match(/[^\\.\\?\\!]*((\\$\\d)|(free)|(redeem)|(\\%))[^\\.\\?\\!]*/ig)\n    .join(\". \")\n    .replace(/(\\~\\~\\~)(\\d)/g,\".$2\") + \".\";\n  }\n  \n  return data;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//a[contains(translate(.,\"FRE\",\"fre\"),\"free\") or (contains(translate(.,\"SAVE\",\"save\"),\"save\") or contains(translate(.,\"OF\",\"of\"),\"off\") or contains(translate(.,\"REWARD\",\"reward\"),\"reward\") or contains(translate(.,\"CASH\",\"cash\"),\"cash\") or contains(translate(.,\"EARN\",\"earn\"),\"earn\") or contains(translate(.,\"REBAT\",\"rebat\"),\"rebate\") or contains(translate(.,\"PREAID\",\"preaid\"),\"prepaid\") or contains(translate(.,\"GIFT\",\"gift\"),\"gift\")) and (contains(.,\"%\") or contains(., \"$\")  or contains(.,\"¢\") or contains(translate(.,\"CERTIFA\",\"certifa\"),\"certificate\"))][not (contains(translate(.,\"APR\",\"apr\"),\"apr\") or contains(translate(.,\"FINACG\",\"finacg\"),\"financing\") or contains(translate(.,\"CHARGED\",\"charged\"),\"charged\") or contains(translate(.,\"OF\",\"of\"),\"offer\") or contains(translate(.,\"ACOUNTED\",\"acounted\"),\"account end\")  or contains(translate(.,\"REQUID\",\"requid\"),\"required\") or contains(translate(.,\"CREDITAPOV\",\"creditapovl\"),\"credit approval\") or contains(translate(.,\"PURCHASEMONT\",\"purchasemont\"),\"purchase amount\"))]",
                  "js": "function transform(data){\n  var replaceArr = [\n    {oldStr: /[\\*©®ǂ†±→§™¹>❯]/g, newStr: \"\"}, \n    {oldStr: /^[\\^\\•\\+]\\s/i, newStr: \"\"},\n    {oldStr: /^(Plus,?|Or)/i, newStr: \"\"}\n  ];\n  \n  for (var i = 0; i < replaceArr.length; i++) {\n    var el = replaceArr[i];\n    data = data.replace(el.oldStr, el.newStr);\n  }\n  \n  if(data.length>120){\n    return data.replace(/(\\.)(\\d)/g,\"~~~$2\")\n    .match(/[^\\.\\?\\!]*((\\$\\d)|(free)|(redeem)|(\\%))[^\\.\\?\\!]*/ig)\n    .join(\". \")\n    .replace(/(\\~\\~\\~)(\\d)/g,\".$2\") + \".\";\n  }\n  \n  return data;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "3": [
                {
                  "xpath": "//div[contains(translate(.,\"FRE\",\"fre\"),\"free\") or (contains(translate(.,\"SAVE\",\"save\"),\"save\") or contains(translate(.,\"OF\",\"of\"),\"off\") or contains(translate(.,\"REWARD\",\"reward\"),\"reward\") or contains(translate(.,\"CASH\",\"cash\"),\"cash\") or contains(translate(.,\"EARN\",\"earn\"),\"earn\") or contains(translate(.,\"REBAT\",\"rebat\"),\"rebate\") or contains(translate(.,\"PREAID\",\"preaid\"),\"prepaid\")) and (contains(.,\"%\") or contains(., \"$\")  or contains(.,\"¢\") or contains(translate(.,\"CERTIFA\",\"certifa\"),\"certificate\"))][not (contains(translate(.,\"APR\",\"apr\"),\"apr\") or contains(translate(.,\"FINACG\",\"finacg\"),\"financing\") or contains(translate(.,\"CHARGED\",\"charged\"),\"charged\") or contains(translate(.,\"OF\",\"of\"),\"offer\") or contains(translate(.,\"ACOUNTED\",\"acounted\"),\"account end\")  or contains(translate(.,\"REQUID\",\"requid\"),\"required\") or contains(translate(.,\"CREDITAPOV\",\"creditapovl\"),\"credit approval\") or contains(translate(.,\"PURCHASEMONT\",\"purchasemont\"),\"purchase amount\"))]",
                  "js": "function transform(data){\n  var replaceArr = [\n    {oldStr: /[\\*©®ǂ†±→§™¹>❯]/g, newStr: \"\"}, \n    {oldStr: /^[\\^\\•\\+]\\s/i, newStr: \"\"},\n    {oldStr: /^(Plus,?|Or)/i, newStr: \"\"}\n  ];\n  \n  for (var i = 0; i < replaceArr.length; i++) {\n    var el = replaceArr[i];\n    data = data.replace(el.oldStr, el.newStr);\n  }\n  \n  if(data.length>120){\n    return data.replace(/(\\.)(\\d)/g,\"~~~$2\")\n    .match(/[^\\.\\?\\!]*((\\$\\d)|(free)|(redeem)|(\\%))[^\\.\\?\\!]*/ig)\n    .join(\". \")\n    .replace(/(\\~\\~\\~)(\\d)/g,\".$2\") + \".\";\n  }\n  \n  return data;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "4": [
                {
                  "xpath": "//strong/parent::td[contains(translate(.,\"FRE\",\"fre\"),\"free\") or (contains(translate(.,\"SAVE\",\"save\"),\"save\") or contains(translate(.,\"OF\",\"of\"),\"off\") or contains(translate(.,\"REWARD\",\"reward\"),\"reward\") or contains(translate(.,\"CASH\",\"cash\"),\"cash\") or contains(translate(.,\"EARN\",\"earn\"),\"earn\") or contains(translate(.,\"REBAT\",\"rebat\"),\"rebate\") or contains(translate(.,\"PREAID\",\"preaid\"),\"prepaid\") or contains(translate(.,\"GIFT\",\"gift\"),\"gift\")) and (contains(.,\"%\") or contains(., \"$\")  or contains(.,\"¢\") or contains(translate(.,\"CERTIFA\",\"certifa\"),\"certificate\"))][not (contains(translate(.,\"APR\",\"apr\"),\"apr\") or contains(translate(.,\"FINACG\",\"finacg\"),\"financing\") or contains(translate(.,\"CHARGED\",\"charged\"),\"charged\") or contains(translate(.,\"OF\",\"of\"),\"offer\") or contains(translate(.,\"ACOUNTED\",\"acounted\"),\"account end\")  or contains(translate(.,\"REQUID\",\"requid\"),\"required\") or contains(translate(.,\"CREDITAPOV\",\"creditapovl\"),\"credit approval\") or contains(translate(.,\"PURCHASEMONT\",\"purchasemont\"),\"purchase amount\"))]",
                  "js": "function transform(data){\n  var replaceArr = [\n    {oldStr: /[\\*©®ǂ†±→§™¹>❯]/g, newStr: \"\"}, \n    {oldStr: /^[\\^\\•\\+]\\s/i, newStr: \"\"},\n    {oldStr: /^(Plus,?|Or)/i, newStr: \"\"}\n  ];\n  \n  for (var i = 0; i < replaceArr.length; i++) {\n    var el = replaceArr[i];\n    data = data.replace(el.oldStr, el.newStr);\n  }\n  \n  if(data.length>120){\n    return data.replace(/(\\.)(\\d)/g,\"~~~$2\")\n    .match(/[^\\.\\?\\!]*((\\$\\d)|(free)|(redeem)|(\\%))[^\\.\\?\\!]*/ig)\n    .join(\". \")\n    .replace(/(\\~\\~\\~)(\\d)/g,\".$2\") + \".\";\n  }\n  \n  return data;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "5": [
                {
                  "xpath": "//h3[contains(translate(.,\"FRE\",\"fre\"),\"free\") or (contains(translate(.,\"SAVE\",\"save\"),\"save\") or contains(translate(.,\"OF\",\"of\"),\"off\") or contains(translate(.,\"REWARD\",\"reward\"),\"reward\") or contains(translate(.,\"CASH\",\"cash\"),\"cash\") or contains(translate(.,\"EARN\",\"earn\"),\"earn\") or contains(translate(.,\"REBAT\",\"rebat\"),\"rebate\") or contains(translate(.,\"PREAID\",\"preaid\"),\"prepaid\") or contains(translate(.,\"GIFT\",\"gift\"),\"gift\")) and (contains(.,\"%\") or contains(., \"$\")  or contains(.,\"¢\") or contains(translate(.,\"CERTIFA\",\"certifa\"),\"certificate\"))][not (contains(translate(.,\"APR\",\"apr\"),\"apr\") or contains(translate(.,\"FINACG\",\"finacg\"),\"financing\") or contains(translate(.,\"CHARGED\",\"charged\"),\"charged\") or contains(translate(.,\"OF\",\"of\"),\"offer\") or contains(translate(.,\"ACOUNTED\",\"acounted\"),\"account end\")  or contains(translate(.,\"REQUID\",\"requid\"),\"required\") or contains(translate(.,\"CREDITAPOV\",\"creditapovl\"),\"credit approval\") or contains(translate(.,\"PURCHASEMONT\",\"purchasemont\"),\"purchase amount\"))]",
                  "js": "function transform(data){\n  var replaceArr = [\n    {oldStr: /[\\*©®ǂ†±→§™¹>❯]/g, newStr: \"\"}, \n    {oldStr: /^[\\^\\•\\+]\\s/i, newStr: \"\"},\n    {oldStr: /^(Plus,?|Or)/i, newStr: \"\"}\n  ];\n  \n  for (var i = 0; i < replaceArr.length; i++) {\n    var el = replaceArr[i];\n    data = data.replace(el.oldStr, el.newStr);\n  }\n  \n  if(data.length>120){\n    return data.replace(/(\\.)(\\d)/g,\"~~~$2\")\n    .match(/[^\\.\\?\\!]*((\\$\\d)|(free)|(redeem)|(\\%))[^\\.\\?\\!]*/ig)\n    .join(\". \")\n    .replace(/(\\~\\~\\~)(\\d)/g,\".$2\") + \".\";\n  }\n  \n  return data;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "6": [
                {
                  "xpath": "//h1[contains(translate(.,\"FRE\",\"fre\"),\"free\") or (contains(translate(.,\"SAVE\",\"save\"),\"save\") or contains(translate(.,\"OF\",\"of\"),\"off\") or contains(translate(.,\"REWARD\",\"reward\"),\"reward\") or contains(translate(.,\"CASH\",\"cash\"),\"cash\") or contains(translate(.,\"EARN\",\"earn\"),\"earn\") or contains(translate(.,\"REBAT\",\"rebat\"),\"rebate\") or contains(translate(.,\"PREAID\",\"preaid\"),\"prepaid\") or contains(translate(.,\"GIFT\",\"gift\"),\"gift\")) and (contains(.,\"%\") or contains(., \"$\")  or contains(.,\"¢\") or contains(translate(.,\"CERTIFA\",\"certifa\"),\"certificate\"))][not (contains(translate(.,\"APR\",\"apr\"),\"apr\") or contains(translate(.,\"FINACG\",\"finacg\"),\"financing\") or contains(translate(.,\"CHARGED\",\"charged\"),\"charged\") or contains(translate(.,\"OF\",\"of\"),\"offer\") or contains(translate(.,\"ACOUNTED\",\"acounted\"),\"account end\")  or contains(translate(.,\"REQUID\",\"requid\"),\"required\") or contains(translate(.,\"CREDITAPOV\",\"creditapovl\"),\"credit approval\") or contains(translate(.,\"PURCHASEMONT\",\"purchasemont\"),\"purchase amount\"))]",
                  "js": "function transform(data){\n  var replaceArr = [\n    {oldStr: /[\\*©®ǂ†±→§™¹>❯]/g, newStr: \"\"}, \n    {oldStr: /^[\\^\\•\\+]\\s/i, newStr: \"\"},\n    {oldStr: /^(Plus,?|Or)/i, newStr: \"\"}\n  ];\n  \n  for (var i = 0; i < replaceArr.length; i++) {\n    var el = replaceArr[i];\n    data = data.replace(el.oldStr, el.newStr);\n  }\n  \n  if(data.length>120){\n    return data.replace(/(\\.)(\\d)/g,\"~~~$2\")\n    .match(/[^\\.\\?\\!]*((\\$\\d)|(free)|(redeem)|(\\%))[^\\.\\?\\!]*/ig)\n    .join(\". \")\n    .replace(/(\\~\\~\\~)(\\d)/g,\".$2\") + \".\";\n  }\n  \n  return data;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "7": [
                {
                  "xpath": "//text()/parent::td[contains(translate(.,\"FRE\",\"fre\"),\"free\") or (contains(translate(.,\"SAVE\",\"save\"),\"save\") or contains(translate(.,\"OF\",\"of\"),\"off\") or contains(translate(.,\"REWARD\",\"reward\"),\"reward\") or contains(translate(.,\"CASH\",\"cash\"),\"cash\") or contains(translate(.,\"EARN\",\"earn\"),\"earn\") or contains(translate(.,\"REBAT\",\"rebat\"),\"rebate\") or contains(translate(.,\"PREAID\",\"preaid\"),\"prepaid\") or contains(translate(.,\"GIFT\",\"gift\"),\"gift\")) and (contains(.,\"%\") or contains(., \"$\")  or contains(.,\"¢\") or contains(translate(.,\"CERTIFA\",\"certifa\"),\"certificate\"))][not (contains(translate(.,\"APR\",\"apr\"),\"apr\") or contains(translate(.,\"FINACG\",\"finacg\"),\"financing\") or contains(translate(.,\"CHARGED\",\"charged\"),\"charged\") or contains(translate(.,\"OF\",\"of\"),\"offer\") or contains(translate(.,\"ACOUNTED\",\"acounted\"),\"account end\")  or contains(translate(.,\"REQUID\",\"requid\"),\"required\") or contains(translate(.,\"CREDITAPOV\",\"creditapovl\"),\"credit approval\") or contains(translate(.,\"PURCHASEMONT\",\"purchasemont\"),\"purchase amount\"))]",
                  "js": "function transform(data){\n  var replaceArr = [\n    {oldStr: /[\\*©®ǂ†±→§™¹>❯]/g, newStr: \"\"}, \n    {oldStr: /^[\\^\\•\\+]\\s/i, newStr: \"\"},\n    {oldStr: /^(Plus,?|Or)/i, newStr: \"\"}\n  ];\n  \n  for (var i = 0; i < replaceArr.length; i++) {\n    var el = replaceArr[i];\n    data = data.replace(el.oldStr, el.newStr);\n  }\n  \n  if(data.length>120){\n    return data.replace(/(\\.)(\\d)/g,\"~~~$2\")\n    .match(/[^\\.\\?\\!]*((\\$\\d)|(free)|(redeem)|(\\%))[^\\.\\?\\!]*/ig)\n    .join(\". \")\n    .replace(/(\\~\\~\\~)(\\d)/g,\".$2\") + \".\";\n  }\n  \n  return data;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/description",
            "dataTypes": [
              "Text"
            ],
            "dedupCondition": null
          },
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//text()[contains(translate(., 'VALID', 'valid'), ' valid ') or contains(translate(., 'T', 't'), ' through ') or contains(translate(., 'ENDS', 'ends'), ' ends ') or contains(translate(., 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(., 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(., 'OFERGD', 'ofergd'), ' offer good')]",
                  "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ');\n\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@alt, 'VALID', 'valid'), ' valid ') or contains(translate(@alt, 'T', 't'), ' through ') or contains(translate(@alt, 'ENDS', 'ends'), ' ends ') or contains(translate(@alt, 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(@alt, 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(@alt, 'OFERGD', 'ofergd'), ' offer good')]/@alt",
                  "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ');\n\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "3": [
                {
                  "xpath": "//img[contains(translate(@title, 'VALID', 'valid'), ' valid ') or contains(translate(@title, 'T', 't'), ' through ') or contains(translate(@title, 'ENDS', 'ends'), ' ends ') or contains(translate(@title, 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(@title, 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(@title, 'OFERGD', 'ofergd'), ' offer good')]/@title",
                  "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ');\n\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/validThrough",
            "dataTypes": [
              "DateTime"
            ]
          },
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(., 'REWAD', 'rewad'), \"reward\") or contains(translate(., 'COUPN', 'coupn'), \"coupon\") or contains(translate(., 'CASH', 'cash'), \"cash\") or contains(translate(., 'CODE', 'code'), \"code\") ]/parent::a[1]/@href",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@title, 'OF', 'of'), \" off \") or contains(@title, \"0%\") or contains(@title, \"1%\") or contains(@title, \"2%\") or contains(@title, \"3%\") or contains(@title, \"4%\") or contains(@title, \"5%\") or contains(@title, \"6%\") or contains(@title, \"7%\") or contains(@title, \"8%\") or contains(@title, \"9%\") or contains(translate(., 'REWAD', 'rewad'), \"reward\") or contains(translate(., 'COUPN', 'coupn'), \"coupon\") or contains(translate(., 'CASH', 'cash'), \"cash\") or contains(translate(., 'CODE', 'code'), \"code\") ]/parent::a[1]/@href",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/url",
            "dataTypes": [
              "URL"
            ]
          }
        ]
      },
      {
        "id": "5aabd401-e355-41b2-9c9d-9e9ee3a1e70c",
        "type": "http://schema.org/Organization",
        "attributes": [
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "concat(\"HereTheNameOfTheBroker\", \"\")",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "STRING"
                }
              ]
            },
            "name": "http://schema.org/name",
            "dataTypes": [
              "Text"
            ]
          }
        ]
      },
      {
        "id": "a3f2df32-7b35-4c77-8513-72ac9e26648e",
        "type": "http://schema.org/ImageObject",
        "attributes": [
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(@alt, 'REWAD', 'rewad'), \"reward\") or contains(translate(@alt, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@alt, 'CASH', 'cash'), \"cash\") or contains(translate(@alt, 'CODE', 'code'), \"code\") or contains(translate(@alt, 'SHIPNG', 'shipng'), \"shipping\")]/@src",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@title, 'OF', 'of'), \" off \") or contains(@title, \"0%\") or contains(@title, \"1%\") or contains(@title, \"2%\") or contains(@title, \"3%\") or contains(@title, \"4%\") or contains(@title, \"5%\") or contains(@title, \"6%\") or contains(@title, \"7%\") or contains(@title, \"8%\") or contains(@title, \"9%\") or contains(translate(@title, 'REWAD', 'rewad'), \"reward\") or contains(translate(@title, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@title, 'CASH', 'cash'), \"cash\") or contains(translate(@title, 'CODE', 'code'), \"code\") or contains(translate(@title, 'SHIPNG', 'shipng'), \"shipping\")]/@src",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/url",
            "dataTypes": [
              "URL"
            ]
          },
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(@alt, 'REWAD', 'rewad'), \"reward\") or contains(translate(@alt, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@alt, 'CASH', 'cash'), \"cash\") or contains(translate(@alt, 'CODE', 'code'), \"code\") or contains(translate(@alt, 'SHIPNG', 'shipng'), \"shipping\")]/@alt",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@title, 'OF', 'of'), \" off \") or contains(@title, \"0%\") or contains(@title, \"1%\") or contains(@title, \"2%\") or contains(@title, \"3%\") or contains(@title, \"4%\") or contains(@title, \"5%\") or contains(@title, \"6%\") or contains(@title, \"7%\") or contains(@title, \"8%\") or contains(@title, \"9%\") or contains(translate(@title, 'REWAD', 'rewad'), \"reward\") or contains(translate(@title, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@title, 'CASH', 'cash'), \"cash\") or contains(translate(@title, 'CODE', 'code'), \"code\") or contains(translate(@title, 'SHIPNG', 'shipng'), \"shipping\")]/@title",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/__test",
            "transient": true,
            "dataTypes": [
              "Text"
            ]
          }
        ]
      }
    ],
    "edgeRules": [
      {
        "from": {
          "entityRule": "f0cb28cf-6320-4046-82e9-0bf962223333",
          "matchAttr": ""
        },
        "to": {
          "entityRule": "5aabd401-e355-41b2-9c9d-9e9ee3a1e70c",
          "matchAttr": ""
        },
        "predicate": "http://schema.org/broker",
        "cardinality": "MANY_TO_ONE"
      },
      {
        "from": {
          "entityRule": "f0cb28cf-6320-4046-82e9-0bf962223333",
          "matchAttr": "http://schema.org/description"
        },
        "to": {
          "entityRule": "a3f2df32-7b35-4c77-8513-72ac9e26648e",
          "matchAttr": "http://schema.org/__test"
        },
        "predicate": "http://schema.org/image",
        "cardinality": "ONE_TO_ONE",
        "matchThreshold": "0.8"
      }
    ]
  },
  "preCleanInfo": []
}

/* TAXI taxi.com */
{
  "extract": {
    "extractEmbedded": false,
    "source": null,
    "schema": [
      {
        "url": "http://ws.rmf.yahoo.com:4080/rmf/v1/schema?type=schema.org&name=y.2.0&format=json",
        "ns": "http://schema.org",
        "context": {
          "@type": [
            "Coupon"
          ]
        }
      }
    ],
    "entityRules": [
      {
        "id": "0386bd07-e736-4a45-9305-400e673ab76d",
        "repeating": true,
        "locations": [
          "/"
        ],
        "type": "http://schema.org/Coupon",
        "javascript": null,
        "entityIdRef": null,
        "attributes": []
      }
    ],
    "edgeRules": [],
    "entityNS": null
  },
  "metaData": {
    "useVTDXML": "true",
    "ignoredValidations": null,
    "footerRatio": "0.3",
    "footerRatioFallBack": "0.4"
  },
  "extractV2": {
    "entityRules": [
      {
        "id": "f0cb28cf-6320-4046-82e9-0bf962223333",
        "type": "http://schema.org/Coupon",
        "attributes": [
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(@alt, 'REWAD', 'rewad'), \"reward\") or contains(translate(@alt, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@alt, 'CASH', 'cash'), \"cash\") or contains(translate(@alt, 'CODE', 'code'), \"code\") or contains(translate(@alt, 'REDM', 'redm'), \"redeem\") or contains(translate(@alt, 'REWARDS', 'rewards'), \"rewards\") or contains(translate(@alt, 'PROMTIN', 'promtin'), \"promotion\") or contains(translate(@alt, 'SHIPNG', 'shipng'), \"shipping\") ]/@alt",
                  "js": "function transform(data, prevData) {\n    var invalid = /\\@import\\s+url/i;\n  \n    var percentOff = /\\d+%?\\s*off/i;\n    var percentDiscount = /\\d+%\\s*discount/i;\n    var dollarOff = /\\d+(?:\\.\\d+)?\\s*off/i;\n    var percentBack = /\\d+%\\s*back/i;\n\n    var percentReward = /\\d+%\\s*reward/i;\n    var percentCoupon = /(\\d+%|\\$\\d+)\\s*(?:promotional\\s+)?coupon/i;\n    var percentSaving = /\\d+%\\s*saving/i;\n\n    var earnUpto = /earn\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n\n    var save = /save\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n  \n    var offers = /\\s+offer[s]?\\s+/i;\n    var promoCode = /promo(?:tion)\\s+code\\s+/i;\n    var negPromoCode = /^into\\sthe/i;\n    \n    var redeem = /\\sredeem\\s/i;\n    var redeem2 = /\\.[^.]*?\\sredeem\\s/i;\n  \n    var earnedReward = /\\sbody\\sworks\\sreward/i;\n    var freeShip = /free\\sship/i;\n\n    if (!data || data == \"\") {\n        return null;\n    }\n\tvar match = invalid.exec(data);\n    if (match){\n      return null;\n    }\n  \n    match = percentOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n      match = percentDiscount.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = dollarOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentBack.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentCoupon.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentSaving.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = earnUpto.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = save.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = offers.exec(data);\n    if (match){\n      if(data.length > 100){\n        return null;\n      }\n      else if(data.length < 50){\n        var digitMatch = /(\\d+%|\\$\\d+)\\s+/;\n        var match1 = digitMatch.exec(data);\n        if(match1) {\n          return formatDescription(data);\n        }\n      }\n      else {\n        return formatDescription(data);\n      }\n    }\n  \n    match = promoCode.exec(data);\n    if (match){\n      var match2 = negPromoCode.exec(data);\n      if( !match2)\n      return formatDescription(data);\n    }\n  \n    match = redeem.exec(data);\n    var match2 = redeem2.exec(data);\n    if (match){\n      if(match2 && match2.index){\n        data = data.substr(match2.index+1);\n      }\n      return formatDescription(data);\n    }\n    match = earnedReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n    match = freeShip.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    return null;\n}\n\nfunction formatDescription(desc){\n    if(desc && desc.length > 100){\n        var tPos = [desc.indexOf(\". \", 80) , desc.indexOf(\"! \", 80) , desc.indexOf(\"? \", 80), desc.indexOf(\"; \", 80)];\n        \n        var splitPos = min(tPos, desc.length - 1)\n        return desc.substr(0, splitPos + 1);\n    }\n    return desc;\n}\n\nfunction min(posList, max){\n    var selPos = max;\n    for(var i = 0; i < posList.length; i++) {\n        if(posList[i] == -1){\n            continue;\n        }\n        if(selPos > posList[i]){\n          selPos = posList[i];\n        }\n    }\n    return selPos;\n}\n",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@title, 'OF', 'of'), \" off \") or contains(@title, \"0%\") or contains(@title, \"1%\") or contains(@title, \"2%\") or contains(@title, \"3%\") or contains(@title, \"4%\") or contains(@title, \"5%\") or contains(@title, \"6%\") or contains(@title, \"7%\") or contains(@title, \"8%\") or contains(@title, \"9%\") or contains(translate(@title, 'REWAD', 'rewad'), \"reward\") or contains(translate(@title, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@title, 'CASH', 'cash'), \"cash\") or contains(translate(@title, 'CODE', 'code'), \"code\") or contains(translate(@title, 'REDM', 'redm'), \"redeem\") or contains(translate(@title, 'REWARDS', 'rewards'), \"rewards\") or contains(translate(@title, 'PROMTIN', 'promtin'), \"promotion\") or contains(translate(@title, 'SHIPNG', 'shipng'), \"shipping\") ]/@title",
                  "js": "function transform(data, prevData) {\n    var invalid = /\\@import\\s+url/i;\n  \n    var percentOff = /\\d+%?\\s*off/i;\n    var percentDiscount = /\\d+%\\s*discount/i;\n    var dollarOff = /\\d+(?:\\.\\d+)?\\s*off/i;\n    var percentBack = /\\d+%\\s*back/i;\n\n    var percentReward = /\\d+%\\s*reward/i;\n    var percentCoupon = /(\\d+%|\\$\\d+)\\s*(?:promotional\\s+)?coupon/i;\n    var percentSaving = /\\d+%\\s*saving/i;\n\n    var earnUpto = /earn\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n\n    var save = /save\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n  \n    var offers = /\\s+offer[s]?\\s+/i;\n    var promoCode = /promo(?:tion)\\s+code\\s+/i;\n    var negPromoCode = /^into\\sthe/i;\n    \n    var redeem = /\\sredeem\\s/i;\n    var redeem2 = /\\.[^.]*?\\sredeem\\s/i;\n  \n    var earnedReward = /\\sbody\\sworks\\sreward/i;\n    var freeShip = /free\\sship/i;\n\n    if (!data || data == \"\") {\n        return null;\n    }\n\tvar match = invalid.exec(data);\n    if (match){\n      return null;\n    }\n  \n    match = percentOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n      match = percentDiscount.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = dollarOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentBack.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentCoupon.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentSaving.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = earnUpto.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = save.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = offers.exec(data);\n    if (match){\n      if(data.length > 100){\n        return null;\n      }\n      else if(data.length < 50){\n        var digitMatch = /(\\d+%|\\$\\d+)\\s+/;\n        var match1 = digitMatch.exec(data);\n        if(match1) {\n          return formatDescription(data);\n        }\n      }\n      else {\n        return formatDescription(data);\n      }\n    }\n  \n    match = promoCode.exec(data);\n    if (match){\n      var match2 = negPromoCode.exec(data);\n      if( !match2)\n      return formatDescription(data);\n    }\n  \n    match = redeem.exec(data);\n    var match2 = redeem2.exec(data);\n    if (match){\n      if(match2 && match2.index){\n        data = data.substr(match2.index+1);\n      }\n      return formatDescription(data);\n    }\n    match = earnedReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n    match = freeShip.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    return null;\n}\n\nfunction formatDescription(desc){\n    if(desc && desc.length > 100){\n        var tPos = [desc.indexOf(\". \", 80) , desc.indexOf(\"! \", 80) , desc.indexOf(\"? \", 80), desc.indexOf(\"; \", 80)];\n        \n        var splitPos = min(tPos, desc.length - 1)\n        return desc.substr(0, splitPos + 1);\n    }\n    return desc;\n}\n\nfunction min(posList, max){\n    var selPos = max;\n    for(var i = 0; i < posList.length; i++) {\n        if(posList[i] == -1){\n            continue;\n        }\n        if(selPos > posList[i]){\n          selPos = posList[i];\n        }\n    }\n    return selPos;\n}\n",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "3": [
                {
                  "xpath": "//b[contains(translate(., 'OF', 'of'), \" off \") or contains(translate(., 'OFER', 'ofer'), \"offer\") or contains(translate(., 'REWAD', 'rewad'), \"reward\") or contains(translate(., 'COUPN', 'coupn'), \"coupon\") or contains(translate(., 'CASH', 'cash'), \"cash\") or contains(translate(., 'CODE', 'code'), \"code\") or contains(., \"0%\") or contains(., \"1%\") or contains(., \"2%\") or contains(., \"3%\") or contains(., \"4%\") or contains(., \"5%\") or contains(., \"6%\") or contains(., \"7%\") or contains(., \"8%\") or contains(., \"9%\") ]",
                  "js": "function transform(data, prevData) {\n    var invalid = /\\@import\\s+url/i;\n  \n    var percentOff = /\\d+%?\\s*off/i;\n    var percentDiscount = /\\d+%\\s*discount/i;\n    var dollarOff = /\\d+(?:\\.\\d+)?\\s*off/i;\n    var percentBack = /\\d+%\\s*back/i;\n\n    var percentReward = /\\d+%\\s*reward/i;\n    var percentCoupon = /(\\d+%|\\$\\d+)\\s*(?:promotional\\s+)?coupon/i;\n    var percentSaving = /\\d+%\\s*saving/i;\n\n    var earnUpto = /earn\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n\n    var save = /save\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n  \n    var offers = /\\s+offer[s]?\\s+/i;\n    var promoCode = /promo(?:tion)\\s+code\\s+/i;\n    var negPromoCode = /^into\\sthe/i;\n    \n    var redeem = /\\sredeem\\s/i;\n    var redeem2 = /\\.[^.]*?\\sredeem\\s/i;\n  \n    var earnedReward = /\\sbody\\sworks\\sreward/i;\n    var freeShip = /free\\sship/i;\n\n    if (!data || data == \"\") {\n        return null;\n    }\n\tvar match = invalid.exec(data);\n    if (match){\n      return null;\n    }\n  \n    match = percentOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n      match = percentDiscount.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = dollarOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentBack.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentCoupon.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentSaving.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = earnUpto.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = save.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = offers.exec(data);\n    if (match){\n      if(data.length > 100){\n        return null;\n      }\n      else if(data.length < 50){\n        var digitMatch = /(\\d+%|\\$\\d+)\\s+/;\n        var match1 = digitMatch.exec(data);\n        if(match1) {\n          return formatDescription(data);\n        }\n      }\n      else {\n        return formatDescription(data);\n      }\n    }\n  \n    match = promoCode.exec(data);\n    if (match){\n      var match2 = negPromoCode.exec(data);\n      if( !match2)\n      return formatDescription(data);\n    }\n  \n    match = redeem.exec(data);\n    var match2 = redeem2.exec(data);\n    if (match){\n      if(match2 && match2.index){\n        data = data.substr(match2.index+1);\n      }\n      return formatDescription(data);\n    }\n    match = earnedReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n    match = freeShip.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    return null;\n}\n\nfunction formatDescription(desc){\n    if(desc && desc.length > 100){\n        var tPos = [desc.indexOf(\". \", 80) , desc.indexOf(\"! \", 80) , desc.indexOf(\"? \", 80), desc.indexOf(\"; \", 80)];\n        \n        var splitPos = min(tPos, desc.length - 1)\n        return desc.substr(0, splitPos + 1);\n    }\n    return desc;\n}\n\nfunction min(posList, max){\n    var selPos = max;\n    for(var i = 0; i < posList.length; i++) {\n        if(posList[i] == -1){\n            continue;\n        }\n        if(selPos > posList[i]){\n          selPos = posList[i];\n        }\n    }\n    return selPos;\n}\n",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "4": [
                {
                  "xpath": "//strong[contains(translate(., 'OF', 'of'), \" off \") or contains(translate(., 'OFER', 'ofer'), \"offer\") or contains(translate(., 'REWAD', 'rewad'), \"reward\") or contains(translate(., 'COUPN', 'coupn'), \"coupon\") or contains(translate(., 'CASH', 'cash'), \"cash\")  or contains(translate(., 'CODE', 'code'), \"code\") or contains(., \"0%\") or contains(., \"1%\") or contains(., \"2%\") or contains(., \"3%\") or contains(., \"4%\") or contains(., \"5%\") or contains(., \"6%\") or contains(., \"7%\") or contains(., \"8%\") or contains(., \"9%\") or contains(.,\"$\") or contains(translate(., 'SAVE', 'save'),\"save $\")]",
                  "js": "function transform(data, prevData) {\n  \tvar taxiPriceDollar = /TAXI Price: \\$/i;\n  \tvar saveDollar = /SAVE \\$/i;\n  \n    var invalid = /\\@import\\s+url/i;\n  \n    var percentOff = /\\d+%?\\s*off/i;\n    var percentDiscount = /\\d+%\\s*discount/i;\n    var dollarOff = /\\d+(?:\\.\\d+)?\\s*off/i;\n    var percentBack = /\\d+%\\s*back/i;\n\n    var percentReward = /\\d+%\\s*reward/i;\n    var percentCoupon = /(\\d+%|\\$\\d+)\\s*(?:promotional\\s+)?coupon/i;\n    var percentSaving = /\\d+%\\s*saving/i;\n\n    var earnUpto = /earn\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n\n    var save = /save\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n  \n    var offers = /\\s+offer[s]?\\s+/i;\n    var promoCode = /promo(?:tion)\\s+code\\s+/i;\n    var negPromoCode = /^into\\sthe/i;\n    \n    var redeem = /\\sredeem\\s/i;\n    var redeem2 = /\\.[^.]*?\\sredeem\\s/i;\n  \n    var earnedReward = /\\sbody\\sworks\\sreward/i;\n    var freeShip = /free\\sship/i;\n\n    if (!data || data == \"\") {\n        return null;\n    }\n\tvar match = invalid.exec(data);\n    if (match){\n      return null;\n    }\n  \n  \n  \tmatch = saveDollar.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n  \n  \tmatch = taxiPriceDollar.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n  \n    match = percentOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n      match = percentDiscount.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = dollarOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentBack.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentCoupon.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentSaving.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = earnUpto.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = save.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = offers.exec(data);\n    if (match){\n      if(data.length > 100){\n        return null;\n      }\n      else if(data.length < 50){\n        var digitMatch = /(\\d+%|\\$\\d+)\\s+/;\n        var match1 = digitMatch.exec(data);\n        if(match1) {\n          return formatDescription(data);\n        }\n      }\n      else {\n        return formatDescription(data);\n      }\n    }\n  \n    match = promoCode.exec(data);\n    if (match){\n      var match2 = negPromoCode.exec(data);\n      if( !match2)\n      return formatDescription(data);\n    }\n  \n    match = redeem.exec(data);\n    var match2 = redeem2.exec(data);\n    if (match){\n      if(match2 && match2.index){\n        data = data.substr(match2.index+1);\n      }\n      return formatDescription(data);\n    }\n    match = earnedReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n    match = freeShip.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    return null;\n}\n\nfunction formatDescription(desc){\n    if(desc && desc.length > 100){\n        var tPos = [desc.indexOf(\". \", 80) , desc.indexOf(\"! \", 80) , desc.indexOf(\"? \", 80), desc.indexOf(\"; \", 80)];\n        \n        var splitPos = min(tPos, desc.length - 1)\n        return desc.substr(0, splitPos + 1);\n    }\n    return desc;\n}\n\nfunction min(posList, max){\n    var selPos = max;\n    for(var i = 0; i < posList.length; i++) {\n        if(posList[i] == -1){\n            continue;\n        }\n        if(selPos > posList[i]){\n          selPos = posList[i];\n        }\n    }\n    return selPos;\n}\n",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "5": [
                {
                  "xpath": "//text()[not(ancestor::b or ancestor::strong)]\n[not (contains(.,\"MIME\") or contains(.,\"mailing list\") or contains(.,\"calling every day\"))]\n[contains(translate(., 'OF', 'of'), \" off \") or contains(translate(., 'OFER', 'ofer'), \"offer\") or contains(translate(., 'REWAD', 'rewad'), \"reward\") or contains(translate(., 'COUPN', 'coupn'), \"coupon\") or contains(translate(., 'CASH', 'cash'), \"cash\") or contains(translate(., 'CODE', 'code'), \"code\") or contains(., \"0%\") or contains(., \"1%\") or contains(., \"2%\") or contains(., \"3%\") or contains(., \"4%\") or contains(., \"5%\") or contains(., \"6%\") or contains(., \"7%\") or contains(., \"8%\") or contains(., \"9%\") or contains(translate(., 'REDM', 'redm'), \"redeem\") or contains(translate(., 'REWARDS', 'rewards'), \"rewards\") or contains(translate(., 'PROMTIN', 'promtin'), \"promotion\") or contains(translate(., 'SHIPNG', 'shipng'), \"shipping\") ]",
                  "js": "function transform(data, prevData) {\n  \tvar taxiPriceDollar = /TAXI PRICE: \\$/i;\n  \n    var invalid = /\\@import\\s+url/i;\n  \n    var percentOff = /\\d+%?\\s*off/i;\n    var percentDiscount = /\\d+%\\s*discount/i;\n    var dollarOff = /\\d+(?:\\.\\d+)?\\s*off/i;\n    var percentBack = /\\d+%\\s*back/i;\n\n    var percentReward = /\\d+%\\s*reward/i;\n    var percentCoupon = /(\\d+%|\\$\\d+)\\s*(?:promotional\\s+)?coupon/i;\n    var percentSaving = /\\d+%\\s*saving/i;\n\n    var earnUpto = /earn\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n\n    var save = /save\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n  \n    var offers = /\\s+offer[s]?\\s+/i;\n    var promoCode = /promo(?:tion)\\s+code\\s+/i;\n    var negPromoCode = /^into\\sthe/i;\n    \n    var redeem = /\\sredeem\\s/i;\n    var redeem2 = /\\.[^.]*?\\sredeem\\s/i;\n  \n    var earnedReward = /\\sbody\\sworks\\sreward/i;\n    var freeShip = /free\\sship/i;\n\n    if (!data || data == \"\") {\n        return null;\n    }\n\tvar match = invalid.exec(data);\n    if (match){\n      return null;\n    }\n  \n  \n  \tmatch = taxiPriceDollar.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n  \n    match = percentOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n      match = percentDiscount.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = dollarOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentBack.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentCoupon.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentSaving.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = earnUpto.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = save.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = offers.exec(data);\n    if (match){\n      if(data.length > 100){\n        return null;\n      }\n      else if(data.length < 50){\n        var digitMatch = /(\\d+%|\\$\\d+)\\s+/;\n        var match1 = digitMatch.exec(data);\n        if(match1) {\n          return formatDescription(data);\n        }\n      }\n      else {\n        return formatDescription(data);\n      }\n    }\n  \n    match = promoCode.exec(data);\n    if (match){\n      var match2 = negPromoCode.exec(data);\n      if( !match2)\n      return formatDescription(data);\n    }\n  \n    match = redeem.exec(data);\n    var match2 = redeem2.exec(data);\n    if (match){\n      if(match2 && match2.index){\n        data = data.substr(match2.index+1);\n      }\n      return formatDescription(data);\n    }\n    match = earnedReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n    match = freeShip.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    return null;\n}\n\nfunction formatDescription(desc){\n    if(desc && desc.length > 100){\n        var tPos = [desc.indexOf(\". \", 80) , desc.indexOf(\"! \", 80) , desc.indexOf(\"? \", 80), desc.indexOf(\"; \", 80)];\n        \n        var splitPos = min(tPos, desc.length - 1)\n        return desc.substr(0, splitPos + 1);\n    }\n    return desc;\n}\n\nfunction min(posList, max){\n    var selPos = max;\n    for(var i = 0; i < posList.length; i++) {\n        if(posList[i] == -1){\n            continue;\n        }\n        if(selPos > posList[i]){\n          selPos = posList[i];\n        }\n    }\n    return selPos;\n}\n",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "6": [
                {
                  "xpath": "/descendant::span[contains(.,\"An Exclusive Offer to TAXI Members\")]",
                  "js": "function transform(data, prevData) {\n  \tvar taxiPriceDollar = /TAXI Price: \\$/i;\n  \tvar saveDollar = /SAVE \\$/i;\n  \n    var invalid = /\\@import\\s+url/i;\n  \n    var percentOff = /\\d+%?\\s*off/i;\n    var percentDiscount = /\\d+%\\s*discount/i;\n    var dollarOff = /\\d+(?:\\.\\d+)?\\s*off/i;\n    var percentBack = /\\d+%\\s*back/i;\n\n    var percentReward = /\\d+%\\s*reward/i;\n    var percentCoupon = /(\\d+%|\\$\\d+)\\s*(?:promotional\\s+)?coupon/i;\n    var percentSaving = /\\d+%\\s*saving/i;\n\n    var earnUpto = /earn\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n\n    var save = /save\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n  \n    var offers = /\\s+offer[s]?\\s+/i;\n    var promoCode = /promo(?:tion)\\s+code\\s+/i;\n    var negPromoCode = /^into\\sthe/i;\n    \n    var redeem = /\\sredeem\\s/i;\n    var redeem2 = /\\.[^.]*?\\sredeem\\s/i;\n  \n    var earnedReward = /\\sbody\\sworks\\sreward/i;\n    var freeShip = /free\\sship/i;\n\n    if (!data || data == \"\") {\n        return null;\n    }\n\tvar match = invalid.exec(data);\n    if (match){\n      return null;\n    }\n  \n  \n  \tmatch = saveDollar.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n  \n  \tmatch = taxiPriceDollar.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n  \n    match = percentOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n      match = percentDiscount.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = dollarOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentBack.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentCoupon.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentSaving.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = earnUpto.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = save.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = offers.exec(data);\n    if (match){\n      if(data.length > 100){\n        return null;\n      }\n      else if(data.length < 50){\n        var digitMatch = /(\\d+%|\\$\\d+)\\s+/;\n        var match1 = digitMatch.exec(data);\n        if(match1) {\n          return formatDescription(data);\n        }\n      }\n      else {\n        return formatDescription(data);\n      }\n    }\n  \n    match = promoCode.exec(data);\n    if (match){\n      var match2 = negPromoCode.exec(data);\n      if( !match2)\n      return formatDescription(data);\n    }\n  \n    match = redeem.exec(data);\n    var match2 = redeem2.exec(data);\n    if (match){\n      if(match2 && match2.index){\n        data = data.substr(match2.index+1);\n      }\n      return formatDescription(data);\n    }\n    match = earnedReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n    match = freeShip.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    return null;\n}\n\nfunction formatDescription(desc){\n    if(desc && desc.length > 100){\n        var tPos = [desc.indexOf(\". \", 80) , desc.indexOf(\"! \", 80) , desc.indexOf(\"? \", 80), desc.indexOf(\"; \", 80)];\n        \n        var splitPos = min(tPos, desc.length - 1)\n        return desc.substr(0, splitPos + 1);\n    }\n    return desc;\n}\n\nfunction min(posList, max){\n    var selPos = max;\n    for(var i = 0; i < posList.length; i++) {\n        if(posList[i] == -1){\n            continue;\n        }\n        if(selPos > posList[i]){\n          selPos = posList[i];\n        }\n    }\n    return selPos;\n}\n",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "7": [
                {
                  "xpath": "/descendant::a[contains(translate(., 'SAVE', 'save'),\"save $\")]",
                  "js": "function transform(data, prevData) {\n  \tvar taxiPriceDollar = /TAXI Price: \\$/i;\n  \tvar saveDollar = /SAVE \\$/i;\n  \n    var invalid = /\\@import\\s+url/i;\n  \n    var percentOff = /\\d+%?\\s*off/i;\n    var percentDiscount = /\\d+%\\s*discount/i;\n    var dollarOff = /\\d+(?:\\.\\d+)?\\s*off/i;\n    var percentBack = /\\d+%\\s*back/i;\n\n    var percentReward = /\\d+%\\s*reward/i;\n    var percentCoupon = /(\\d+%|\\$\\d+)\\s*(?:promotional\\s+)?coupon/i;\n    var percentSaving = /\\d+%\\s*saving/i;\n\n    var earnUpto = /earn\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n\n    var save = /save\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n  \n    var offers = /\\s+offer[s]?\\s+/i;\n    var promoCode = /promo(?:tion)\\s+code\\s+/i;\n    var negPromoCode = /^into\\sthe/i;\n    \n    var redeem = /\\sredeem\\s/i;\n    var redeem2 = /\\.[^.]*?\\sredeem\\s/i;\n  \n    var earnedReward = /\\sbody\\sworks\\sreward/i;\n    var freeShip = /free\\sship/i;\n\n    if (!data || data == \"\") {\n        return null;\n    }\n\tvar match = invalid.exec(data);\n    if (match){\n      return null;\n    }\n  \n  \n  \tmatch = saveDollar.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n  \n  \tmatch = taxiPriceDollar.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n  \n    match = percentOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n      match = percentDiscount.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = dollarOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentBack.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentCoupon.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentSaving.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = earnUpto.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = save.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = offers.exec(data);\n    if (match){\n      if(data.length > 100){\n        return null;\n      }\n      else if(data.length < 50){\n        var digitMatch = /(\\d+%|\\$\\d+)\\s+/;\n        var match1 = digitMatch.exec(data);\n        if(match1) {\n          return formatDescription(data);\n        }\n      }\n      else {\n        return formatDescription(data);\n      }\n    }\n  \n    match = promoCode.exec(data);\n    if (match){\n      var match2 = negPromoCode.exec(data);\n      if( !match2)\n      return formatDescription(data);\n    }\n  \n    match = redeem.exec(data);\n    var match2 = redeem2.exec(data);\n    if (match){\n      if(match2 && match2.index){\n        data = data.substr(match2.index+1);\n      }\n      return formatDescription(data);\n    }\n    match = earnedReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n    match = freeShip.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    return null;\n}\n\nfunction formatDescription(desc){\n    if(desc && desc.length > 100){\n        var tPos = [desc.indexOf(\". \", 80) , desc.indexOf(\"! \", 80) , desc.indexOf(\"? \", 80), desc.indexOf(\"; \", 80)];\n        \n        var splitPos = min(tPos, desc.length - 1)\n        return desc.substr(0, splitPos + 1);\n    }\n    return desc;\n}\n\nfunction min(posList, max){\n    var selPos = max;\n    for(var i = 0; i < posList.length; i++) {\n        if(posList[i] == -1){\n            continue;\n        }\n        if(selPos > posList[i]){\n          selPos = posList[i];\n        }\n    }\n    return selPos;\n}\n",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/description",
            "dataTypes": [
              "Text"
            ],
            "dedupCondition": {
              "matchThreshold": ".3",
              "stopWords": []
            }
          },
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//text()[contains(translate(., 'VALID', 'valid'), ' valid ') or contains(translate(., 'T', 't'), ' through ') or contains(translate(., 'ENDS', 'ends'), ' ends ') or contains(translate(., 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(., 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(., 'OFERGD', 'ofergd'), 'offer good') or contains(translate(., 'NOLATERH', 'nolaterh'), 'no later than')][not (contains(translate(.,\"PARKWY\",\"parkwy\"),\"parkway\") or contains(translate(.,\"MAILNGST\",\"mailngst\"),\"mailing list\"))]",
                  "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ');\n\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@alt, 'VALID', 'valid'), ' valid ') or contains(translate(@alt, 'T', 't'), ' through ') or contains(translate(@alt, 'ENDS', 'ends'), ' ends ') or contains(translate(@alt, 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(@alt, 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(@alt, 'OFERGD', 'ofergd'), 'offer good') or contains(translate(@alt, 'NOLATERH', 'nolaterh'), 'no later than')]/@alt",
                  "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ');\n\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "3": [
                {
                  "xpath": "//img[contains(translate(@title, 'VALID', 'valid'), ' valid ') or contains(translate(@title, 'T', 't'), ' through ') or contains(translate(@title, 'ENDS', 'ends'), ' ends ') or contains(translate(@title, 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(@title, 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(@title, 'OFERGD', 'ofergd'), 'offer good') or contains(translate(@title, 'NOLATERH', 'nolaterh'), 'no later than')]/@title",
                  "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ');\n\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/validThrough",
            "dataTypes": [
              "DateTime"
            ],
            "dedupCondition": {
              "matchThreshold": ".3",
              "stopWords": []
            }
          },
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(., 'REWAD', 'rewad'), \"reward\") or contains(translate(., 'COUPN', 'coupn'), \"coupon\") or contains(translate(., 'CASH', 'cash'), \"cash\") or contains(translate(., 'CODE', 'code'), \"code\") ]/parent::a[1]/@href",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@title, 'OF', 'of'), \" off \") or contains(@title, \"0%\") or contains(@title, \"1%\") or contains(@title, \"2%\") or contains(@title, \"3%\") or contains(@title, \"4%\") or contains(@title, \"5%\") or contains(@title, \"6%\") or contains(@title, \"7%\") or contains(@title, \"8%\") or contains(@title, \"9%\") or contains(translate(., 'REWAD', 'rewad'), \"reward\") or contains(translate(., 'COUPN', 'coupn'), \"coupon\") or contains(translate(., 'CASH', 'cash'), \"cash\") or contains(translate(., 'CODE', 'code'), \"code\") ]/parent::a[1]/@href",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/url",
            "dataTypes": [
              "URL"
            ]
          }
        ]
      },
      {
        "id": "5aabd401-e355-41b2-9c9d-9e9ee3a1e70c",
        "type": "http://schema.org/Organization",
        "attributes": [
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "concat(\"taxi.com\", \"\")",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "STRING"
                }
              ]
            },
            "name": "http://schema.org/name",
            "dataTypes": [
              "Text"
            ],
            "dedupCondition": null
          }
        ]
      },
      {
        "id": "a3f2df32-7b35-4c77-8513-72ac9e26648e",
        "type": "http://schema.org/ImageObject",
        "attributes": [
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(@alt, 'REWAD', 'rewad'), \"reward\") or contains(translate(@alt, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@alt, 'CASH', 'cash'), \"cash\") or contains(translate(@alt, 'CODE', 'code'), \"code\") or contains(translate(@alt, 'SHIPNG', 'shipng'), \"shipping\")]/@src",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@title, 'OF', 'of'), \" off \") or contains(@title, \"0%\") or contains(@title, \"1%\") or contains(@title, \"2%\") or contains(@title, \"3%\") or contains(@title, \"4%\") or contains(@title, \"5%\") or contains(@title, \"6%\") or contains(@title, \"7%\") or contains(@title, \"8%\") or contains(@title, \"9%\") or contains(translate(@title, 'REWAD', 'rewad'), \"reward\") or contains(translate(@title, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@title, 'CASH', 'cash'), \"cash\") or contains(translate(@title, 'CODE', 'code'), \"code\") or contains(translate(@title, 'SHIPNG', 'shipng'), \"shipping\")]/@src",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/url",
            "dataTypes": [
              "URL"
            ]
          },
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(@alt, 'REWAD', 'rewad'), \"reward\") or contains(translate(@alt, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@alt, 'CASH', 'cash'), \"cash\") or contains(translate(@alt, 'CODE', 'code'), \"code\") or contains(translate(@alt, 'SHIPNG', 'shipng'), \"shipping\")]/@alt",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@title, 'OF', 'of'), \" off \") or contains(@title, \"0%\") or contains(@title, \"1%\") or contains(@title, \"2%\") or contains(@title, \"3%\") or contains(@title, \"4%\") or contains(@title, \"5%\") or contains(@title, \"6%\") or contains(@title, \"7%\") or contains(@title, \"8%\") or contains(@title, \"9%\") or contains(translate(@title, 'REWAD', 'rewad'), \"reward\") or contains(translate(@title, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@title, 'CASH', 'cash'), \"cash\") or contains(translate(@title, 'CODE', 'code'), \"code\") or contains(translate(@title, 'SHIPNG', 'shipng'), \"shipping\")]/@title",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/__test",
            "transient": true,
            "dataTypes": [
              "Text"
            ]
          }
        ]
      }
    ],
    "edgeRules": [
      {
        "from": {
          "entityRule": "f0cb28cf-6320-4046-82e9-0bf962223333",
          "matchAttr": ""
        },
        "to": {
          "entityRule": "5aabd401-e355-41b2-9c9d-9e9ee3a1e70c",
          "matchAttr": ""
        },
        "predicate": "http://schema.org/broker",
        "cardinality": "MANY_TO_ONE"
      },
      {
        "from": {
          "entityRule": "f0cb28cf-6320-4046-82e9-0bf962223333",
          "matchAttr": "http://schema.org/description"
        },
        "to": {
          "entityRule": "a3f2df32-7b35-4c77-8513-72ac9e26648e",
          "matchAttr": "http://schema.org/__test"
        },
        "predicate": "http://schema.org/image",
        "cardinality": "ONE_TO_ONE",
        "matchThreshold": "0.8"
      }
    ]
  },
  "preCleanInfo": []
}

/* VISTAPRINT default_rule_tm.vistaprint.com */
{
  "extract": {
    "extractEmbedded": false,
    "source": null,
    "schema": [
      {
        "url": "http://ws.rmf.yahoo.com:4080/rmf/v1/schema?type=schema.org&name=y.2.0&format=json",
        "ns": "http://schema.org",
        "context": {
          "@type": [
            "Coupon"
          ]
        }
      }
    ],
    "entityRules": [
      {
        "id": "0386bd07-e736-4a45-9305-400e673ab76d",
        "repeating": true,
        "locations": [
          "/"
        ],
        "type": "http://schema.org/Coupon",
        "javascript": null,
        "entityIdRef": null,
        "attributes": []
      }
    ],
    "edgeRules": [],
    "entityNS": null
  },
  "metaData": {
    "useVTDXML": "true",
    "ignoredValidations": null,
    "footerRatio": "0.3",
    "footerRatioFallBack": "0.4"
  },
  "extractV2": {
    "entityRules": [
      {
        "id": "f0cb28cf-6320-4046-82e9-0bf962223333",
        "type": "http://schema.org/Coupon",
        "attributes": [
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//span[contains(translate(., 'OF', 'of'), \"% off\") or contains(translate(.,'FRE', \"fre\"),\"free\") or contains(translate(.,\"SALE\",\"sale\"),\"sale\") or contains(translate(.,\"SAVE\",\"save\"),\"save\") and (contains(., \"%\") or contains(., \"$\")) or contains(translate(.,\"VISTAPRNTCSH\",\"vistaprntcsh\"),\"vistaprint cash\") or contains(translate(.,\"REDM\",\"redm\"),\"redeem\") and contains(translate(.,\"POINTS\",\"points\"),\"points\")]\n",
                  "js": "function transform(data){\n    return data.replace(/(\\.)(\\d)/g,\"~~~$2\")\n    .match(/[^\\.\\?\\!]*((\\$\\d)|(free)|(redeem)|(vistaprint\\s+cash)|(\\%))[^\\.\\?\\!]*/ig)\n    .join(\". \")\n    .replace(/(\\~\\~\\~)(\\d)/g,\".$2\") + \".\";\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//a[contains(translate(., 'OF', 'of'), \"% off\") or contains(translate(.,'FRE', \"fre\"),\"free\") or contains(translate(.,\"SALE\",\"sale\"),\"sale\") or contains(translate(.,\"SAVE\",\"save\"),\"save\") and (contains(., \"%\") or contains(., \"$\")) or contains(translate(.,\"VISTAPRNTCSH\",\"vistaprntcsh\"),\"vistaprint cash\") or contains(translate(.,\"REDM\",\"redm\"),\"redeem\") and contains(translate(.,\"POINTS\",\"points\"),\"points\")]\n",
                  "js": "function transform(data){\n    return data.replace(/(\\.)(\\d)/g,\"~~~$2\")\n    .match(/[^\\.\\?\\!]*((\\$\\d)|(free)|(redeem)|(vistaprint\\s+cash)|(\\%))[^\\.\\?\\!]*/ig)\n    .join(\". \")\n    .replace(/(\\~\\~\\~)(\\d)/g,\".$2\") + \".\";\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "3": [
                {
                  "xpath": "//text()[contains(translate(., 'OF', 'of'), \"% off\") or contains(translate(.,'FRE', \"fre\"),\"free\") or contains(translate(.,\"SALE\",\"sale\"),\"sale\") or contains(translate(.,\"SAVE\",\"save\"),\"save\") and (contains(., \"%\") or contains(., \"$\")) or contains(translate(.,\"VISTAPRNTCSH\",\"vistaprntcsh\"),\"vistaprint cash\") or contains(translate(.,\"REDM\",\"redm\"),\"redeem\") and contains(translate(.,\"POINTS\",\"points\"),\"points\")][not (contains(translate(.,\"TAXES\",\"taxes\"),\"taxes\") or contains(translate(.,\"NOTVALID\",\"notvalid\"),\"not valid\") or contains(translate(.,\"CLIKHER\",\"clikher\"),\"click here\"))]",
                  "js": "function transform(data){\n    return data.replace(/(\\.)(\\d)/g,\"~~~$2\")\n    .match(/[^\\.\\?\\!]*((\\$\\d)|(free)|(redeem)|(vistaprint\\s+cash)|(\\%))[^\\.\\?\\!]*/ig)\n    .join(\". \")\n    .replace(/(\\~\\~\\~)(\\d)/g,\".$2\") + \".\";\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/description",
            "dataTypes": [
              "Text"
            ],
            "dedupCondition": null
          },
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//text()[contains(translate(., 'VALID', 'valid'), ' valid ') or contains(translate(., 'T', 't'), ' through ') or contains(translate(., 'ENDS', 'ends'), ' ends ') or contains(translate(., 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(., 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(., 'OFERGD', 'ofergd'), ' offer good') or contains(translate(., 'REDM', 'redm'), 'redeem') or contains(translate(., 'OFERSXPIR', 'ofersxpir'), 'offers expire')]",
                  "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ');\n\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@alt, 'VALID', 'valid'), ' valid ') or contains(translate(@alt, 'T', 't'), ' through ') or contains(translate(@alt, 'ENDS', 'ends'), ' ends ') or contains(translate(@alt, 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(@alt, 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(@alt, 'OFERGD', 'ofergd'), ' offer good') or contains(translate(., 'OFERSXPIR', 'ofersxpir'), 'offers expire')]/@alt",
                  "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ');\n\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "3": [
                {
                  "xpath": "//img[contains(translate(@title, 'VALID', 'valid'), ' valid ') or contains(translate(@title, 'T', 't'), ' through ') or contains(translate(@title, 'ENDS', 'ends'), ' ends ') or contains(translate(@title, 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(@title, 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(@title, 'OFERGD', 'ofergd'), ' offer good') or contains(translate(., 'OFERSXPIR', 'ofersxpir'), 'offers expire')]/@title",
                  "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ');\n\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/validThrough",
            "dataTypes": [
              "DateTime"
            ],
            "dedupCondition": null
          },
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(., 'REWAD', 'rewad'), \"reward\") or contains(translate(@alt, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@alt, 'CASH', 'cash'), \"cash\") or contains(translate(@alt, 'CODE', 'code'), \"code\")  or contains(translate(@alt, 'VISTAPRN', 'vistaprn'), \"vistaprint\") or contains(translate(@alt, 'PROMCD', 'promcd'), \"promo code\") or contains(translate(@alt, 'CLIKHER', 'clikher'), \"click here\")]/parent::a[1]/@href",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@title, 'OF', 'of'), \" off \") or contains(@title, \"0%\") or contains(@title, \"1%\") or contains(@title, \"2%\") or contains(@title, \"3%\") or contains(@title, \"4%\") or contains(@title, \"5%\") or contains(@title, \"6%\") or contains(@title, \"7%\") or contains(@title, \"8%\") or contains(@title, \"9%\") or contains(translate(@title, 'REWAD', 'rewad'), \"reward\") or contains(translate(@title, 'COUPN', 'coupn'), \"coupon\") or contains(translate(., 'CASH', 'cash'), \"cash\") or contains(translate(@title, 'CODE', 'code'), \"code\") or contains(translate(@title, 'VISTAPRN', 'vistaprn'), \"vistaprint\") or contains(translate(@title, 'PROMCD', 'promcd'), \"promo code\") or contains(translate(@title, 'CLIKHER', 'clikher'), \"click here\")]/parent::a[1]/@href",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "3": [
                {
                  "xpath": "//a[contains(translate(., 'OF', 'of'), \" off \") or contains(., \"0%\") or contains(., \"1%\") or contains(., \"2%\") or contains(@title, \"3%\") or contains(., \"4%\") or contains(., \"5%\") or contains(., \"6%\") or contains(., \"7%\") or contains(., \"8%\") or contains(., \"9%\") or contains(translate(., 'REWAD', 'rewad'), \"reward\") or contains(translate(., 'COUPN', 'coupn'), \"coupon\") or contains(translate(., 'CASH', 'cash'), \"cash\") or contains(translate(., 'CODE', 'code'), \"code\") or contains(translate(@alt, 'VISTAPRN', 'vistaprn'), \"vistaprint\") or contains(translate(., 'PROMCD', 'promcd'), \"promo code\") or contains(translate(., 'CLIKHER', 'clikher'), \"click here\")]/@href",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/url",
            "dataTypes": [
              "URL"
            ],
            "dedupCondition": null
          }
        ]
      },
      {
        "id": "5aabd401-e355-41b2-9c9d-9e9ee3a1e70c",
        "type": "http://schema.org/Organization",
        "attributes": [
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "'tm.vistaprint.com'",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "STRING"
                }
              ]
            },
            "name": "http://schema.org/name",
            "dataTypes": [
              "Text"
            ],
            "dedupCondition": null
          }
        ]
      },
      {
        "id": "a3f2df32-7b35-4c77-8513-72ac9e26648e",
        "type": "http://schema.org/ImageObject",
        "attributes": [
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(@alt, 'REWAD', 'rewad'), \"reward\") or contains(translate(@alt, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@alt, 'CASH', 'cash'), \"cash\") or contains(translate(@alt, 'CODE', 'code'), \"code\") or contains(translate(@alt, 'SHIPNG', 'shipng'), \"shipping\")]/@src",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@title, 'OF', 'of'), \" off \") or contains(@title, \"0%\") or contains(@title, \"1%\") or contains(@title, \"2%\") or contains(@title, \"3%\") or contains(@title, \"4%\") or contains(@title, \"5%\") or contains(@title, \"6%\") or contains(@title, \"7%\") or contains(@title, \"8%\") or contains(@title, \"9%\") or contains(translate(@title, 'REWAD', 'rewad'), \"reward\") or contains(translate(@title, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@title, 'CASH', 'cash'), \"cash\") or contains(translate(@title, 'CODE', 'code'), \"code\") or contains(translate(@title, 'SHIPNG', 'shipng'), \"shipping\")]/@src",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/url",
            "dataTypes": [
              "URL"
            ]
          },
          {
            "repeating": true,
            "locations": {
              "1": [
                {
                  "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(@alt, 'REWAD', 'rewad'), \"reward\") or contains(translate(@alt, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@alt, 'CASH', 'cash'), \"cash\") or contains(translate(@alt, 'CODE', 'code'), \"code\") or contains(translate(@alt, 'SHIPNG', 'shipng'), \"shipping\")]/@alt",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ],
              "2": [
                {
                  "xpath": "//img[contains(translate(@title, 'OF', 'of'), \" off \") or contains(@title, \"0%\") or contains(@title, \"1%\") or contains(@title, \"2%\") or contains(@title, \"3%\") or contains(@title, \"4%\") or contains(@title, \"5%\") or contains(@title, \"6%\") or contains(@title, \"7%\") or contains(@title, \"8%\") or contains(@title, \"9%\") or contains(translate(@title, 'REWAD', 'rewad'), \"reward\") or contains(translate(@title, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@title, 'CASH', 'cash'), \"cash\") or contains(translate(@title, 'CODE', 'code'), \"code\") or contains(translate(@title, 'SHIPNG', 'shipng'), \"shipping\")]/@title",
                  "js": "",
                  "glue": "",
                  "regex": "",
                  "nodeType": "NODE_LIST"
                }
              ]
            },
            "name": "http://schema.org/__test",
            "transient": true,
            "dataTypes": [
              "Text"
            ]
          }
        ]
      }
    ],
    "edgeRules": [
      {
        "from": {
          "entityRule": "f0cb28cf-6320-4046-82e9-0bf962223333",
          "matchAttr": ""
        },
        "to": {
          "entityRule": "5aabd401-e355-41b2-9c9d-9e9ee3a1e70c",
          "matchAttr": ""
        },
        "predicate": "http://schema.org/broker",
        "cardinality": "MANY_TO_ONE"
      },
      {
        "from": {
          "entityRule": "f0cb28cf-6320-4046-82e9-0bf962223333",
          "matchAttr": "http://schema.org/description"
        },
        "to": {
          "entityRule": "a3f2df32-7b35-4c77-8513-72ac9e26648e",
          "matchAttr": "http://schema.org/__test"
        },
        "predicate": "http://schema.org/image",
        "cardinality": "ONE_TO_ONE",
        "matchThreshold": "0.8"
      }
    ]
  },
  "preCleanInfo": []
}
