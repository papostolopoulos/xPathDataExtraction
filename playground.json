{
  "extract": {
    "edgeRules": [],
    "entityNS": null,
    "entityRules": [
      {
        "attributes": [],
        "entityIdRef": "",
        "id": "f66018c8-423b-459b-b55a-c639d92daf68",
        "javascript": null,
        "locations": [
          "/"
        ],
        "repeating": true,
        "type": "http://schema.org/Coupon"
      }
    ],
    "extractEmbedded": false,
    "schema": [
      {
        "context": {
          "@type": [
            "Coupon"
          ]
        },
        "ns": "http://schema.org",
        "url": "http://ws.rmf.yahoo.com:4080/rmf/v1/schema?type=schema.org&name=y.2.0&format=json"
      }
    ],
    "source": null
  },
  "extractLn": {
    "edgeRules": [
      {
        "cardinality": "ONE_TO_ONE",
        "from": {
          "entityRule": "b4917ca5-ee83-4569-87c7-37feef5474af",
          "matchAttr": null
        },
        "predicate": "http://schema.org/broker",
        "to": {
          "entityRule": "b4917ca5-ee83-4569-87c7-37feef5474au",
          "matchAttr": null
        }
      },
      {
        "cardinality": "ONE_TO_ONE",
        "from": {
          "entityRule": "b4917ca5-ee83-4569-87c7-37feef5474af",
          "matchAttr": null
        },
        "predicate": "http://schema.org/image",
        "to": {
          "entityRule": "b4917ca5-ee83-4569-87c7-37feef5474aj",
          "matchAttr": null
        }
      }
    ],
    "entityRules": [
      {
        "attributes": [
          {
            "blackList": [],
            "concat": "true",
            "dataTypes": [
              "Text"
            ],
            "javascript": "function transform(data){\n  var negRegexArr = [\n\n  ];\n\n  for (var i = 0; i < negRegexArr.length; i++) {\n    if (negRegexArr[i].test(data)) return null;\n  }\n\n\n  var posRegexArr = [\n    // (10% | $10 | percent | 1/3) (off | (in )savings | discount | (cash)back | reward | gift | value | credit | (promotional )coupon | (mail-in )rebate | (e-)certificate | bonus | sale)\n    /(\\d{1,2}%|(\\$|£|&pound;|€|&euro;)\\d+(\\.\\d{2})?|percent|\\d\\/\\d)\\s*(off|(in )?savings?|discount|(cash(\\s*)?)?back|reward|gift|value|credit|(promotional\\s*)?coupon|(mail-in\\s*)?rebate|(e-)?certificate|bonus|sale)/i,\n    // (extra | up to | save | over | more than | discount of | discounted by | savings of | at least | gift of | down to | as low as | bonus of| get a | on (any)) (10% | $10)\n    /(extra|up\\s*to|sav(e|ings\\s*of)|over|more\\s*than|discount(ed)?\\s*(of|by)|at\\s*least|gift\\s*of|down\\s*to|as\\s*low\\s*as|bonus\\s*of|take|get(\\s*a)?|on(\\s*any)?)\\s*(\\d{1,2}%|(\\$|£|&pound;|€|&euro;)\\d+(\\.\\d{2})?)/i,\n    // was $10.99 | start at $10.99 sale $10.99\n    /(sale:?|was:?|start\\s*at)\\s*(\\$|£|&pound;|€|&euro;)\\d+/i,\n    //on sale | markdown | save on | marked down\n    /on\\s*sale|markdown|save\\s*on|marked\\s*down/i,\n    //anniversary sale\n    /anniversary\\s*sale/i,\n    // free ship | free on orders of | free $5 | free 10% | free delivery | free standard | free gift | free NN\n    /free\\s*(ship|on\\s*orders\\s*of|(\\$|£|&pound;|€|&euro;)\\d|\\d+%|standard|delivery|gift|\\d)/i,\n    // buy one / two / three texttexttext, get\n    /buy\\s*(one|two|three|\\d+),?.*\\sget/i,\n    //(standard | complementary | NN day) (shipping)\n    /(standard|complimentary|\\d+day)\\s*shipping/i,\n    //3 for 2\n    /\\d\\s*for\\s*\\d/i,\n    //(half | 1/2) (price)\n    /(half|\\d\\/\\d)\\s*(price)/i,\n    //BOGO\n    /BOGO|Exclusive Coupon|B2G1/,\n    // (100 | earn | get | gather | collect | your | redeem | reward | worth of) (points | rewards | gift | coupon | (e-)certificate)\n    /(\\d+|earn|get|gather|collect|your|redeem|rewards?|worth\\s*of)\\s*(points|rewards?|gift|coupon|(e-)?certificate|a?\\s*[\\$£€])/i,\n    // (double | triple | NN times the) (points)\n    /(double|triple|\\d\\s*times\\s*the|\\dx(\\s*the)?)\\s*(points)/i,\n    //promo(tion) code\n    /promo(?:tion)\\s*code\\s*/i,\n    /deal|Hurry|cash back|savings|save|now through| ends soon|free/i\n  ];\n\n  for (var j = 0; j < posRegexArr.length; j++) {\n    if (posRegexArr[j].test(data)) return data.length > 80 ? minimizeMe(data, posRegexArr[j]) : cleanMe(data);\n  }\n\n  return null;\n}\n\n\n\n\n\nfunction minimizeMe(str, reg){\n  var punctuation = [\". \", \"! \", \"| \", \"? \", \": \"]; //Punctuation symbols\n  str = str.replace(/(\\.)(?!com|\\d)([A-z])/g, \"$1 $2\");\n\n  //STAGE 1 - Slice text at the beginning of string\n  var sliceStr = str.slice(0, str.indexOf(str.match(reg)[0])); //Create a substring from the beginning of string up to the beginning of the .match()\n  var sliceStart = 0; //Define a variable where the slice at the beginning of the initial string will happen.\n\n\n  //Iterate through the punctuation symbols.\n  //If the last Index position of the punctuation is larger than the sliceStart variable,\n  //then make the variable equal to the last index position.\n  //That will be later used to slice the string at its beginning\n  for (var i = 0; i < punctuation.length; i++) {\n    if(sliceStr.lastIndexOf(punctuation[i]) > sliceStart) sliceStart = sliceStr.lastIndexOf(punctuation[i]);\n  }\n  //Slice the string from the beginning of the last punctuation mark but before the coupon description.\n  if(sliceStart > 0) str = str.slice(sliceStart + 1).trim();\n\n\n\n\n  //STAGE 2 - Slice text at the end of string\n  var sliceEnd = +Infinity;\n  //Iterate through the punctuation symbols.\n  //If the punctuation symbol's index position is smaller than the sliceEnd variable, then\n  //make the sliceEnd variable equal to the index position of the punctuation.\n  //The sliceEnd will be used as the position where the slicing of the string will happen at it's end.\n  for (var j = 0; j < punctuation.length; j++) {\n    if (str.indexOf(punctuation[j]) < sliceEnd && str.indexOf(punctuation[j]) !== -1) sliceEnd = str.indexOf(punctuation[j]);\n  }\n  //Slice the end of the string\n  str = str.slice(0, sliceEnd).trim();\n\n\n\n\n\n  //STAGE 3 - Remove unecessary characters from the end of the string.\n  return cleanMe(str);\n}\n\n\nfunction cleanMe(string) {\n\n  var replaceStrArr = [\n    {oldStr: /(shop\\s*now|find\\s*store|view\\s*online|does\\s*not\\s*combine|—On\\s*Sale\\s*Now\\s*Thru|view\\s*in\\s*browser).*/i, newStr: \"\"},\n    {oldStr: /^([A-Z][a-z]+,\\s(Plus,\\s*)?|LAST\\s*DAY\\s*Online\\s*Only|Plus,\\s|Online only)/i, newStr: \"\"},\n    {oldStr: /[\\*\\^]/g, newStr: \"\"}\n  ];\n\n  for (var i = 0; i < replaceStrArr.length; i++) {\n    string = string.replace(replaceStrArr[i].oldStr, replaceStrArr[i].newStr).trim();\n  }\n\n\n  return string.trim();\n}",
            "listOfValidNodeTypes": [
              {
                "name": "TEXT",
                "type": "node"
              },
              {
                "name": "ALT",
                "type": "attr"
              },
              {
                "name": "HREF",
                "type": "attr"
              }
            ],
            "location": [
              {
                "xpath": ""
              }
            ],
            "mandatory": "true",
            "maxLength": "200",
            "minLength": "4",
            "allowEmpty": "false",
            "name": "http://schema.org/description",
            "whiteList": [
              {
                "value": "(?i)(\\d{1,2}%|(\\$|£|&pound;|€|&euro;)\\d+(\\.\\d{2})?|percent|\\d\\/\\d)\\s*(off|(in )?savings?|discount|(cash(\\s*)?)?back|reward|gift|value|credit|(promotional\\s*)?coupon|(mail-in\\s*)?rebate|(e-)?certificate|bonus|sale)",
                "type": "REGEX"
              },
              {
                "value": "(?i)(extra|up\\s*to|sav(e|ings\\s*of)|over|more\\s*than|discount(ed)?\\s*(of|by)|at\\s*least|gift\\s*of|down\\s*to|as\\s*low\\s*as|bonus\\s*of|take|get(\\s*a)?|on(\\s*any)?)\\s*(\\d{1,2}%|(\\$|£|&pound;|€|&euro;)\\d+(\\.\\d{2})?)",
                "type": "REGEX"
              },
              {
                "value": "(?i)(sale:?|was:?|start\\s*at)\\s*(\\$|£|&pound;|€|&euro;)\\d+",
                "type": "REGEX"
              },
              {
                "value": "(?i)on\\s*sale|markdown|save\\s*on|marked\\s*down",
                "type": "REGEX"
              },
              {
                "value": "(?i)anniversary\\s*sale",
                "type": "REGEX"
              },
              {
                "value": "(?i)free\\s*(ship|on\\s*orders\\s*of|(\\$|£|&pound;|€|&euro;)\\d|\\d+%|standard|delivery|gift|\\d)",
                "type": "REGEX"
              },
              {
                "value": "(?i)buy\\s*(one|two|three|\\d+),?.*\\sget",
                "type": "REGEX"
              },
              {
                "value": "(?i)(standard|complimentary|\\d+day)\\s*shipping",
                "type": "REGEX"
              },
              {
                "value": "(?i)\\d\\s*for\\s*\\d",
                "type": "REGEX"
              },
              {
                "value": "(?i)(half|\\d\\/\\d)\\s*(price)",
                "type": "REGEX"
              },
              {
                "value": "(?i)BOGO|Exclusive Coupon|B2G1",
                "type": "REGEX"
              },
              {
                "value": "(?i)(\\d+|earn|get|gather|collect|your|redeem|rewards?|worth\\s*of)\\s*(points|rewards?|gift|coupon|(e-)?certificate|a?\\s*[\\$£€])",
                "type": "REGEX"
              },
              {
                "value": "(?i)(double|triple|\\d\\s*times\\s*the|\\dx(\\s*the)?)\\s*(points)",
                "type": "REGEX"
              },
              {
                "value": "(?i)(deal|Hurry|cash back|savings|save|now through|ends soon|free)",
                "type": "REGEX"
              }
            ]
          },
          {
            "blackList": [
              {
                "value": "sale ends",
                "type": "SUBSTRING"
              },
              {
                "value": "valid through",
                "type": "SUBSTRING"
              },
              {
                "value": "ends",
                "type": "SUBSTRING"
              },
              {
                "value": "This Weekend Only",
                "type": "SUBSTRING"
              }
            ],
            "dataTypes": [
              "DateTime"
            ],
            "javascript": "function transform(data) {if (data) {var monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];var regex = /(\\s*\\d+)\\/(\\s*\\d+)/i;var match = regex.exec(data);if (match && match[1]) {return monthNames[match[1] - 1] + ', ' + match[2];}else{return data;}}return null;}",
            "listOfValidNodeTypes": [],
            "location": [
              {
                "xpath": ""
              }
            ],
            "mandatory": "true",
            "maxLength": "-1",
            "minLength": "-1",
            "name": "http://schema.org/validThrough",
            "whiteList": []
          },
          {
            "blackList": [
              {
                "type": "SUBSTRING",
                "value": "sale ends"
              },
              {
                "type": "SUBSTRING",
                "value": "valid through"
              },
              {
                "type": "SUBSTRING",
                "value": "ends"
              }
            ],
            "dataTypes": [
              "DateTime"
            ],
            "javascript": "function transform(data) {if (data) {var monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];var regex = /(\\s*\\d+)\\/(\\s*\\d+)/i;var match = regex.exec(data);if (match && match[1]) {return monthNames[match[1] - 1] + ', ' + match[2];}else{return data;}}return null;}",
            "listOfValidNodeTypes": null,
            "location": null,
            "mandatory": "true",
            "maxLength": -1,
            "minLength": -1,
            "name": "http://schema.org/validFrom"
          },
          {
            "blackList": [
              {
                "type": "REGEX",
                "value": "\\$.*off$"
              }
            ],
            "dataTypes": [
              "Number"
            ],
            "javascript": null,
            "listOfValidNodeTypes": null,
            "location": null,
            "mandatory": "true",
            "maxLength": -1,
            "minLength": -1,
            "name": "http://schema.org/offerPrice",
            "whiteList": [
              {
                "type": "SUBSTRING",
                "value": "Free shipping"
              }
            ]
          },
          {
            "blackList": [
              {
                "type": "REGEX",
                "value": "\\$.*off$"
              }
            ],
            "dataTypes": [
              "Number"
            ],
            "javascript": null,
            "listOfValidNodeTypes": null,
            "location": null,
            "mandatory": "true",
            "maxLength": -1,
            "minLength": -1,
            "name": "http://schema.org/originalPrice",
            "whiteList": [
              {
                "type": "SUBSTRING",
                "value": "Free shipping"
              }
            ]
          },
          {
            "blackList": null,
            "dataTypes": [
              "Text"
            ],
            "javascript": "function transform(data){content=data.trim();if(content&&content.startsWith('C$')){return'CAD'}else if(content&&content.startsWith('$')){return'USD'}else{return null}};",
            "listOfValidNodeTypes": null,
            "location": null,
            "mandatory": "true",
            "maxLength": -1,
            "minLength": -1,
            "name": "http://schema.org/priceCurrency",
            "whiteList": null
          },
          {
            "blackList": null,
            "dataTypes": [
              "Text"
            ],
            "javascript": "",
            "listOfValidNodeTypes": null,
            "location": null,
            "mandatory": "true",
            "maxLength": -1,
            "minLength": -1,
            "name": "http://schema.org/url",
            "whiteList": null
          }
        ],
        "bundleInfo": {
          "minBundleSize": "-1",
          "maxBundleSize": "-1",
          "minLeafNodesSize": "-1",
          "maxLeafNodesSize": "-1",
          "maxDepth": "-1",
          "defaultPatternAnnotationThreshold": "0.8",
          "linkThreshold": "3",
          "footerPercentage": "0.8",
          "dedupCondition": {
            "matchThreshold": "",
            "stopWords": []
          },
          "overRideValidThroughFromFooter": "false",
          "listOfValidNodeTypes": [],
          "linkMatcher": [
            {
              "regex": ".*link\\.mail\\.gnc\\.com.*"
            }
          ]
        },
        "id": "b4917ca5-ee83-4569-87c7-37feef5474af",
        "javascript": null,
        "type": "http://schema.org/Coupon"
      },
      {
        "attributes": [
          {
            "dataTypes": [
              "Text"
            ],
            "javascript": null,
            "location": [
              {
                "xpath": "\"mail.gnc.com\""
              }
            ],
            "mandatory": "true",
            "name": "http://schema.org/name",
            "minLength": "",
            "maxLength": "",
            "whiteList": [],
            "blackList": [],
            "listOfValidNodeTypes": []
          }
        ],
        "bundleInfo": {
          "clusterAlgo": {
            "endIdx": -1,
            "regex": "",
            "replaceInfo": [
              {
                "regexStr": "",
                "replaceAll": "true",
                "replacement": ""
              }
            ],
            "startIdx": 0,
            "type": "SUBSTRING"
          },
          "linkMatcher": [
            {
              "regex": ".*"
            }
          ],
          "listOfValidNodeTypes": null,
          "maxBundleSize": -1,
          "maxDepth": -1,
          "maxLeafNodesSize": -1,
          "minBundleSize": -1,
          "minLeafNodesSize": -1,
          "defaultPatternAnnotationThreshold": 0.8,
          "linkThreshold": 2
        },
        "id": "b4917ca5-ee83-4569-87c7-37feef5474au",
        "javascript": null,
        "type": "http://schema.org/Organization"
      },
      {
        "attributes": [
          {
            "blackList": null,
            "dataTypes": [
              "Text"
            ],
            "javascript": "",
            "listOfValidNodeTypes": null,
            "location": null,
            "mandatory": "true",
            "maxLength": -1,
            "minLength": -1,
            "name": "http://schema.org/url",
            "whiteList": null
          }
        ],
        "bundleInfo": {
          "clusterAlgo": {
            "endIdx": -1,
            "regex": "",
            "replaceInfo": [
              {
                "regexStr": "",
                "replaceAll": "true",
                "replacement": ""
              }
            ],
            "startIdx": 0,
            "type": "SUBSTRING"
          },
          "linkMatcher": null,
          "listOfValidNodeTypes": null,
          "maxBundleSize": -1,
          "maxDepth": -1,
          "maxLeafNodesSize": -1,
          "minBundleSize": -1,
          "minLeafNodesSize": -1,
          "linkThreshold": 2,
          "defaultPatternAnnotationThreshold": 0.8
        },
        "id": "b4917ca5-ee83-4569-87c7-37feef5474aj",
        "javascript": null,
        "type": "http://schema.org/ImageObject"
      }
    ]
  },
  "metaData": {
    "debug": "true",
    "linkAlgoHandler": "LinkExtractor15",
    "decodeHtmlEntity": "true"
  }
}
