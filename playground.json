{
  "extract": {
    "extractEmbedded": false,
    "source": null,
    "schema": [
      {
        "url": "http://ws.rmf.yahoo.com:4080/rmf/v1/schema?type=schema.org&name=y.2.0&format=json",
        "ns": "http://schema.org",
        "context": {
          "@type": [
            "Coupon"
          ]
        }
      }
    ],
    "entityRules": [
      {
        "id": "d9b17155-c4a3-4ced-b138-1a4034764d88",
        "repeating": true,
        "locations": [
          "/descendant::img[contains(translate(@alt,\"OF\",\"of\"),\" off\") and (contains(@alt,\"%\") or contains(@alt,\"$\")) and not(contains(translate(@alt,\"FRESHIP\",\"freship\"),\"free ship\") or contains(@alt,\"BOGO\")) or\ncontains(translate(@alt,\"REWAD\",\"rewad\"),\"reward\") and contains(@alt, \"$\")]\n[not(contains(translate(@alt, \"ANULSE\", \"anulse\"), \"annual sale\"))]\n|\n/descendant::img[contains(translate(@alt, \"ANULSE\", \"anulse\"), \"annual sale\")][1]\n|\n/descendant::img[contains(translate(@alt,\"FRE\",\"fre\"),\"free\") and contains(translate(@alt,\"GET\",\"get\"),\"get\")][1]\n|\n/descendant::img[contains(@alt,\"BOGO\")][1]\n|\n/descendant::img[contains(translate(@alt,\"FRESHIP\",\"freship\"),\"free ship\") and contains(translate(@alt,\"OF\",\"of\"),\" off\")][1]\n"
        ],
        "type": "http://schema.org/Coupon",
        "javascript": null,
        "entityIdRef": "",
        "attributes": [
          {
            "repeating": false,
            "locations": {
              "-1": [
                {
                  "xpath": "./@alt"
                }
              ]
            },
            "name": "http://schema.org/description",
            "relative": true,
            "transient": false,
            "javascript": "function transform(data){\n   if (data) {\n       var v= data.replace(/\\*|\\â€ /g, \"\").replace(/Sho p/, \"shop\").replace(/shop now/i, \"\");\n       return v; }\nelse \n  return \"\"; }",
            "dataTypes": [
              "Text"
            ],
            "mandatory": false
          },
          {
            "repeating": false,
            "locations": {
              "-1": [
                {
                  "xpath": "./ancestor::a/@href"
                }
              ]
            },
            "name": "http://schema.org/url",
            "relative": true,
            "transient": false,
            "javascript": null,
            "dataTypes": [
              "URL"
            ],
            "mandatory": false
          },
          {
            "repeating": false,
            "locations": {
              "-1": [
                {
                  "xpath": "concat(./@alt, \"~~~\", /descendant::text()[contains(translate(., \"SOMAINTE\", \"somainte\"), \"soma intimates\")]/ancestor::table[1])"
                }
              ]
            },
            "name": "http://schema.org/validThrough",
            "relative": true,
            "transient": false,
            "javascript": "function transform(data, node, headers){\n  var dataSpl = data.split(\"~~~\");\n  var coupon = dataSpl[0].toLowerCase();\n  var vtDates = dataSpl[1].toLowerCase();\n  var slicer;\n  \n    \n    \n    //When coupon reads \"get $10 off when you spend $85\"\n    if(/Get\\s*\\$\\d{1,2}\\s*off\\s*when\\s*you\\s*spend\\s*\\$\\d{1,2}/i.test(coupon)) return vtDates.replace(/.*From\\s*(?:\\d{1,2}\\/){2}\\d{2,4}\\s*-\\s*((?:\\d{1,2}\\/){2}\\d{2,4}).*/i,\"$1\");\n\n\n\n  \n  //When coupon reads \"free shipping\" or reads \"NN% off\"\n  if (/free\\s*shipping.*/i.test(coupon)) slicer = /free\\s*(parcel\\s*post\\s*)?shipping/i;\n  if (/\\d{1,2}%\\s*off/i.test(coupon)) slicer = new RegExp(coupon.replace(/.*(\\d{2}%\\s*off).*/i, \"$1\"), \"i\");\n\n  if (slicer.test(vtDates)) {\n    vtDates = vtDates.slice(vtDates.search(slicer));\n    vtDates = vtDates.slice(vtDates.toLowerCase().indexOf(\"valid through\") + 14);\n    vtDates = vtDates.slice(0, vtDates.indexOf(\".\"));\n    return vtDates;\n  }\n\n\n\n  \n  //When the offer reads \"Ends today\"\n  if (coupon.toLowerCase().indexOf(\"ends today\") !== -1) {\n    var n = headers.get(\"Date\");\n    var n1 = new Date(n * 1000);\n    var day1 = n1.getDate();\n    var mon1 = n1.getMonth();\n    var vt = new Date(\"1970\", mon1, day1);\n    return vt;\n  }\n\n\n\n  return data;\n\n}",
            "dataTypes": [
              "DateTime"
            ],
            "mandatory": false
          }
        ],
        "hints": {
          "_footer": "/descendant::text()[contains(translate(., \"SOMAINTE\", \"somainte\"), \"soma intimates\")]/ancestor::table[1]"
        },
        "hintsJavascript": null
      },
      {
        "id": "ead2e8cf-62e1-45fc-8b93-4e6c9645a508",
        "repeating": true,
        "locations": [
          "/descendant::img[contains(translate(@alt,\"OF\",\"of\"),\" off\") and (contains(@alt,\"%\") or contains(@alt,\"$\")) and not(contains(translate(@alt,\"FRESHIP\",\"freship\"),\"free ship\") or contains(@alt,\"BOGO\")) or\ncontains(translate(@alt,\"REWAD\",\"rewad\"),\"reward\") and contains(@alt, \"$\")]\n[not(contains(translate(@alt, \"ANULSE\", \"anulse\"), \"annual sale\"))]\n|\n/descendant::img[contains(translate(@alt, \"ANULSE\", \"anulse\"), \"annual sale\")][1]\n|\n/descendant::img[contains(translate(@alt,\"FRE\",\"fre\"),\"free\") and contains(translate(@alt,\"GET\",\"get\"),\"get\")][1]\n|\n/descendant::img[contains(@alt,\"BOGO\")][1]\n|\n/descendant::img[contains(translate(@alt,\"FRESHIP\",\"freship\"),\"free ship\") and contains(translate(@alt,\"OF\",\"of\"),\" off\")][1]\n"
        ],
        "type": "http://schema.org/Organization",
        "javascript": null,
        "entityIdRef": null,
        "attributes": [
          {
            "repeating": false,
            "locations": {
              "-1": [
                {
                  "xpath": "\"Soma\""
                }
              ]
            },
            "name": "http://schema.org/name",
            "relative": true,
            "transient": false,
            "javascript": null,
            "dataTypes": [
              "Text"
            ],
            "mandatory": false
          }
        ]
      },
      {
        "id": "5049508a-d05b-48e3-8c1c-b58f0f8fa4c5",
        "repeating": true,
        "locations": [
          "/descendant::img[contains(translate(@alt,\"OF\",\"of\"),\" off\") and (contains(@alt,\"%\") or contains(@alt,\"$\")) and not(contains(translate(@alt,\"FRESHIP\",\"freship\"),\"free ship\") or contains(@alt,\"BOGO\")) or\ncontains(translate(@alt,\"REWAD\",\"rewad\"),\"reward\") and contains(@alt, \"$\")]\n[not(contains(translate(@alt, \"ANULSE\", \"anulse\"), \"annual sale\"))]\n|\n/descendant::img[contains(translate(@alt, \"ANULSE\", \"anulse\"), \"annual sale\")][1]\n|\n/descendant::img[contains(translate(@alt,\"FRE\",\"fre\"),\"free\") and contains(translate(@alt,\"GET\",\"get\"),\"get\")][1]\n|\n/descendant::img[contains(@alt,\"BOGO\")][1]\n|\n/descendant::img[contains(translate(@alt,\"FRESHIP\",\"freship\"),\"free ship\") and contains(translate(@alt,\"OF\",\"of\"),\" off\")][1]\n"
        ],
        "type": "http://schema.org/ImageObject",
        "javascript": null,
        "entityIdRef": null,
        "attributes": [
          {
            "repeating": false,
            "locations": {
              "-1": [
                {
                  "xpath": "./@src"
                }
              ]
            },
            "name": "http://schema.org/url",
            "relative": true,
            "transient": false,
            "javascript": null,
            "dataTypes": [
              "URL"
            ],
            "mandatory": false
          }
        ]
      }
    ],
    "edgeRules": [
      {
        "from": {
          "entityRule": "d9b17155-c4a3-4ced-b138-1a4034764d88",
          "matchAttr": ""
        },
        "to": {
          "entityRule": "ead2e8cf-62e1-45fc-8b93-4e6c9645a508",
          "matchAttr": ""
        },
        "predicate": "http://schema.org/broker",
        "cardinality": "ONE_TO_ONE"
      },
      {
        "from": {
          "entityRule": "d9b17155-c4a3-4ced-b138-1a4034764d88",
          "matchAttr": ""
        },
        "to": {
          "entityRule": "5049508a-d05b-48e3-8c1c-b58f0f8fa4c5",
          "matchAttr": ""
        },
        "predicate": "http://schema.org/image",
        "cardinality": "ONE_TO_ONE"
      }
    ],
    "entityNS": null
  },
  "metaData": {
    "useVTDXML": "true",
    "ignoredValidations": null
  }
}
