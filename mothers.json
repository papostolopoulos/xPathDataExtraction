/* LINKBASED MOTHER */
{
  "extract": {
    "edgeRules": [],
    "entityNS": null,
    "entityRules": [
      {
        "attributes": [],
        "entityIdRef": "",
        "id": "f66018c8-423b-459b-b55a-c639d92daf68",
        "javascript": null,
        "locations": [
          "/"
        ],
        "repeating": true,
        "type": "http://schema.org/Coupon"
      }
    ],
    "extractEmbedded": false,
    "schema": [
      {
        "context": {
          "@type": [
            "Coupon"
          ]
        },
        "ns": "http://schema.org",
        "url": "http://ws.rmf.yahoo.com:4080/rmf/v1/schema?type=schema.org&name=y.2.0&format=json"
      }
    ],
    "source": null
  },
  "extractLn": {
    "edgeRules": [
      {
        "cardinality": "ONE_TO_ONE",
        "from": {
          "entityRule": "b4917ca5-ee83-4569-87c7-37feef5474af",
          "matchAttr": null
        },
        "predicate": "http://schema.org/broker",
        "to": {
          "entityRule": "b4917ca5-ee83-4569-87c7-37feef5474au",
          "matchAttr": null
        }
      },
      {
        "cardinality": "ONE_TO_ONE",
        "from": {
          "entityRule": "b4917ca5-ee83-4569-87c7-37feef5474af",
          "matchAttr": null
        },
        "predicate": "http://schema.org/image",
        "to": {
          "entityRule": "b4917ca5-ee83-4569-87c7-37feef5474aj",
          "matchAttr": null
        }
      }
    ],
    "entityRules": [
      {
        "attributes": [
          {
            "blackList": [
              {
                "type": "SUBSTRING",
                "value": "view deal"
              },
              {
                "type": "SUBSTRING",
                "value": "view"
              },
              {
                "type": "SUBSTRING",
                "value": "shop now"
              },
              {
                "type": "REGEX",
                "value": "over\\s[0-9,]+\\sbought"
              },
              {
                "type": "REGEX",
                "value": "[0-9,]+\\sratings"
              },
              {
                "type": "REGEX",
                "value": "ends\\s+[0-2]{0,2}/[0-3]{0,2}"
              },
              {
                "type": "REGEX",
                "value": "deal$"
              },
              {
                "type": "REGEX",
                "value": "\\$.*off$"
              }
            ],
            "concat": "true",
            "dataTypes": [
              "Text"
            ],
            "javascript": null,
            "listOfValidNodeTypes": [
              {
                "name": "TEXT",
                "type": "node"
              },
              {
                "name": "ALT",
                "type": "attr"
              },
              {
                "name": "HREF",
                "type": "attr"
              }
            ],
            "location": null,
            "mandatory": "true",
            "maxLength": 200,
            "minLength": 4,
            "allowEmpty": "false",
            "name": "http://schema.org/description",

            "whiteList": [
              {
                "type": "SUBSTRING",
                "value": "online code"
              },
              {
                "type": "SUBSTRING",
                "value": "offer valid thru"
              },
              {
                "type": "SUBSTRING",
                "value": "$"
              },
              {
                "type": "SUBSTRING",
                "value": "%"
              }
            ]
          },
          {
            "blackList": [
              {
                "type": "SUBSTRING",
                "value": "sale ends"
              },
              {
                "type": "SUBSTRING",
                "value": "valid through"
              },
              {
                "type": "SUBSTRING",
                "value": "ends"
              }
            ],
            "dataTypes": [
              "DateTime"
            ],
            "javascript": "function transform(data) {if (data) {var monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];var regex = /(\\s*\\d+)\\/(\\s*\\d+)/i;var match = regex.exec(data);if (match && match[1]) {return monthNames[match[1] - 1] + ', ' + match[2];}else{return data;}}return null;}",
            "listOfValidNodeTypes": null,
            "location": null,
            "mandatory": "true",
            "maxLength": -1,
            "minLength": -1,
            "name": "http://schema.org/validThrough"
          },
          {
            "blackList": [
              {
                "type": "SUBSTRING",
                "value": "sale ends"
              },
              {
                "type": "SUBSTRING",
                "value": "valid through"
              },
              {
                "type": "SUBSTRING",
                "value": "ends"
              }
            ],
            "dataTypes": [
              "DateTime"
            ],
            "javascript": "function transform(data) {if (data) {var monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];var regex = /(\\s*\\d+)\\/(\\s*\\d+)/i;var match = regex.exec(data);if (match && match[1]) {return monthNames[match[1] - 1] + ', ' + match[2];}else{return data;}}return null;}",
            "listOfValidNodeTypes": null,
            "location": null,
            "mandatory": "true",
            "maxLength": -1,
            "minLength": -1,
            "name": "http://schema.org/validFrom"
          },
          {
            "blackList": [
              {
                "type": "REGEX",
                "value": "\\$.*off$"
              }
            ],
            "dataTypes": [
              "Number"
            ],
            "javascript": null,
            "listOfValidNodeTypes": null,
            "location": null,
            "mandatory": "true",
            "maxLength": -1,
            "minLength": -1,
            "name": "http://schema.org/offerPrice",
            "whiteList": [
              {
                "type": "SUBSTRING",
                "value": "Free shipping"
              }
            ]
          },
          {
            "blackList": [
              {
                "type": "REGEX",
                "value": "\\$.*off$"
              }
            ],
            "dataTypes": [
              "Number"
            ],
            "javascript": null,
            "listOfValidNodeTypes": null,
            "location": null,
            "mandatory": "true",
            "maxLength": -1,
            "minLength": -1,
            "name": "http://schema.org/originalPrice",
            "whiteList": [
              {
                "type": "SUBSTRING",
                "value": "Free shipping"
              }
            ]
          },
          {
            "blackList": null,
            "dataTypes": [
              "Text"
            ],
            "javascript": "function transform(data){content=data.trim();if(content&&content.startsWith('C$')){return'CAD'}else if(content&&content.startsWith('$')){return'USD'}else{return null}};",
            "listOfValidNodeTypes": null,
            "location": null,
            "mandatory": "true",
            "maxLength": -1,
            "minLength": -1,
            "name": "http://schema.org/priceCurrency",
            "whiteList": null
          },
          {
            "blackList": null,
            "dataTypes": [
              "Text"
            ],
            "javascript": "",
            "listOfValidNodeTypes": null,
            "location": null,
            "mandatory": "true",
            "maxLength": -1,
            "minLength": -1,
            "name": "http://schema.org/url",
            "whiteList": null
          }
        ],
        "bundleInfo": {
          "clusterAlgo": {
            "endIdx": -1,
            "regex": "",
            "replaceInfo": [
              {
                "regexStr": "",
                "replaceAll": "true",
                "replacement": ""
              }
            ],
            "startIdx": 0,
            "type": "SUBSTRING"
          },
          "defaultPatternAnnotationThreshold": 0.8,
          "linkMatcher": [
            {
              "regex": ".*"
            }
          ],
          "linkThreshold": 2,
          "listOfValidNodeTypes": null,
          "maxBundleSize": -1,
          "maxDepth": -1,
          "maxLeafNodesSize": -1,
          "minBundleSize": -1,
          "minLeafNodesSize": -1
        },
        "id": "b4917ca5-ee83-4569-87c7-37feef5474af",
        "javascript": null,
        "type": "http://schema.org/Coupon"
      },
      {
        "attributes": [
          {
            "dataTypes": [
              "Text"
            ],
            "javascript": null,
            "location": [
              {
                "xpath": "\"DO NOT FORGET ME!!!!!!!!!\""
              }
            ],
            "mandatory": "true",
            "name": "http://schema.org/name",
            "minLength": "",
            "maxLength": "",
            "whiteList": [],
            "blackList": [],
            "listOfValidNodeTypes": []
          }
        ],
        "bundleInfo": {
          "clusterAlgo": {
            "endIdx": -1,
            "regex": "",
            "replaceInfo": [
              {
                "regexStr": "",
                "replaceAll": "true",
                "replacement": ""
              }
            ],
            "startIdx": 0,
            "type": "SUBSTRING"
          },
          "linkMatcher": [
            {
              "regex": ".*"
            }
          ],
          "listOfValidNodeTypes": null,
          "maxBundleSize": -1,
          "maxDepth": -1,
          "maxLeafNodesSize": -1,
          "minBundleSize": -1,
          "minLeafNodesSize": -1,
          "defaultPatternAnnotationThreshold": 0.8,
          "linkThreshold": 2
        },
        "id": "b4917ca5-ee83-4569-87c7-37feef5474au",
        "javascript": null,
        "type": "http://schema.org/Organization"
      },
      {
        "attributes": [
          {
            "blackList": null,
            "dataTypes": [
              "Text"
            ],
            "javascript": "",
            "listOfValidNodeTypes": null,
            "location": null,
            "mandatory": "true",
            "maxLength": -1,
            "minLength": -1,
            "name": "http://schema.org/url",
            "whiteList": null
          }
        ],
        "bundleInfo": {
          "clusterAlgo": {
            "endIdx": -1,
            "regex": "",
            "replaceInfo": [
              {
                "regexStr": "",
                "replaceAll": "true",
                "replacement": ""
              }
            ],
            "startIdx": 0,
            "type": "SUBSTRING"
          },
          "linkMatcher": null,
          "listOfValidNodeTypes": null,
          "maxBundleSize": -1,
          "maxDepth": -1,
          "maxLeafNodesSize": -1,
          "minBundleSize": -1,
          "minLeafNodesSize": -1,
          "linkThreshold": 2,
          "defaultPatternAnnotationThreshold": 0.8
        },
        "id": "b4917ca5-ee83-4569-87c7-37feef5474aj",
        "javascript": null,
        "type": "http://schema.org/ImageObject"
      }
    ]
  },
  "metaData": {
    "debug": "true",
    "linkAlgoHandler": "LinkExtractor15",
    "decodeHtmlEntity": "true"
  }
}

/* GENERIC MOTHER */
{
    "extract": {
      "extractEmbedded": false,
      "source": null,
      "schema": [
        {
          "url": "http://ws.rmf.yahoo.com:4080/rmf/v1/schema?type=schema.org&name=y.2.0&format=json",
          "ns": "http://schema.org",
          "context": {
            "@type": [
              "Coupon"
            ]
          }
        }
      ],
      "entityRules": [
        {
          "id": "0386bd07-e736-4a45-9305-400e673ab76d",
          "repeating": true,
          "locations": [
            "/"
          ],
          "type": "http://schema.org/Coupon",
          "javascript": null,
          "entityIdRef": null,
          "attributes": []
        }
      ],
      "edgeRules": [],
      "entityNS": null
    },
    "metaData": {
      "useVTDXML": "true",
      "ignoredValidations": null,
      "footerRatio": "0.3",
      "footerRatioFallBack": "0.4"
    },
    "extractV2": {
      "entityRules": [
        {
          "id": "f0cb28cf-6320-4046-82e9-0bf962223333",
          "type": "http://schema.org/Coupon",
          "attributes": [
            {
              "repeating": true,
              "locations": {
                "1": [
                  {
                    "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(@alt, 'REWAD', 'rewad'), \"reward\") or contains(translate(@alt, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@alt, 'CASH', 'cash'), \"cash\") or contains(translate(@alt, 'CODE', 'code'), \"code\") or contains(translate(@alt, 'REDM', 'redm'), \"redeem\") or contains(translate(@alt, 'REWARDS', 'rewards'), \"rewards\") or contains(translate(@alt, 'PROMTIN', 'promtin'), \"promotion\") or contains(translate(@alt, 'SHIPNG', 'shipng'), \"shipping\") ]/@alt",
                    "js": "function transform(data, prevData) {\n    var invalid = /\\@import\\s+url/i;\n  \n    var percentOff = /\\d+%?\\s*off/i;\n    var percentDiscount = /\\d+%\\s*discount/i;\n    var dollarOff = /\\d+(?:\\.\\d+)?\\s*off/i;\n    var percentBack = /\\d+%\\s*back/i;\n\n    var percentReward = /\\d+%\\s*reward/i;\n    var percentCoupon = /(\\d+%|\\$\\d+)\\s*(?:promotional\\s+)?coupon/i;\n    var percentSaving = /\\d+%\\s*saving/i;\n\n    var earnUpto = /earn\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n\n    var save = /save\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n  \n    var offers = /\\s+offer[s]?\\s+/i;\n    var promoCode = /promo(?:tion)\\s+code\\s+/i;\n    var negPromoCode = /^into\\sthe/i;\n    \n    var redeem = /\\sredeem\\s/i;\n    var redeem2 = /\\.[^.]*?\\sredeem\\s/i;\n  \n    var earnedReward = /\\sbody\\sworks\\sreward/i;\n    var freeShip = /free\\sship/i;\n\n    if (!data || data == \"\") {\n        return null;\n    }\n\tvar match = invalid.exec(data);\n    if (match){\n      return null;\n    }\n  \n    match = percentOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n      match = percentDiscount.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = dollarOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentBack.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentCoupon.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentSaving.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = earnUpto.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = save.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = offers.exec(data);\n    if (match){\n      if(data.length > 100){\n        return null;\n      }\n      else if(data.length < 50){\n        var digitMatch = /(\\d+%|\\$\\d+)\\s+/;\n        var match1 = digitMatch.exec(data);\n        if(match1) {\n          return formatDescription(data);\n        }\n      }\n      else {\n        return formatDescription(data);\n      }\n    }\n  \n    match = promoCode.exec(data);\n    if (match){\n      var match2 = negPromoCode.exec(data);\n      if( !match2)\n      return formatDescription(data);\n    }\n  \n    match = redeem.exec(data);\n    var match2 = redeem2.exec(data);\n    if (match){\n      if(match2 && match2.index){\n        data = data.substr(match2.index+1);\n      }\n      return formatDescription(data);\n    }\n    match = earnedReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n    match = freeShip.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    return null;\n}\n\nfunction formatDescription(desc){\n    if(desc && desc.length > 100){\n        var tPos = [desc.indexOf(\". \", 80) , desc.indexOf(\"! \", 80) , desc.indexOf(\"? \", 80), desc.indexOf(\"; \", 80)];\n        \n        var splitPos = min(tPos, desc.length - 1)\n        return desc.substr(0, splitPos + 1);\n    }\n    return desc;\n}\n\nfunction min(posList, max){\n    var selPos = max;\n    for(var i = 0; i < posList.length; i++) {\n        if(posList[i] == -1){\n            continue;\n        }\n        if(selPos > posList[i]){\n          selPos = posList[i];\n        }\n    }\n    return selPos;\n}\n",
                    "glue": "",
                    "regex": "",
                    "nodeType": "NODE_LIST"
                  }
                ],
                "2": [
                  {
                    "xpath": "//img[contains(translate(@title, 'OF', 'of'), \" off \") or contains(@title, \"0%\") or contains(@title, \"1%\") or contains(@title, \"2%\") or contains(@title, \"3%\") or contains(@title, \"4%\") or contains(@title, \"5%\") or contains(@title, \"6%\") or contains(@title, \"7%\") or contains(@title, \"8%\") or contains(@title, \"9%\") or contains(translate(@title, 'REWAD', 'rewad'), \"reward\") or contains(translate(@title, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@title, 'CASH', 'cash'), \"cash\") or contains(translate(@title, 'CODE', 'code'), \"code\") or contains(translate(@title, 'REDM', 'redm'), \"redeem\") or contains(translate(@title, 'REWARDS', 'rewards'), \"rewards\") or contains(translate(@title, 'PROMTIN', 'promtin'), \"promotion\") or contains(translate(@title, 'SHIPNG', 'shipng'), \"shipping\") ]/@title",
                    "js": "function transform(data, prevData) {\n    var invalid = /\\@import\\s+url/i;\n  \n    var percentOff = /\\d+%?\\s*off/i;\n    var percentDiscount = /\\d+%\\s*discount/i;\n    var dollarOff = /\\d+(?:\\.\\d+)?\\s*off/i;\n    var percentBack = /\\d+%\\s*back/i;\n\n    var percentReward = /\\d+%\\s*reward/i;\n    var percentCoupon = /(\\d+%|\\$\\d+)\\s*(?:promotional\\s+)?coupon/i;\n    var percentSaving = /\\d+%\\s*saving/i;\n\n    var earnUpto = /earn\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n\n    var save = /save\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n  \n    var offers = /\\s+offer[s]?\\s+/i;\n    var promoCode = /promo(?:tion)\\s+code\\s+/i;\n    var negPromoCode = /^into\\sthe/i;\n    \n    var redeem = /\\sredeem\\s/i;\n    var redeem2 = /\\.[^.]*?\\sredeem\\s/i;\n  \n    var earnedReward = /\\sbody\\sworks\\sreward/i;\n    var freeShip = /free\\sship/i;\n\n    if (!data || data == \"\") {\n        return null;\n    }\n\tvar match = invalid.exec(data);\n    if (match){\n      return null;\n    }\n  \n    match = percentOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n      match = percentDiscount.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = dollarOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentBack.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentCoupon.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentSaving.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = earnUpto.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = save.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = offers.exec(data);\n    if (match){\n      if(data.length > 100){\n        return null;\n      }\n      else if(data.length < 50){\n        var digitMatch = /(\\d+%|\\$\\d+)\\s+/;\n        var match1 = digitMatch.exec(data);\n        if(match1) {\n          return formatDescription(data);\n        }\n      }\n      else {\n        return formatDescription(data);\n      }\n    }\n  \n    match = promoCode.exec(data);\n    if (match){\n      var match2 = negPromoCode.exec(data);\n      if( !match2)\n      return formatDescription(data);\n    }\n  \n    match = redeem.exec(data);\n    var match2 = redeem2.exec(data);\n    if (match){\n      if(match2 && match2.index){\n        data = data.substr(match2.index+1);\n      }\n      return formatDescription(data);\n    }\n    match = earnedReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n    match = freeShip.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    return null;\n}\n\nfunction formatDescription(desc){\n    if(desc && desc.length > 100){\n        var tPos = [desc.indexOf(\". \", 80) , desc.indexOf(\"! \", 80) , desc.indexOf(\"? \", 80), desc.indexOf(\"; \", 80)];\n        \n        var splitPos = min(tPos, desc.length - 1)\n        return desc.substr(0, splitPos + 1);\n    }\n    return desc;\n}\n\nfunction min(posList, max){\n    var selPos = max;\n    for(var i = 0; i < posList.length; i++) {\n        if(posList[i] == -1){\n            continue;\n        }\n        if(selPos > posList[i]){\n          selPos = posList[i];\n        }\n    }\n    return selPos;\n}\n",
                    "glue": "",
                    "regex": "",
                    "nodeType": "NODE_LIST"
                  }
                ],
                "3": [
                  {
                    "xpath": "//b[contains(translate(., 'OF', 'of'), \" off \") or contains(translate(., 'OFER', 'ofer'), \"offer\") or contains(translate(., 'REWAD', 'rewad'), \"reward\") or contains(translate(., 'COUPN', 'coupn'), \"coupon\") or contains(translate(., 'CASH', 'cash'), \"cash\") or contains(translate(., 'CODE', 'code'), \"code\") or contains(., \"0%\") or contains(., \"1%\") or contains(., \"2%\") or contains(., \"3%\") or contains(., \"4%\") or contains(., \"5%\") or contains(., \"6%\") or contains(., \"7%\") or contains(., \"8%\") or contains(., \"9%\") ]",
                    "js": "function transform(data, prevData) {\n    var invalid = /\\@import\\s+url/i;\n  \n    var percentOff = /\\d+%?\\s*off/i;\n    var percentDiscount = /\\d+%\\s*discount/i;\n    var dollarOff = /\\d+(?:\\.\\d+)?\\s*off/i;\n    var percentBack = /\\d+%\\s*back/i;\n\n    var percentReward = /\\d+%\\s*reward/i;\n    var percentCoupon = /(\\d+%|\\$\\d+)\\s*(?:promotional\\s+)?coupon/i;\n    var percentSaving = /\\d+%\\s*saving/i;\n\n    var earnUpto = /earn\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n\n    var save = /save\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n  \n    var offers = /\\s+offer[s]?\\s+/i;\n    var promoCode = /promo(?:tion)\\s+code\\s+/i;\n    var negPromoCode = /^into\\sthe/i;\n    \n    var redeem = /\\sredeem\\s/i;\n    var redeem2 = /\\.[^.]*?\\sredeem\\s/i;\n  \n    var earnedReward = /\\sbody\\sworks\\sreward/i;\n    var freeShip = /free\\sship/i;\n\n    if (!data || data == \"\") {\n        return null;\n    }\n\tvar match = invalid.exec(data);\n    if (match){\n      return null;\n    }\n  \n    match = percentOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n      match = percentDiscount.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = dollarOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentBack.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentCoupon.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentSaving.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = earnUpto.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = save.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = offers.exec(data);\n    if (match){\n      if(data.length > 100){\n        return null;\n      }\n      else if(data.length < 50){\n        var digitMatch = /(\\d+%|\\$\\d+)\\s+/;\n        var match1 = digitMatch.exec(data);\n        if(match1) {\n          return formatDescription(data);\n        }\n      }\n      else {\n        return formatDescription(data);\n      }\n    }\n  \n    match = promoCode.exec(data);\n    if (match){\n      var match2 = negPromoCode.exec(data);\n      if( !match2)\n      return formatDescription(data);\n    }\n  \n    match = redeem.exec(data);\n    var match2 = redeem2.exec(data);\n    if (match){\n      if(match2 && match2.index){\n        data = data.substr(match2.index+1);\n      }\n      return formatDescription(data);\n    }\n    match = earnedReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n    match = freeShip.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    return null;\n}\n\nfunction formatDescription(desc){\n    if(desc && desc.length > 100){\n        var tPos = [desc.indexOf(\". \", 80) , desc.indexOf(\"! \", 80) , desc.indexOf(\"? \", 80), desc.indexOf(\"; \", 80)];\n        \n        var splitPos = min(tPos, desc.length - 1)\n        return desc.substr(0, splitPos + 1);\n    }\n    return desc;\n}\n\nfunction min(posList, max){\n    var selPos = max;\n    for(var i = 0; i < posList.length; i++) {\n        if(posList[i] == -1){\n            continue;\n        }\n        if(selPos > posList[i]){\n          selPos = posList[i];\n        }\n    }\n    return selPos;\n}\n",
                    "glue": "",
                    "regex": "",
                    "nodeType": "NODE_LIST"
                  }
                ],
                "4": [
                  {
                    "xpath": "//strong[contains(translate(., 'OF', 'of'), \" off \") or contains(translate(., 'OFER', 'ofer'), \"offer\") or contains(translate(., 'REWAD', 'rewad'), \"reward\") or contains(translate(., 'COUPN', 'coupn'), \"coupon\") or contains(translate(., 'CASH', 'cash'), \"cash\")  or contains(translate(., 'CODE', 'code'), \"code\") or contains(., \"0%\") or contains(., \"1%\") or contains(., \"2%\") or contains(., \"3%\") or contains(., \"4%\") or contains(., \"5%\") or contains(., \"6%\") or contains(., \"7%\") or contains(., \"8%\") or contains(., \"9%\")]",
                    "js": "function transform(data, prevData) {\n    var invalid = /\\@import\\s+url/i;\n  \n    var percentOff = /\\d+%?\\s*off/i;\n    var percentDiscount = /\\d+%\\s*discount/i;\n    var dollarOff = /\\d+(?:\\.\\d+)?\\s*off/i;\n    var percentBack = /\\d+%\\s*back/i;\n\n    var percentReward = /\\d+%\\s*reward/i;\n    var percentCoupon = /(\\d+%|\\$\\d+)\\s*(?:promotional\\s+)?coupon/i;\n    var percentSaving = /\\d+%\\s*saving/i;\n\n    var earnUpto = /earn\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n\n    var save = /save\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n  \n    var offers = /\\s+offer[s]?\\s+/i;\n    var promoCode = /promo(?:tion)\\s+code\\s+/i;\n    var negPromoCode = /^into\\sthe/i;\n    \n    var redeem = /\\sredeem\\s/i;\n    var redeem2 = /\\.[^.]*?\\sredeem\\s/i;\n  \n    var earnedReward = /\\sbody\\sworks\\sreward/i;\n    var freeShip = /free\\sship/i;\n\n    if (!data || data == \"\") {\n        return null;\n    }\n\tvar match = invalid.exec(data);\n    if (match){\n      return null;\n    }\n  \n    match = percentOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n      match = percentDiscount.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = dollarOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentBack.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentCoupon.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentSaving.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = earnUpto.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = save.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = offers.exec(data);\n    if (match){\n      if(data.length > 100){\n        return null;\n      }\n      else if(data.length < 50){\n        var digitMatch = /(\\d+%|\\$\\d+)\\s+/;\n        var match1 = digitMatch.exec(data);\n        if(match1) {\n          return formatDescription(data);\n        }\n      }\n      else {\n        return formatDescription(data);\n      }\n    }\n  \n    match = promoCode.exec(data);\n    if (match){\n      var match2 = negPromoCode.exec(data);\n      if( !match2)\n      return formatDescription(data);\n    }\n  \n    match = redeem.exec(data);\n    var match2 = redeem2.exec(data);\n    if (match){\n      if(match2 && match2.index){\n        data = data.substr(match2.index+1);\n      }\n      return formatDescription(data);\n    }\n    match = earnedReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n    match = freeShip.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    return null;\n}\n\nfunction formatDescription(desc){\n    if(desc && desc.length > 100){\n        var tPos = [desc.indexOf(\". \", 80) , desc.indexOf(\"! \", 80) , desc.indexOf(\"? \", 80), desc.indexOf(\"; \", 80)];\n        \n        var splitPos = min(tPos, desc.length - 1)\n        return desc.substr(0, splitPos + 1);\n    }\n    return desc;\n}\n\nfunction min(posList, max){\n    var selPos = max;\n    for(var i = 0; i < posList.length; i++) {\n        if(posList[i] == -1){\n            continue;\n        }\n        if(selPos > posList[i]){\n          selPos = posList[i];\n        }\n    }\n    return selPos;\n}\n",
                    "glue": "",
                    "regex": "",
                    "nodeType": "NODE_LIST"
                  }
                ],
                "5": [
                  {
                    "xpath": "//text()[not(ancestor::b or ancestor::strong)][contains(translate(., 'OF', 'of'), \" off \") or contains(translate(., 'OFER', 'ofer'), \"offer\") or contains(translate(., 'REWAD', 'rewad'), \"reward\") or contains(translate(., 'COUPN', 'coupn'), \"coupon\") or contains(translate(., 'CASH', 'cash'), \"cash\") or contains(translate(., 'CODE', 'code'), \"code\") or contains(., \"0%\") or contains(., \"1%\") or contains(., \"2%\") or contains(., \"3%\") or contains(., \"4%\") or contains(., \"5%\") or contains(., \"6%\") or contains(., \"7%\") or contains(., \"8%\") or contains(., \"9%\") or contains(translate(., 'REDM', 'redm'), \"redeem\") or contains(translate(., 'REWARDS', 'rewards'), \"rewards\") or contains(translate(., 'PROMTIN', 'promtin'), \"promotion\") or contains(translate(., 'SHIPNG', 'shipng'), \"shipping\") ]",
                    "js": "function transform(data, prevData) {\n    var invalid = /\\@import\\s+url/i;\n  \n    var percentOff = /\\d+%?\\s*off/i;\n    var percentDiscount = /\\d+%\\s*discount/i;\n    var dollarOff = /\\d+(?:\\.\\d+)?\\s*off/i;\n    var percentBack = /\\d+%\\s*back/i;\n\n    var percentReward = /\\d+%\\s*reward/i;\n    var percentCoupon = /(\\d+%|\\$\\d+)\\s*(?:promotional\\s+)?coupon/i;\n    var percentSaving = /\\d+%\\s*saving/i;\n\n    var earnUpto = /earn\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n\n    var save = /save\\s*((?:up\\s*to\\s*)|(?:at\\s*least\\s*))?\\d+%/i;\n  \n    var offers = /\\s+offer[s]?\\s+/i;\n    var promoCode = /promo(?:tion)\\s+code\\s+/i;\n    var negPromoCode = /^into\\sthe/i;\n    \n    var redeem = /\\sredeem\\s/i;\n    var redeem2 = /\\.[^.]*?\\sredeem\\s/i;\n  \n    var earnedReward = /\\sbody\\sworks\\sreward/i;\n    var freeShip = /free\\sship/i;\n\n    if (!data || data == \"\") {\n        return null;\n    }\n\tvar match = invalid.exec(data);\n    if (match){\n      return null;\n    }\n  \n    match = percentOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n      match = percentDiscount.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = dollarOff.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentBack.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentCoupon.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = percentSaving.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = earnUpto.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = save.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    match = offers.exec(data);\n    if (match){\n      if(data.length > 100){\n        return null;\n      }\n      else if(data.length < 50){\n        var digitMatch = /(\\d+%|\\$\\d+)\\s+/;\n        var match1 = digitMatch.exec(data);\n        if(match1) {\n          return formatDescription(data);\n        }\n      }\n      else {\n        return formatDescription(data);\n      }\n    }\n  \n    match = promoCode.exec(data);\n    if (match){\n      var match2 = negPromoCode.exec(data);\n      if( !match2)\n      return formatDescription(data);\n    }\n  \n    match = redeem.exec(data);\n    var match2 = redeem2.exec(data);\n    if (match){\n      if(match2 && match2.index){\n        data = data.substr(match2.index+1);\n      }\n      return formatDescription(data);\n    }\n    match = earnedReward.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n    match = freeShip.exec(data);\n    if (match){\n      return formatDescription(data);\n    }\n  \n    return null;\n}\n\nfunction formatDescription(desc){\n    if(desc && desc.length > 100){\n        var tPos = [desc.indexOf(\". \", 80) , desc.indexOf(\"! \", 80) , desc.indexOf(\"? \", 80), desc.indexOf(\"; \", 80)];\n        \n        var splitPos = min(tPos, desc.length - 1)\n        return desc.substr(0, splitPos + 1);\n    }\n    return desc;\n}\n\nfunction min(posList, max){\n    var selPos = max;\n    for(var i = 0; i < posList.length; i++) {\n        if(posList[i] == -1){\n            continue;\n        }\n        if(selPos > posList[i]){\n          selPos = posList[i];\n        }\n    }\n    return selPos;\n}\n",
                    "glue": "",
                    "regex": "",
                    "nodeType": "NODE_LIST"
                  }
                ]
              },
              "name": "http://schema.org/description",
              "dataTypes": [
                "Text"
              ]
            },
            {
              "repeating": true,
              "locations": {
                "1": [
                  {
                    "xpath": "//text()[contains(translate(., 'VALID', 'valid'), ' valid ') or contains(translate(., 'T', 't'), ' through ') or contains(translate(., 'ENDS', 'ends'), ' ends ') or contains(translate(., 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(., 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(., 'OFERGD', 'ofergd'), ' offer good')]",
                    "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ');\n\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                    "glue": "",
                    "regex": "",
                    "nodeType": "NODE_LIST"
                  }
                ],
                "2": [
                  {
                    "xpath": "//img[contains(translate(@alt, 'VALID', 'valid'), ' valid ') or contains(translate(@alt, 'T', 't'), ' through ') or contains(translate(@alt, 'ENDS', 'ends'), ' ends ') or contains(translate(@alt, 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(@alt, 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(@alt, 'OFERGD', 'ofergd'), ' offer good')]/@alt",
                    "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ');\n\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                    "glue": "",
                    "regex": "",
                    "nodeType": "NODE_LIST"
                  }
                ],
                "3": [
                  {
                    "xpath": "//img[contains(translate(@title, 'VALID', 'valid'), ' valid ') or contains(translate(@title, 'T', 't'), ' through ') or contains(translate(@title, 'ENDS', 'ends'), ' ends ') or contains(translate(@title, 'PROMCDE', 'promcde'), ' promo code') or  contains(translate(@title, 'PURCHASE', 'purchase'), ' purchase ') or contains(translate(@title, 'OFERGD', 'ofergd'), ' offer good')]/@title",
                    "js": "function transform(attrValue, prevValue) {\n\tif (!attrValue) {\n\t\treturn null;\n\t}\n\t// normalize values\n\tattrValue = attrValue.replace(/(at|\\@)/, ' ').replace(/[\\.,]{2}/, ',').replace(/\\s([-,\\.])\\s/, \"$1 \").replace(/\\s{2,}/, ' ');\n\n\tvar tm = getTime(attrValue);\n\tvar dt = getDate(attrValue, tm);\n\tvar output = \"\";\n\n\tif (dt) {\n\t\toutput = dt;\n\t} else {\n\t\treturn null;\n\t}\n\tif (tm) {\n\t\toutput += \" \" + tm;\n\t}\n\treturn output;\n}\nfunction getTime(strValue) {\n\tvar regTimeFull = /\\d+\\:\\d+\\s*(?:[ap]\\.?m\\.?)?\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\tvar regTimeHour = /\\d+\\s*(?:[ap]\\.?m\\.?)\\s*(?:(?:[ecmp][sd]?t)|(?:\\s*[\\+|\\-]\\s*\\d{4})|gmt|utc)?/ig;\n\n\tvar tm = matchDatePAttern(strValue, regTimeFull);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\n\tvar tm = matchDatePAttern(strValue, regTimeHour);\n\tif (tm) {\n\t\treturn tm;\n\t}\n\treturn null;\n}\n\nfunction getDate(strValue, tm) {\n\n\t// Tue, 4 Aug 2015\n\tvar regDDMMMYYYY = /\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue Aug 4, 2015\n\tvar regEEEMMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Aug 4, 2015\n\tvar regMMMDDYYYY = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*\\d{4}/ig;\n\n\t// Tue. Aug. 4\n\tvar regEEEMMMDD = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?/ig;\n\n\t// Tue 04Aug\n\tvar regEEEDDMMM = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}(?:nd|rd|st|th)?[,\\.\\-]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// Tue-8/4/2015\n\tvar regEEEMMDDYYYY = /(?:sun(day)?|mon(day)?|tue(s(day)?)?|wed(nesday)?|thu(r(s(day)?)?)?|fri(day)?|sat(urday)?)[,\\.\\-\\/]?\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{2,4}/ig;\n\n\t// 2015-08-04 01:11 -0700\n\tvar regYYYYMMDD = /\\d{4}[,\\.\\-\\/]\\s*\\d{1,2}[,\\.\\-\\/]\\s*\\d{1,2}/g;\n\n\t// 8-04-2015\n\t// 8/4/15 10:08 AM (10:08)\n\tvar regMMDDYYY = /(?:\\d{1,2}\\s*\\/\\s*\\d{1,2}\\s*\\/\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\-\\s*\\d{1,2}\\s*\\-\\s*\\d{2,4})|(?:\\d{1,2}\\s*\\.\\s*\\d{1,2}\\s*\\.\\s*\\d{2,4})/g;\n\n\t// 04 Aug 15-Tue 10:8 AM\n\tvar regDDMMMYYY = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n\n\tvar regDDMMMYYY_anti = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+[,\\.\\-\\/\\s]/ig;\n    \n\t// Aug 04 10:8 AM\n\tvar regMMMDD = /(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)[,\\.\\-\\/]?\\s*\\d+(?:nd|rd|st|th)?[,\\.\\-\\/\\s]/ig;\n\n\t// 04Aug 10:8 AM\n\tvar regDDMMM = /\\d+(?:nd|rd|st|th)?[,\\.\\-\\/]?\\s*(?:jan(?:uary)?|feb(?:ruary)?|mar(?:ch)?|apr(?:il)?|may?|jun(?:e)?|jul(?:y)?|aug(?:ust)?|sep(?:t(?:ember)?)?|oct(?:ober)?|nov(?:ember)?|dec(?:ember)?)/ig;\n\n\t// 10/15\n\tvar regMMDD = /\\d{1,2}[\\/]\\d{1,2}/g;\n\t// var regTOMORROW = /tomorrow/ig;\n\n\tvar dt = matchDatePAttern(strValue, regDDMMMYYYY);\n\tif (dt) {\n\t\t// d MMM yyyy HH:mm:ss, d MMM yyyy h:mm a, d MMM yyyy h a, d MMM yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDDYYYY);\n\tif (dt) {\n\t\t// E MMM d, yyyy h:m a, E MMM d, yyyy\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1')\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDDYYYY);\n\tif (dt) {\n\t\t// MMM d, yyyy h:mm a, MMM d, yyyy h, MMM d, yyyy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s(\\d{4})$/, ', $1');\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMMDD);\n\tif (dt) {\n\t\t// \"E MMM d HH:mm:ss z yyyy\" , \"E MMM d h:m a\" , \"E MMM d\"\n\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// E ddMMM h:mm a\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})\\s/, '$1').trim();\n\t\t} else {\n\t\t\t// E d MMM\n\t\t\treturn dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t\t}\n\n\t}\n\n\tdt = matchDatePAttern(strValue, regEEEMMDDYYYY);\n\tif (dt) {\n\t\t// E, M/d/yyyy h:m a, E, M/d/yy h:m a, E, M/d/yy HH:mm, E, M/d/yy\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/').replace(/^(.{3})\\//, '$1, ');\n\t}\n\n\tdt = matchDatePAttern(strValue, regYYYYMMDD);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// yyyy-MM-dd'T'H:mma, yyyy-MM-dd'T'H:mm\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-') + 'T';\n\t\t} else {\n\t\t\t// yyyy-MM-dd\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDDYYY);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// M/d/yy h:m a\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '/');\n\t\t} else {\n\t\t\t// \"MM-dd-yyyy\"\n\t\t\treturn dt.replace(/[\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMMYYY);\n\tif (dt) {\n\t  dt = dt.replace(/august/i, 'aug').replace(/(?:nd|rd|st|th)/, ' ').replace(/[,\\.\\-\\/]/g, ' ').replace(/\\s+/g, ' ').trim().replace(/\\s/g, '-');\n\t  var dt2 = matchDatePAttern(strValue, regDDMMMYYY_anti);\n\t  if(dt2){\n\t    dt = dt.substr(dt.indexOf('-')+1 ).replace('-', ', ');\n\t  }\n\t  // dd-MMM-yyyy h:m a, dd-MMM-yyyy\n\t  return dt;\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMMDD);\n\tif (dt) {\n\t\t// MMM dd h:m a , MMM d\n\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').trim();\n\t}\n\n\tdt = matchDatePAttern(strValue, regDDMMM);\n\tif (dt) {\n\t\tif (tm) {\n\t\t\t// ddMMM h:m a\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, \"\").replace(/\\s*/g, '').trim();\n\t\t} else {\n\t\t\t// MMM d\n\t\t\treturn dt.replace(/[,\\.\\-\\/]/g, ' ').replace(/(\\d{1,2})/, ' $1 ').replace(/\\s+/g, ' ').replace(/(\\d{1,2})(.+)/, '$2 $1').replace(/\\s+/g, ' ').trim();\n\t\t}\n\t}\n\n\tdt = matchDatePAttern(strValue, regMMDD);\n\tif (dt) {\n        var parts = dt.split('/');\n      \tvar monthNames = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                          \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      \n\t\treturn monthNames[parts[0]-0] + \", \" + parts[1];\n\t}\n\n\treturn null;\n}\n\nfunction matchDatePAttern(strValue, regex) {\n\tvar m;\n\tvar oldM;\n\twhile ((m = regex.exec(strValue)) !== null) {\n\t\t// This is necessary to avoid infinite loops with zero-width matches\n\t\tif (m.index === regex.lastIndex) {\n\t\t\tregex.lastIndex++;\n\t\t}\n\t\toldM = m;\n\t}\n\tif (oldM) {\n\t\treturn oldM[0];\n\t}\n\treturn null;\n}",
                    "glue": "",
                    "regex": "",
                    "nodeType": "NODE_LIST"
                  }
                ]
              },
              "name": "http://schema.org/validThrough",
              "dataTypes": [
                "DateTime"
              ]
            },
            {
              "repeating": true,
              "locations": {
                "1": [
                  {
                    "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(., 'REWAD', 'rewad'), \"reward\") or contains(translate(., 'COUPN', 'coupn'), \"coupon\") or contains(translate(., 'CASH', 'cash'), \"cash\") or contains(translate(., 'CODE', 'code'), \"code\") ]/parent::a[1]/@href",
                    "js": "",
                    "glue": "",
                    "regex": "",
                    "nodeType": "NODE_LIST"
                  }
                ],
                "2": [
                  {
                    "xpath": "//img[contains(translate(@title, 'OF', 'of'), \" off \") or contains(@title, \"0%\") or contains(@title, \"1%\") or contains(@title, \"2%\") or contains(@title, \"3%\") or contains(@title, \"4%\") or contains(@title, \"5%\") or contains(@title, \"6%\") or contains(@title, \"7%\") or contains(@title, \"8%\") or contains(@title, \"9%\") or contains(translate(., 'REWAD', 'rewad'), \"reward\") or contains(translate(., 'COUPN', 'coupn'), \"coupon\") or contains(translate(., 'CASH', 'cash'), \"cash\") or contains(translate(., 'CODE', 'code'), \"code\") ]/parent::a[1]/@href",
                    "js": "",
                    "glue": "",
                    "regex": "",
                    "nodeType": "NODE_LIST"
                  }
                ]
              },
              "name": "http://schema.org/url",
              "dataTypes": [
                "URL"
              ]
            }
          ]
        },
        {
          "id": "5aabd401-e355-41b2-9c9d-9e9ee3a1e70c",
          "type": "http://schema.org/Organization",
          "attributes": [
            {
              "repeating": true,
              "locations": {
                "1": [
                  {
                    "xpath": "concat(\"HereTheNameOfTheBroker\", \"\")",
                    "js": "",
                    "glue": "",
                    "regex": "",
                    "nodeType": "STRING"
                  }
                ]
              },
              "name": "http://schema.org/name",
              "dataTypes": [
                "Text"
              ]
            }
          ]
        },
        {
          "id": "a3f2df32-7b35-4c77-8513-72ac9e26648e",
          "type": "http://schema.org/ImageObject",
          "attributes": [
            {
              "repeating": true,
              "locations": {
                "1": [
                  {
                    "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(@alt, 'REWAD', 'rewad'), \"reward\") or contains(translate(@alt, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@alt, 'CASH', 'cash'), \"cash\") or contains(translate(@alt, 'CODE', 'code'), \"code\") or contains(translate(@alt, 'SHIPNG', 'shipng'), \"shipping\")]/@src",
                    "js": "",
                    "glue": "",
                    "regex": "",
                    "nodeType": "NODE_LIST"
                  }
                ],
                "2": [
                  {
                    "xpath": "//img[contains(translate(@title, 'OF', 'of'), \" off \") or contains(@title, \"0%\") or contains(@title, \"1%\") or contains(@title, \"2%\") or contains(@title, \"3%\") or contains(@title, \"4%\") or contains(@title, \"5%\") or contains(@title, \"6%\") or contains(@title, \"7%\") or contains(@title, \"8%\") or contains(@title, \"9%\") or contains(translate(@title, 'REWAD', 'rewad'), \"reward\") or contains(translate(@title, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@title, 'CASH', 'cash'), \"cash\") or contains(translate(@title, 'CODE', 'code'), \"code\") or contains(translate(@title, 'SHIPNG', 'shipng'), \"shipping\")]/@src",
                    "js": "",
                    "glue": "",
                    "regex": "",
                    "nodeType": "NODE_LIST"
                  }
                ]
              },
              "name": "http://schema.org/url",
              "dataTypes": [
                "URL"
              ]
            },
            {
              "repeating": true,
              "locations": {
                "1": [
                  {
                    "xpath": "//img[contains(translate(@alt, 'OF', 'of'), \" off \") or contains(@alt, \"0%\") or contains(@alt, \"1%\") or contains(@alt, \"2%\") or contains(@alt, \"3%\") or contains(@alt, \"4%\") or contains(@alt, \"5%\") or contains(@alt, \"6%\") or contains(@alt, \"7%\") or contains(@alt, \"8%\") or contains(@alt, \"9%\") or contains(translate(@alt, 'REWAD', 'rewad'), \"reward\") or contains(translate(@alt, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@alt, 'CASH', 'cash'), \"cash\") or contains(translate(@alt, 'CODE', 'code'), \"code\") or contains(translate(@alt, 'SHIPNG', 'shipng'), \"shipping\")]/@alt",
                    "js": "",
                    "glue": "",
                    "regex": "",
                    "nodeType": "NODE_LIST"
                  }
                ],
                "2": [
                  {
                    "xpath": "//img[contains(translate(@title, 'OF', 'of'), \" off \") or contains(@title, \"0%\") or contains(@title, \"1%\") or contains(@title, \"2%\") or contains(@title, \"3%\") or contains(@title, \"4%\") or contains(@title, \"5%\") or contains(@title, \"6%\") or contains(@title, \"7%\") or contains(@title, \"8%\") or contains(@title, \"9%\") or contains(translate(@title, 'REWAD', 'rewad'), \"reward\") or contains(translate(@title, 'COUPN', 'coupn'), \"coupon\") or contains(translate(@title, 'CASH', 'cash'), \"cash\") or contains(translate(@title, 'CODE', 'code'), \"code\") or contains(translate(@title, 'SHIPNG', 'shipng'), \"shipping\")]/@title",
                    "js": "",
                    "glue": "",
                    "regex": "",
                    "nodeType": "NODE_LIST"
                  }
                ]
              },
              "name": "http://schema.org/__test",
              "transient": true,
              "dataTypes": [
                "Text"
              ]
            }
          ]
        }
      ],
      "edgeRules": [
        {
          "from": {
            "entityRule": "f0cb28cf-6320-4046-82e9-0bf962223333",
            "matchAttr": ""
          },
          "to": {
            "entityRule": "5aabd401-e355-41b2-9c9d-9e9ee3a1e70c",
            "matchAttr": ""
          },
          "predicate": "http://schema.org/broker",
          "cardinality": "MANY_TO_ONE"
        },
        {
          "from": {
            "entityRule": "f0cb28cf-6320-4046-82e9-0bf962223333",
            "matchAttr": "http://schema.org/description"
          },
          "to": {
            "entityRule": "a3f2df32-7b35-4c77-8513-72ac9e26648e",
            "matchAttr": "http://schema.org/__test"
          },
          "predicate": "http://schema.org/image",
          "cardinality": "ONE_TO_ONE",
          "matchThreshold": "0.8"
        }
      ]
    },
    "preCleanInfo": []
  }
